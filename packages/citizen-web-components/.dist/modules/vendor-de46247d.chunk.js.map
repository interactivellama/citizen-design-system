{"version":3,"file":"vendor-de46247d.chunk.js","sources":["../../../../node_modules/@lwc/engine/dist/engine.js"],"sourcesContent":["/* proxy-compat-disable */\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect() {\n  // Don't apply polyfill when ProxyCompat is enabled.\n  if ('getKey' in Proxy) {\n    return false;\n  }\n\n  const proxy = new Proxy([3, 4], {});\n  const res = [1, 2].concat(proxy);\n  return res.length !== 4;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst {\n  isConcatSpreadable\n} = Symbol;\nconst {\n  isArray\n} = Array;\nconst {\n  slice: ArraySlice,\n  unshift: ArrayUnshift,\n  shift: ArrayShift\n} = Array.prototype;\n\nfunction isObject(O) {\n  return typeof O === 'object' ? O !== null : typeof O === 'function';\n} // https://www.ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n\n\nfunction isSpreadable(O) {\n  if (!isObject(O)) {\n    return false;\n  }\n\n  const spreadable = O[isConcatSpreadable];\n  return spreadable !== undefined ? Boolean(spreadable) : isArray(O);\n} // https://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat\n\n\nfunction ArrayConcatPolyfill(..._args) {\n  const O = Object(this);\n  const A = [];\n  let N = 0;\n  const items = ArraySlice.call(arguments);\n  ArrayUnshift.call(items, O);\n\n  while (items.length) {\n    const E = ArrayShift.call(items);\n\n    if (isSpreadable(E)) {\n      let k = 0;\n      const length = E.length;\n\n      for (k; k < length; k += 1, N += 1) {\n        if (k in E) {\n          const subElement = E[k];\n          A[N] = subElement;\n        }\n      }\n    } else {\n      A[N] = E;\n      N += 1;\n    }\n  }\n\n  return A;\n}\n\nfunction apply() {\n  Array.prototype.concat = ArrayConcatPolyfill;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nif (detect()) {\n  apply();\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect$1(propName) {\n  return Object.getOwnPropertyDescriptor(Element.prototype, propName) === undefined;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst {\n  hasAttribute,\n  getAttribute,\n  setAttribute,\n  setAttributeNS,\n  removeAttribute,\n  removeAttributeNS\n} = Element.prototype;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// that doesn't follow the regular transformation process. e.g.: `aria-labeledby` <=> `ariaLabelBy`\n\nconst ARIA_REGEX = /^aria/;\nconst nodeToAriaPropertyValuesMap = new WeakMap();\nconst {\n  hasOwnProperty\n} = Object.prototype;\nconst {\n  replace: StringReplace,\n  toLowerCase: StringToLowerCase\n} = String.prototype;\n\nfunction getAriaPropertyMap(elm) {\n  let map = nodeToAriaPropertyValuesMap.get(elm);\n\n  if (map === undefined) {\n    map = {};\n    nodeToAriaPropertyValuesMap.set(elm, map);\n  }\n\n  return map;\n}\n\nfunction getNormalizedAriaPropertyValue(value) {\n  return value == null ? null : value + '';\n}\n\nfunction createAriaPropertyPropertyDescriptor(propName, attrName) {\n  return {\n    get() {\n      const map = getAriaPropertyMap(this);\n\n      if (hasOwnProperty.call(map, propName)) {\n        return map[propName];\n      } // otherwise just reflect what's in the attribute\n\n\n      return hasAttribute.call(this, attrName) ? getAttribute.call(this, attrName) : null;\n    },\n\n    set(newValue) {\n      const normalizedValue = getNormalizedAriaPropertyValue(newValue);\n      const map = getAriaPropertyMap(this);\n      map[propName] = normalizedValue; // reflect into the corresponding attribute\n\n      if (newValue === null) {\n        removeAttribute.call(this, attrName);\n      } else {\n        setAttribute.call(this, attrName, newValue);\n      }\n    },\n\n    configurable: true,\n    enumerable: true\n  };\n}\n\nfunction patch(propName) {\n  // Typescript is inferring the wrong function type for this particular\n  // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n  // @ts-ignore type-mismatch\n  const replaced = StringReplace.call(propName, ARIA_REGEX, 'aria-');\n  const attrName = StringToLowerCase.call(replaced);\n  const descriptor = createAriaPropertyPropertyDescriptor(propName, attrName);\n  Object.defineProperty(Element.prototype, propName, descriptor);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// https://wicg.github.io/aom/spec/aria-reflection.html\n\nconst ElementPrototypeAriaPropertyNames = ['ariaAutoComplete', 'ariaChecked', 'ariaCurrent', 'ariaDisabled', 'ariaExpanded', 'ariaHasPopup', 'ariaHidden', 'ariaInvalid', 'ariaLabel', 'ariaLevel', 'ariaMultiLine', 'ariaMultiSelectable', 'ariaOrientation', 'ariaPressed', 'ariaReadOnly', 'ariaRequired', 'ariaSelected', 'ariaSort', 'ariaValueMax', 'ariaValueMin', 'ariaValueNow', 'ariaValueText', 'ariaLive', 'ariaRelevant', 'ariaAtomic', 'ariaBusy', 'ariaActiveDescendant', 'ariaControls', 'ariaDescribedBy', 'ariaFlowTo', 'ariaLabelledBy', 'ariaOwns', 'ariaPosInSet', 'ariaSetSize', 'ariaColCount', 'ariaColIndex', 'ariaDetails', 'ariaErrorMessage', 'ariaKeyShortcuts', 'ariaModal', 'ariaPlaceholder', 'ariaRoleDescription', 'ariaRowCount', 'ariaRowIndex', 'ariaRowSpan', 'ariaColSpan', 'role'];\n/**\n * Note: Attributes aria-dropeffect and aria-grabbed were deprecated in\n * ARIA 1.1 and do not have corresponding IDL attributes.\n */\n\nfor (let i = 0, len = ElementPrototypeAriaPropertyNames.length; i < len; i += 1) {\n  const propName = ElementPrototypeAriaPropertyNames[i];\n\n  if (detect$1(propName)) {\n    patch(propName);\n  }\n}\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction invariant(value, msg) {\n  if (!value) {\n    throw new Error(`Invariant Violation: ${msg}`);\n  }\n}\n\nfunction isTrue(value, msg) {\n  if (!value) {\n    throw new Error(`Assert Violation: ${msg}`);\n  }\n}\n\nfunction isFalse(value, msg) {\n  if (value) {\n    throw new Error(`Assert Violation: ${msg}`);\n  }\n}\n\nfunction fail(msg) {\n  throw new Error(msg);\n}\n\nvar assert =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  invariant: invariant,\n  isTrue: isTrue,\n  isFalse: isFalse,\n  fail: fail\n});\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst {\n  assign,\n  create,\n  defineProperties,\n  defineProperty,\n  freeze,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getPrototypeOf,\n  hasOwnProperty: hasOwnProperty$1,\n  keys,\n  seal,\n  setPrototypeOf\n} = Object;\nconst {\n  isArray: isArray$1\n} = Array;\nconst {\n  filter: ArrayFilter,\n  find: ArrayFind,\n  forEach,\n  indexOf: ArrayIndexOf,\n  join: ArrayJoin,\n  map: ArrayMap,\n  push: ArrayPush,\n  reduce: ArrayReduce,\n  reverse: ArrayReverse,\n  slice: ArraySlice$1,\n  splice: ArraySplice,\n  unshift: ArrayUnshift$1\n} = Array.prototype;\nconst {\n  charCodeAt: StringCharCodeAt,\n  replace: StringReplace$1,\n  slice: StringSlice,\n  toLowerCase: StringToLowerCase$1\n} = String.prototype;\n\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\n\nfunction isNull(obj) {\n  return obj === null;\n}\n\nfunction isTrue$1(obj) {\n  return obj === true;\n}\n\nfunction isFalse$1(obj) {\n  return obj === false;\n}\n\nfunction isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nfunction isObject$1(obj) {\n  return typeof obj === 'object';\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string';\n}\n\nfunction isNumber(obj) {\n  return typeof obj === 'number';\n}\n\nconst OtS = {}.toString;\n\nfunction toString(obj) {\n  if (obj && obj.toString) {\n    // Arrays might hold objects with \"null\" prototype So using\n    // Array.prototype.toString directly will cause an error Iterate through\n    // all the items and handle individually.\n    if (isArray$1(obj)) {\n      return ArrayJoin.call(ArrayMap.call(obj, toString), ',');\n    }\n\n    return obj.toString();\n  } else if (typeof obj === 'object') {\n    return OtS.call(obj);\n  } else {\n    return obj + emptyString;\n  }\n}\n\nfunction getPropertyDescriptor(o, p) {\n  do {\n    const d = getOwnPropertyDescriptor(o, p);\n\n    if (!isUndefined(d)) {\n      return d;\n    }\n\n    o = getPrototypeOf(o);\n  } while (o !== null);\n}\n\nconst emptyString = '';\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/*\n * In IE11, symbols are expensive.\n * Due to the nature of the symbol polyfill. This method abstract the\n * creation of symbols, so we can fallback to string when native symbols\n * are not supported. Note that we can't use typeof since it will fail when transpiling.\n */\n\nconst hasNativeSymbolsSupport = Symbol('x').toString() === 'Symbol(x)';\n\nfunction createHiddenField(key, namespace) {\n  return hasNativeSymbolsSupport ? Symbol(key) : `$$lwc-${namespace}-${key}$$`;\n}\n\nconst hiddenFieldsMap = new WeakMap();\n\nfunction setHiddenField(o, field, value) {\n  let valuesByField = hiddenFieldsMap.get(o);\n\n  if (isUndefined(valuesByField)) {\n    valuesByField = create(null);\n    hiddenFieldsMap.set(o, valuesByField);\n  }\n\n  valuesByField[field] = value;\n}\n\nfunction getHiddenField(o, field) {\n  const valuesByField = hiddenFieldsMap.get(o);\n\n  if (!isUndefined(valuesByField)) {\n    return valuesByField[field];\n  }\n}\n/** version: 1.3.2 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst defaultDefHTMLPropertyNames = ['accessKey', 'dir', 'draggable', 'hidden', 'id', 'lang', 'tabIndex', 'title']; // Few more exceptions that are using the attribute name to match the property in lowercase.\n// this list was compiled from https://msdn.microsoft.com/en-us/library/ms533062(v=vs.85).aspx\n// and https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n// Note: this list most be in sync with the compiler as well.\n\nconst HTMLPropertyNamesWithLowercasedReflectiveAttributes = ['accessKey', 'readOnly', 'tabIndex', 'bgColor', 'colSpan', 'rowSpan', 'contentEditable', 'dateTime', 'formAction', 'isMap', 'maxLength', 'useMap'];\n\nfunction offsetPropertyErrorMessage(name) {\n  return `Using the \\`${name}\\` property is an anti-pattern because it rounds the value to an integer. Instead, use the \\`getBoundingClientRect\\` method to obtain fractional values for the size of an element and its position relative to the viewport.`;\n} // Global HTML Attributes & Properties\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\n\n\nconst globalHTMLProperties = assign(create(null), {\n  accessKey: {\n    attribute: 'accesskey'\n  },\n  accessKeyLabel: {\n    readOnly: true\n  },\n  className: {\n    attribute: 'class',\n    error: 'Using the `className` property is an anti-pattern because of slow runtime behavior and potential conflicts with classes provided by the owner element. Use the `classList` API instead.'\n  },\n  contentEditable: {\n    attribute: 'contenteditable'\n  },\n  dataset: {\n    readOnly: true,\n    error: \"Using the `dataset` property is an anti-pattern because it can't be statically analyzed. Expose each property individually using the `@api` decorator instead.\"\n  },\n  dir: {\n    attribute: 'dir'\n  },\n  draggable: {\n    attribute: 'draggable'\n  },\n  dropzone: {\n    attribute: 'dropzone',\n    readOnly: true\n  },\n  hidden: {\n    attribute: 'hidden'\n  },\n  id: {\n    attribute: 'id'\n  },\n  inputMode: {\n    attribute: 'inputmode'\n  },\n  lang: {\n    attribute: 'lang'\n  },\n  slot: {\n    attribute: 'slot',\n    error: 'Using the `slot` property is an anti-pattern.'\n  },\n  spellcheck: {\n    attribute: 'spellcheck'\n  },\n  style: {\n    attribute: 'style'\n  },\n  tabIndex: {\n    attribute: 'tabindex'\n  },\n  title: {\n    attribute: 'title'\n  },\n  translate: {\n    attribute: 'translate'\n  },\n  // additional \"global attributes\" that are not present in the link above.\n  isContentEditable: {\n    readOnly: true\n  },\n  offsetHeight: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetHeight')\n  },\n  offsetLeft: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetLeft')\n  },\n  offsetParent: {\n    readOnly: true\n  },\n  offsetTop: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetTop')\n  },\n  offsetWidth: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetWidth')\n  },\n  role: {\n    attribute: 'role'\n  }\n});\nconst AttrNameToPropNameMap = create(null);\nconst PropNameToAttrNameMap = create(null); // Synthetic creation of all AOM property descriptors for Custom Elements\n\nforEach.call(ElementPrototypeAriaPropertyNames, propName => {\n  // Typescript is inferring the wrong function type for this particular\n  // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n  // @ts-ignore type-mismatch\n  const attrName = StringToLowerCase$1.call(StringReplace$1.call(propName, /^aria/, 'aria-'));\n  AttrNameToPropNameMap[attrName] = propName;\n  PropNameToAttrNameMap[propName] = attrName;\n});\nforEach.call(defaultDefHTMLPropertyNames, propName => {\n  const attrName = StringToLowerCase$1.call(propName);\n  AttrNameToPropNameMap[attrName] = propName;\n  PropNameToAttrNameMap[propName] = attrName;\n});\nforEach.call(HTMLPropertyNamesWithLowercasedReflectiveAttributes, propName => {\n  const attrName = StringToLowerCase$1.call(propName);\n  AttrNameToPropNameMap[attrName] = propName;\n  PropNameToAttrNameMap[propName] = attrName;\n});\nconst CAMEL_REGEX = /-([a-z])/g;\n/**\n * This method maps between attribute names\n * and the corresponding property name.\n */\n\nfunction getPropNameFromAttrName(attrName) {\n  if (isUndefined(AttrNameToPropNameMap[attrName])) {\n    AttrNameToPropNameMap[attrName] = StringReplace$1.call(attrName, CAMEL_REGEX, g => g[1].toUpperCase());\n  }\n\n  return AttrNameToPropNameMap[attrName];\n}\nconst CAPS_REGEX = /[A-Z]/g;\n/**\n * This method maps between property names\n * and the corresponding attribute name.\n */\n\nfunction getAttrNameFromPropName(propName) {\n  if (isUndefined(PropNameToAttrNameMap[propName])) {\n    PropNameToAttrNameMap[propName] = StringReplace$1.call(propName, CAPS_REGEX, match => '-' + match.toLowerCase());\n  }\n\n  return PropNameToAttrNameMap[propName];\n}\nlet controlledElement = null;\nlet controlledAttributeName;\nfunction isAttributeLocked(elm, attrName) {\n  return elm !== controlledElement || attrName !== controlledAttributeName;\n}\nfunction lockAttribute(_elm, _key) {\n  controlledElement = null;\n  controlledAttributeName = undefined;\n}\nfunction unlockAttribute(elm, key) {\n  controlledElement = elm;\n  controlledAttributeName = key;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet nextTickCallbackQueue = [];\nconst SPACE_CHAR = 32;\nconst EmptyObject = seal(create(null));\nconst EmptyArray = seal([]);\n\nfunction flushCallbackQueue() {\n  if (process.env.NODE_ENV !== 'production') {\n    if (nextTickCallbackQueue.length === 0) {\n      throw new Error(`Internal Error: If callbackQueue is scheduled, it is because there must be at least one callback on this pending queue.`);\n    }\n  }\n\n  const callbacks = nextTickCallbackQueue;\n  nextTickCallbackQueue = []; // reset to a new queue\n\n  for (let i = 0, len = callbacks.length; i < len; i += 1) {\n    callbacks[i]();\n  }\n}\n\nfunction addCallbackToNextTick(callback) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isFunction(callback)) {\n      throw new Error(`Internal Error: addCallbackToNextTick() can only accept a function callback`);\n    }\n  }\n\n  if (nextTickCallbackQueue.length === 0) {\n    Promise.resolve().then(flushCallbackQueue);\n  }\n\n  ArrayPush.call(nextTickCallbackQueue, callback);\n}\nfunction isCircularModuleDependency(value) {\n  return hasOwnProperty$1.call(value, '__circular__');\n}\n/**\n * When LWC is used in the context of an Aura application, the compiler produces AMD\n * modules, that doesn't resolve properly circular dependencies between modules. In order\n * to circumvent this issue, the module loader returns a factory with a symbol attached\n * to it.\n *\n * This method returns the resolved value if it received a factory as argument. Otherwise\n * it returns the original value.\n */\n\nfunction resolveCircularModuleDependency(fn) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isFunction(fn)) {\n      throw new TypeError(`Circular module dependency must be a function.`);\n    }\n  }\n\n  return fn();\n}\nconst useSyntheticShadow = hasOwnProperty$1.call(Element.prototype, '$shadowToken$');\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getComponentTag(vm) {\n  // Element.prototype.tagName getter might be poisoned. We need to use a try/catch to protect the\n  // engine internal when accessing the tagName property.\n  try {\n    return `<${StringToLowerCase$1.call(vm.elm.tagName)}>`;\n  } catch (error) {\n    return '<invalid-tag-name>';\n  }\n} // TODO [#1695]: Unify getComponentStack and getErrorComponentStack\n\nfunction getComponentStack(vm) {\n  const stack = [];\n  let prefix = '';\n\n  while (!isNull(vm.owner)) {\n    ArrayPush.call(stack, prefix + getComponentTag(vm));\n    vm = vm.owner;\n    prefix += '\\t';\n  }\n\n  return ArrayJoin.call(stack, '\\n');\n}\nfunction getErrorComponentStack(vm) {\n  const wcStack = [];\n  let currentVm = vm;\n\n  while (!isNull(currentVm)) {\n    ArrayPush.call(wcStack, getComponentTag(currentVm));\n    currentVm = currentVm.owner;\n  }\n\n  return wcStack.reverse().join('\\n\\t');\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction logError(message, vm) {\n  let msg = `[LWC error]: ${message}`;\n\n  if (!isUndefined(vm)) {\n    msg = `${msg}\\n${getComponentStack(vm)}`;\n  }\n\n  if (process.env.NODE_ENV === 'test') {\n    /* eslint-disable-next-line no-console */\n    console.error(msg);\n    return;\n  }\n\n  try {\n    throw new Error(msg);\n  } catch (e) {\n    /* eslint-disable-next-line no-console */\n    console.error(e);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction handleEvent(event, vnode) {\n  const {\n    type\n  } = event;\n  const {\n    data: {\n      on\n    }\n  } = vnode;\n  const handler = on && on[type]; // call event handler if exists\n\n  if (handler) {\n    handler.call(undefined, event);\n  }\n}\n\nfunction createListener() {\n  return function handler(event) {\n    handleEvent(event, handler.vnode);\n  };\n}\n\nfunction updateAllEventListeners(oldVnode, vnode) {\n  if (isUndefined(oldVnode.listener)) {\n    createAllEventListeners(vnode);\n  } else {\n    vnode.listener = oldVnode.listener;\n    vnode.listener.vnode = vnode;\n  }\n}\n\nfunction createAllEventListeners(vnode) {\n  const {\n    data: {\n      on\n    }\n  } = vnode;\n\n  if (isUndefined(on)) {\n    return;\n  }\n\n  const elm = vnode.elm;\n  const listener = vnode.listener = createListener();\n  listener.vnode = vnode;\n  let name;\n\n  for (name in on) {\n    elm.addEventListener(name, listener);\n  }\n}\n\nvar modEvents = {\n  update: updateAllEventListeners,\n  create: createAllEventListeners\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\nconst xmlNS = 'http://www.w3.org/XML/1998/namespace';\nconst ColonCharCode = 58;\n\nfunction updateAttrs(oldVnode, vnode) {\n  const {\n    data: {\n      attrs\n    }\n  } = vnode;\n\n  if (isUndefined(attrs)) {\n    return;\n  }\n\n  let {\n    data: {\n      attrs: oldAttrs\n    }\n  } = oldVnode;\n\n  if (oldAttrs === attrs) {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isUndefined(oldAttrs) || keys(oldAttrs).join(',') === keys(attrs).join(','), `vnode.data.attrs cannot change shape.`);\n  }\n\n  const elm = vnode.elm;\n  let key;\n  oldAttrs = isUndefined(oldAttrs) ? EmptyObject : oldAttrs; // update modified attributes, add new attributes\n  // this routine is only useful for data-* attributes in all kind of elements\n  // and aria-* in standard elements (custom elements will use props for these)\n\n  for (key in attrs) {\n    const cur = attrs[key];\n    const old = oldAttrs[key];\n\n    if (old !== cur) {\n      unlockAttribute(elm, key);\n\n      if (StringCharCodeAt.call(key, 3) === ColonCharCode) {\n        // Assume xml namespace\n        elm.setAttributeNS(xmlNS, key, cur);\n      } else if (StringCharCodeAt.call(key, 5) === ColonCharCode) {\n        // Assume xlink namespace\n        elm.setAttributeNS(xlinkNS, key, cur);\n      } else if (isNull(cur)) {\n        elm.removeAttribute(key);\n      } else {\n        elm.setAttribute(key, cur);\n      }\n\n      lockAttribute();\n    }\n  }\n}\n\nconst emptyVNode = {\n  data: {}\n};\nvar modAttrs = {\n  create: vnode => updateAttrs(emptyVNode, vnode),\n  update: updateAttrs\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction isLiveBindingProp(sel, key) {\n  // For properties with live bindings, we read values from the DOM element\n  // instead of relying on internally tracked values.\n  return sel === 'input' && (key === 'value' || key === 'checked');\n}\n\nfunction update(oldVnode, vnode) {\n  const props = vnode.data.props;\n\n  if (isUndefined(props)) {\n    return;\n  }\n\n  const oldProps = oldVnode.data.props;\n\n  if (oldProps === props) {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isUndefined(oldProps) || keys(oldProps).join(',') === keys(props).join(','), 'vnode.data.props cannot change shape.');\n  }\n\n  const elm = vnode.elm;\n  const isFirstPatch = isUndefined(oldProps);\n  const {\n    sel\n  } = vnode;\n\n  for (const key in props) {\n    const cur = props[key];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(key in elm)) {\n        // TODO [#1297]: Move this validation to the compiler\n        assert.fail(`Unknown public property \"${key}\" of element <${sel}>. This is likely a typo on the corresponding attribute \"${getAttrNameFromPropName(key)}\".`);\n      }\n    } // if it is the first time this element is patched, or the current value is different to the previous value...\n\n\n    if (isFirstPatch || cur !== (isLiveBindingProp(sel, key) ? elm[key] : oldProps[key])) {\n      elm[key] = cur;\n    }\n  }\n}\n\nconst emptyVNode$1 = {\n  data: {}\n};\nvar modProps = {\n  create: vnode => update(emptyVNode$1, vnode),\n  update\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst classNameToClassMap = create(null);\n\nfunction getMapFromClassName(className) {\n  // Intentionally using == to match undefined and null values from computed style attribute\n  if (className == null) {\n    return EmptyObject;\n  } // computed class names must be string\n\n\n  className = isString(className) ? className : className + '';\n  let map = classNameToClassMap[className];\n\n  if (map) {\n    return map;\n  }\n\n  map = create(null);\n  let start = 0;\n  let o;\n  const len = className.length;\n\n  for (o = 0; o < len; o++) {\n    if (StringCharCodeAt.call(className, o) === SPACE_CHAR) {\n      if (o > start) {\n        map[StringSlice.call(className, start, o)] = true;\n      }\n\n      start = o + 1;\n    }\n  }\n\n  if (o > start) {\n    map[StringSlice.call(className, start, o)] = true;\n  }\n\n  classNameToClassMap[className] = map;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // just to make sure that this object never changes as part of the diffing algo\n    freeze(map);\n  }\n\n  return map;\n}\n\nfunction updateClassAttribute(oldVnode, vnode) {\n  const {\n    elm,\n    data: {\n      className: newClass\n    }\n  } = vnode;\n  const {\n    data: {\n      className: oldClass\n    }\n  } = oldVnode;\n\n  if (oldClass === newClass) {\n    return;\n  }\n\n  const {\n    classList\n  } = elm;\n  const newClassMap = getMapFromClassName(newClass);\n  const oldClassMap = getMapFromClassName(oldClass);\n  let name;\n\n  for (name in oldClassMap) {\n    // remove only if it is not in the new class collection and it is not set from within the instance\n    if (isUndefined(newClassMap[name])) {\n      classList.remove(name);\n    }\n  }\n\n  for (name in newClassMap) {\n    if (isUndefined(oldClassMap[name])) {\n      classList.add(name);\n    }\n  }\n}\n\nconst emptyVNode$2 = {\n  data: {}\n};\nvar modComputedClassName = {\n  create: vnode => updateClassAttribute(emptyVNode$2, vnode),\n  update: updateClassAttribute\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction updateStyleAttribute(oldVnode, vnode) {\n  const {\n    style: newStyle\n  } = vnode.data;\n\n  if (oldVnode.data.style === newStyle) {\n    return;\n  }\n\n  const elm = vnode.elm;\n  const {\n    style\n  } = elm;\n\n  if (!isString(newStyle) || newStyle === '') {\n    removeAttribute.call(elm, 'style');\n  } else {\n    style.cssText = newStyle;\n  }\n}\n\nconst emptyVNode$3 = {\n  data: {}\n};\nvar modComputedStyle = {\n  create: vnode => updateStyleAttribute(emptyVNode$3, vnode),\n  update: updateStyleAttribute\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The compiler takes care of transforming the inline classnames into an object. It's faster to set the\n// different classnames properties individually instead of via a string.\n\nfunction createClassAttribute(vnode) {\n  const {\n    elm,\n    data: {\n      classMap\n    }\n  } = vnode;\n\n  if (isUndefined(classMap)) {\n    return;\n  }\n\n  const {\n    classList\n  } = elm;\n\n  for (const name in classMap) {\n    classList.add(name);\n  }\n}\n\nvar modStaticClassName = {\n  create: createClassAttribute\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The compiler takes care of transforming the inline style into an object. It's faster to set the\n// different style properties individually instead of via a string.\n\nfunction createStyleAttribute(vnode) {\n  const {\n    elm,\n    data: {\n      styleMap\n    }\n  } = vnode;\n\n  if (isUndefined(styleMap)) {\n    return;\n  }\n\n  const {\n    style\n  } = elm;\n\n  for (const name in styleMap) {\n    style[name] = styleMap[name];\n  }\n}\n\nvar modStaticStyle = {\n  create: createStyleAttribute\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction createContext(vnode) {\n  const {\n    data: {\n      context\n    }\n  } = vnode;\n\n  if (isUndefined(context)) {\n    return;\n  }\n\n  const elm = vnode.elm;\n  const vm = getAssociatedVMIfPresent(elm);\n\n  if (!isUndefined(vm)) {\n    assign(vm.context, context);\n  }\n}\n\nconst contextModule = {\n  create: createContext\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n@license\nCopyright (c) 2015 Simon Friis Vindum.\nThis code may only be used under the MIT License found at\nhttps://github.com/snabbdom/snabbdom/blob/master/LICENSE\nCode distributed by Snabbdom as part of the Snabbdom project at\nhttps://github.com/snabbdom/snabbdom/\n*/\nfunction isUndef(s) {\n  return s === undefined;\n}\n\nfunction sameVnode(vnode1, vnode2) {\n  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\n\nfunction isVNode(vnode) {\n  return vnode != null;\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  const map = {};\n  let j, key, ch; // TODO [#1637]: simplify this by assuming that all vnodes has keys\n\n  for (j = beginIdx; j <= endIdx; ++j) {\n    ch = children[j];\n\n    if (isVNode(ch)) {\n      key = ch.key;\n\n      if (key !== undefined) {\n        map[key] = j;\n      }\n    }\n  }\n\n  return map;\n}\n\nfunction addVnodes(parentElm, before, vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    const ch = vnodes[startIdx];\n\n    if (isVNode(ch)) {\n      ch.hook.create(ch);\n      ch.hook.insert(ch, parentElm, before);\n    }\n  }\n}\n\nfunction removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    const ch = vnodes[startIdx]; // text nodes do not have logic associated to them\n\n    if (isVNode(ch)) {\n      ch.hook.remove(ch, parentElm);\n    }\n  }\n}\n\nfunction updateDynamicChildren(parentElm, oldCh, newCh) {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let oldKeyToIdx;\n  let idxInOld;\n  let elmToMove;\n  let before;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (!isVNode(oldStartVnode)) {\n      oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n    } else if (!isVNode(oldEndVnode)) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (!isVNode(newStartVnode)) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (!isVNode(newEndVnode)) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newStartVnode)) {\n      patchVnode(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (sameVnode(oldEndVnode, newEndVnode)) {\n      patchVnode(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newEndVnode)) {\n      // Vnode moved right\n      patchVnode(oldStartVnode, newEndVnode);\n      newEndVnode.hook.move(oldStartVnode, parentElm, oldEndVnode.elm.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldEndVnode, newStartVnode)) {\n      // Vnode moved left\n      patchVnode(oldEndVnode, newStartVnode);\n      newStartVnode.hook.move(oldEndVnode, parentElm, oldStartVnode.elm);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      if (oldKeyToIdx === undefined) {\n        oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n      }\n\n      idxInOld = oldKeyToIdx[newStartVnode.key];\n\n      if (isUndef(idxInOld)) {\n        // New element\n        newStartVnode.hook.create(newStartVnode);\n        newStartVnode.hook.insert(newStartVnode, parentElm, oldStartVnode.elm);\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        elmToMove = oldCh[idxInOld];\n\n        if (isVNode(elmToMove)) {\n          if (elmToMove.sel !== newStartVnode.sel) {\n            // New element\n            newStartVnode.hook.create(newStartVnode);\n            newStartVnode.hook.insert(newStartVnode, parentElm, oldStartVnode.elm);\n          } else {\n            patchVnode(elmToMove, newStartVnode);\n            oldCh[idxInOld] = undefined;\n            newStartVnode.hook.move(elmToMove, parentElm, oldStartVnode.elm);\n          }\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n  }\n\n  if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n    if (oldStartIdx > oldEndIdx) {\n      const n = newCh[newEndIdx + 1];\n      before = isVNode(n) ? n.elm : null;\n      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);\n    } else {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n}\nfunction updateStaticChildren(parentElm, oldCh, newCh) {\n  const {\n    length\n  } = newCh;\n\n  if (oldCh.length === 0) {\n    // the old list is empty, we can directly insert anything new\n    addVnodes(parentElm, null, newCh, 0, length);\n    return;\n  } // if the old list is not empty, the new list MUST have the same\n  // amount of nodes, that's why we call this static children\n\n\n  let referenceElm = null;\n\n  for (let i = length - 1; i >= 0; i -= 1) {\n    const vnode = newCh[i];\n    const oldVNode = oldCh[i];\n\n    if (vnode !== oldVNode) {\n      if (isVNode(oldVNode)) {\n        if (isVNode(vnode)) {\n          // both vnodes must be equivalent, and se just need to patch them\n          patchVnode(oldVNode, vnode);\n          referenceElm = vnode.elm;\n        } else {\n          // removing the old vnode since the new one is null\n          oldVNode.hook.remove(oldVNode, parentElm);\n        }\n      } else if (isVNode(vnode)) {\n        // this condition is unnecessary\n        vnode.hook.create(vnode); // insert the new node one since the old one is null\n\n        vnode.hook.insert(vnode, parentElm, referenceElm);\n        referenceElm = vnode.elm;\n      }\n    }\n  }\n}\n\nfunction patchVnode(oldVnode, vnode) {\n  if (oldVnode !== vnode) {\n    vnode.elm = oldVnode.elm;\n    vnode.hook.update(oldVnode, vnode);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction generateDataDescriptor(options) {\n  return assign({\n    configurable: true,\n    enumerable: true,\n    writable: true\n  }, options);\n}\n\nfunction generateAccessorDescriptor(options) {\n  return assign({\n    configurable: true,\n    enumerable: true\n  }, options);\n}\n\nlet isDomMutationAllowed = false;\nfunction unlockDomMutation() {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  isDomMutationAllowed = true;\n}\nfunction lockDomMutation() {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  isDomMutationAllowed = false;\n}\n\nfunction portalRestrictionErrorMessage(name, type) {\n  return `The \\`${name}\\` ${type} is available only on elements that use the \\`lwc:dom=\"manual\"\\` directive.`;\n}\n\nfunction getNodeRestrictionsDescriptors(node, options) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  } // getPropertyDescriptor here recursively looks up the prototype chain\n  // and returns the first descriptor for the property\n\n\n  const originalTextContentDescriptor = getPropertyDescriptor(node, 'textContent');\n  const originalNodeValueDescriptor = getPropertyDescriptor(node, 'nodeValue');\n  const {\n    appendChild,\n    insertBefore,\n    removeChild,\n    replaceChild\n  } = node;\n  return {\n    appendChild: generateDataDescriptor({\n      value(aChild) {\n        if (this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('appendChild', 'method'));\n        }\n\n        return appendChild.call(this, aChild);\n      }\n\n    }),\n    insertBefore: generateDataDescriptor({\n      value(newNode, referenceNode) {\n        if (!isDomMutationAllowed && this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('insertBefore', 'method'));\n        }\n\n        return insertBefore.call(this, newNode, referenceNode);\n      }\n\n    }),\n    removeChild: generateDataDescriptor({\n      value(aChild) {\n        if (!isDomMutationAllowed && this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('removeChild', 'method'));\n        }\n\n        return removeChild.call(this, aChild);\n      }\n\n    }),\n    replaceChild: generateDataDescriptor({\n      value(newChild, oldChild) {\n        if (this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('replaceChild', 'method'));\n        }\n\n        return replaceChild.call(this, newChild, oldChild);\n      }\n\n    }),\n    nodeValue: generateAccessorDescriptor({\n      get() {\n        return originalNodeValueDescriptor.get.call(this);\n      },\n\n      set(value) {\n        if (!isDomMutationAllowed && this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('nodeValue', 'property'));\n        }\n\n        originalNodeValueDescriptor.set.call(this, value);\n      }\n\n    }),\n    textContent: generateAccessorDescriptor({\n      get() {\n        return originalTextContentDescriptor.get.call(this);\n      },\n\n      set(value) {\n        if (this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('textContent', 'property'));\n        }\n\n        originalTextContentDescriptor.set.call(this, value);\n      }\n\n    })\n  };\n}\n\nfunction getElementRestrictionsDescriptors(elm, options) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const descriptors = getNodeRestrictionsDescriptors(elm, options);\n  const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');\n  const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');\n  assign(descriptors, {\n    innerHTML: generateAccessorDescriptor({\n      get() {\n        return originalInnerHTMLDescriptor.get.call(this);\n      },\n\n      set(value) {\n        if (isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('innerHTML', 'property'), getAssociatedVMIfPresent(this));\n        }\n\n        return originalInnerHTMLDescriptor.set.call(this, value);\n      }\n\n    }),\n    outerHTML: generateAccessorDescriptor({\n      get() {\n        return originalOuterHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set outerHTML on Element.`);\n      }\n\n    })\n  });\n  return descriptors;\n}\n\nfunction getShadowRootRestrictionsDescriptors(sr, options) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  } // Disallowing properties in dev mode only to avoid people doing the wrong\n  // thing when using the real shadow root, because if that's the case,\n  // the component will not work when running with synthetic shadow.\n\n\n  const originalQuerySelector = sr.querySelector;\n  const originalQuerySelectorAll = sr.querySelectorAll;\n  const originalAddEventListener = sr.addEventListener;\n  const descriptors = getNodeRestrictionsDescriptors(sr, options);\n  const originalInnerHTMLDescriptor = getPropertyDescriptor(sr, 'innerHTML');\n  const originalTextContentDescriptor = getPropertyDescriptor(sr, 'textContent');\n  assign(descriptors, {\n    innerHTML: generateAccessorDescriptor({\n      get() {\n        return originalInnerHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set innerHTML on ShadowRoot.`);\n      }\n\n    }),\n    textContent: generateAccessorDescriptor({\n      get() {\n        return originalTextContentDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set textContent on ShadowRoot.`);\n      }\n\n    }),\n    addEventListener: generateDataDescriptor({\n      value(type, listener, options) {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${toString(sr)} by adding an event listener for \"${type}\".`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${toString(sr)} by adding an event listener for \"${type}\".`); // TODO [#420]: this is triggered when the component author attempts to add a listener\n        // programmatically into its Component's shadow root\n\n        if (!isUndefined(options)) {\n          logError('The `addEventListener` method in `LightningElement` does not support any options.', getAssociatedVMIfPresent(this));\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalAddEventListener.apply(this, arguments);\n      }\n\n    }),\n    querySelector: generateDataDescriptor({\n      value() {\n        const vm = getAssociatedVM(this);\n        assert.isFalse(isBeingConstructed(vm), `this.template.querySelector() cannot be called during the construction of the` + `custom element for ${vm} because no content has been rendered yet.`); // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n        return originalQuerySelector.apply(this, arguments);\n      }\n\n    }),\n    querySelectorAll: generateDataDescriptor({\n      value() {\n        const vm = getAssociatedVM(this);\n        assert.isFalse(isBeingConstructed(vm), `this.template.querySelectorAll() cannot be called during the construction of the` + ` custom element for ${vm} because no content has been rendered yet.`); // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n        return originalQuerySelectorAll.apply(this, arguments);\n      }\n\n    })\n  });\n  const BlockedShadowRootMethods = {\n    cloneNode: 0,\n    getElementById: 0,\n    getSelection: 0,\n    elementsFromPoint: 0,\n    dispatchEvent: 0\n  };\n  forEach.call(getOwnPropertyNames(BlockedShadowRootMethods), methodName => {\n    const descriptor = generateAccessorDescriptor({\n      get() {\n        throw new Error(`Disallowed method \"${methodName}\" in ShadowRoot.`);\n      }\n\n    });\n    descriptors[methodName] = descriptor;\n  });\n  return descriptors;\n} // Custom Elements Restrictions:\n// -----------------------------\n\n\nfunction getCustomElementRestrictionsDescriptors(elm, options) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const descriptors = getNodeRestrictionsDescriptors(elm, options);\n  const originalAddEventListener = elm.addEventListener;\n  const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');\n  const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');\n  const originalTextContentDescriptor = getPropertyDescriptor(elm, 'textContent');\n  return assign(descriptors, {\n    innerHTML: generateAccessorDescriptor({\n      get() {\n        return originalInnerHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set innerHTML on HTMLElement.`);\n      }\n\n    }),\n    outerHTML: generateAccessorDescriptor({\n      get() {\n        return originalOuterHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set outerHTML on HTMLElement.`);\n      }\n\n    }),\n    textContent: generateAccessorDescriptor({\n      get() {\n        return originalTextContentDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set textContent on HTMLElement.`);\n      }\n\n    }),\n    addEventListener: generateDataDescriptor({\n      value(type, listener, options) {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${toString(this)} by adding an event listener for \"${type}\".`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${toString(elm)} by adding an event listener for \"${type}\".`); // TODO [#420]: this is triggered when the component author attempts to add a listener\n        // programmatically into a lighting element node\n\n        if (!isUndefined(options)) {\n          logError('The `addEventListener` method in `LightningElement` does not support any options.', getAssociatedVMIfPresent(this));\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalAddEventListener.apply(this, arguments);\n      }\n\n    })\n  });\n}\n\nfunction getComponentRestrictionsDescriptors() {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  return {\n    tagName: generateAccessorDescriptor({\n      get() {\n        throw new Error(`Usage of property \\`tagName\\` is disallowed because the component itself does` + ` not know which tagName will be used to create the element, therefore writing` + ` code that check for that value is error prone.`);\n      },\n\n      configurable: true,\n      enumerable: false\n    })\n  };\n}\n\nfunction getLightningElementPrototypeRestrictionsDescriptors(proto) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const originalDispatchEvent = proto.dispatchEvent;\n  const originalIsConnectedGetter = getOwnPropertyDescriptor(proto, 'isConnected').get;\n  const descriptors = {\n    dispatchEvent: generateDataDescriptor({\n      value(event) {\n        const vm = getAssociatedVM(this);\n        assert.isFalse(isBeingConstructed(vm), `this.dispatchEvent() should not be called during the construction of the custom` + ` element for ${getComponentTag(vm)} because no one is listening just yet.`);\n\n        if (!isNull(event) && isObject$1(event)) {\n          const {\n            type\n          } = event;\n\n          if (!/^[a-z][a-z0-9_]*$/.test(type)) {\n            logError(`Invalid event type \"${type}\" dispatched in element ${getComponentTag(vm)}.` + ` Event name must start with a lowercase letter and followed only lowercase` + ` letters, numbers, and underscores`, vm);\n          }\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalDispatchEvent.apply(this, arguments);\n      }\n\n    }),\n    isConnected: generateAccessorDescriptor({\n      get() {\n        const vm = getAssociatedVM(this);\n        const componentTag = getComponentTag(vm);\n        assert.isFalse(isBeingConstructed(vm), `this.isConnected should not be accessed during the construction phase of the custom` + ` element ${componentTag}. The value will always be` + ` false for Lightning Web Components constructed using lwc.createElement().`);\n        assert.isFalse(isVMBeingRendered(vm), `this.isConnected should not be accessed during the rendering phase of the custom` + ` element ${componentTag}. The value will always be true.`);\n        assert.isFalse(isInvokingRenderedCallback(vm), `this.isConnected should not be accessed during the renderedCallback of the custom` + ` element ${componentTag}. The value will always be true.`);\n        return originalIsConnectedGetter.call(this);\n      }\n\n    })\n  };\n  forEach.call(getOwnPropertyNames(globalHTMLProperties), propName => {\n    if (propName in proto) {\n      return; // no need to redefine something that we are already exposing\n    }\n\n    descriptors[propName] = generateAccessorDescriptor({\n      get() {\n        const {\n          error,\n          attribute\n        } = globalHTMLProperties[propName];\n        const msg = [];\n        msg.push(`Accessing the global HTML property \"${propName}\" is disabled.`);\n\n        if (error) {\n          msg.push(error);\n        } else if (attribute) {\n          msg.push(`Instead access it via \\`this.getAttribute(\"${attribute}\")\\`.`);\n        }\n\n        logError(msg.join('\\n'), getAssociatedVM(this));\n      },\n\n      set() {\n        const {\n          readOnly\n        } = globalHTMLProperties[propName];\n\n        if (readOnly) {\n          logError(`The global HTML property \\`${propName}\\` is read-only.`, getAssociatedVM(this));\n        }\n      }\n\n    });\n  });\n  return descriptors;\n}\n\nfunction markNodeFromVNode(node) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  node.$fromTemplate$ = true;\n}\nfunction patchElementWithRestrictions(elm, options) {\n  defineProperties(elm, getElementRestrictionsDescriptors(elm, options));\n} // This routine will prevent access to certain properties on a shadow root instance to guarantee\n// that all components will work fine in IE11 and other browsers without shadow dom support.\n\nfunction patchShadowRootWithRestrictions(sr, options) {\n  defineProperties(sr, getShadowRootRestrictionsDescriptors(sr, options));\n}\nfunction patchCustomElementWithRestrictions(elm, options) {\n  const restrictionsDescriptors = getCustomElementRestrictionsDescriptors(elm, options);\n  const elmProto = getPrototypeOf(elm);\n  setPrototypeOf(elm, create(elmProto, restrictionsDescriptors));\n}\nfunction patchComponentWithRestrictions(cmp) {\n  defineProperties(cmp, getComponentRestrictionsDescriptors());\n}\nfunction patchLightningElementPrototypeWithRestrictions(proto) {\n  defineProperties(proto, getLightningElementPrototypeRestrictionsDescriptors(proto));\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst noop = () => void 0;\n\nfunction observeElementChildNodes(elm) {\n  elm.$domManual$ = true;\n}\n\nfunction setElementShadowToken(elm, token) {\n  elm.$shadowToken$ = token;\n}\n\nfunction updateNodeHook(oldVnode, vnode) {\n  const {\n    text\n  } = vnode;\n\n  if (oldVnode.text !== text) {\n    if (process.env.NODE_ENV !== 'production') {\n      unlockDomMutation();\n    }\n    /**\n     * Compiler will never produce a text property that is not string\n     */\n\n\n    vnode.elm.nodeValue = text;\n\n    if (process.env.NODE_ENV !== 'production') {\n      lockDomMutation();\n    }\n  }\n}\nfunction insertNodeHook(vnode, parentNode, referenceNode) {\n  if (process.env.NODE_ENV !== 'production') {\n    unlockDomMutation();\n  }\n\n  parentNode.insertBefore(vnode.elm, referenceNode);\n\n  if (process.env.NODE_ENV !== 'production') {\n    lockDomMutation();\n  }\n}\nfunction removeNodeHook(vnode, parentNode) {\n  if (process.env.NODE_ENV !== 'production') {\n    unlockDomMutation();\n  }\n\n  parentNode.removeChild(vnode.elm);\n\n  if (process.env.NODE_ENV !== 'production') {\n    lockDomMutation();\n  }\n}\nfunction createElmHook(vnode) {\n  modEvents.create(vnode); // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n\n  modAttrs.create(vnode);\n  modProps.create(vnode);\n  modStaticClassName.create(vnode);\n  modStaticStyle.create(vnode);\n  modComputedClassName.create(vnode);\n  modComputedStyle.create(vnode);\n  contextModule.create(vnode);\n}\nvar LWCDOMMode;\n\n(function (LWCDOMMode) {\n  LWCDOMMode[\"manual\"] = \"manual\";\n})(LWCDOMMode || (LWCDOMMode = {}));\n\nfunction fallbackElmHook(vnode) {\n  const {\n    owner\n  } = vnode;\n  const elm = vnode.elm;\n\n  if (isTrue$1(useSyntheticShadow)) {\n    const {\n      data: {\n        context\n      }\n    } = vnode;\n    const {\n      shadowAttribute\n    } = owner.context;\n\n    if (!isUndefined(context) && !isUndefined(context.lwc) && context.lwc.dom === LWCDOMMode.manual) {\n      // this element will now accept any manual content inserted into it\n      observeElementChildNodes(elm);\n    } // when running in synthetic shadow mode, we need to set the shadowToken value\n    // into each element from the template, so they can be styled accordingly.\n\n\n    setElementShadowToken(elm, shadowAttribute);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const {\n      data: {\n        context\n      }\n    } = vnode;\n    const isPortal = !isUndefined(context) && !isUndefined(context.lwc) && context.lwc.dom === LWCDOMMode.manual;\n    patchElementWithRestrictions(elm, {\n      isPortal\n    });\n  }\n}\nfunction updateElmHook(oldVnode, vnode) {\n  // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n  modAttrs.update(oldVnode, vnode);\n  modProps.update(oldVnode, vnode);\n  modComputedClassName.update(oldVnode, vnode);\n  modComputedStyle.update(oldVnode, vnode);\n}\nfunction insertCustomElmHook(vnode) {\n  const vm = getAssociatedVM(vnode.elm);\n  appendVM(vm);\n}\nfunction updateChildrenHook(oldVnode, vnode) {\n  const {\n    children,\n    owner\n  } = vnode;\n  const fn = hasDynamicChildren(children) ? updateDynamicChildren : updateStaticChildren;\n  runWithBoundaryProtection(owner, owner.owner, noop, () => {\n    fn(vnode.elm, oldVnode.children, children);\n  }, noop);\n}\nfunction allocateChildrenHook(vnode) {\n  const vm = getAssociatedVM(vnode.elm);\n  const {\n    children\n  } = vnode;\n  vm.aChildren = children;\n\n  if (isTrue$1(useSyntheticShadow)) {\n    // slow path\n    allocateInSlot(vm, children); // every child vnode is now allocated, and the host should receive none directly, it receives them via the shadow!\n\n    vnode.children = EmptyArray;\n  }\n}\nfunction createViewModelHook(vnode) {\n  const elm = vnode.elm;\n\n  if (!isUndefined(getAssociatedVMIfPresent(elm))) {\n    // There is a possibility that a custom element is registered under tagName,\n    // in which case, the initialization is already carry on, and there is nothing else\n    // to do here since this hook is called right after invoking `document.createElement`.\n    return;\n  }\n\n  const {\n    mode,\n    ctor,\n    owner\n  } = vnode;\n  const def = getComponentDef(ctor);\n  setElementProto(elm, def);\n\n  if (isTrue$1(useSyntheticShadow)) {\n    const {\n      shadowAttribute\n    } = owner.context; // when running in synthetic shadow mode, we need to set the shadowToken value\n    // into each element from the template, so they can be styled accordingly.\n\n    setElementShadowToken(elm, shadowAttribute);\n  }\n\n  createVM(elm, ctor, {\n    mode,\n    owner\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    patchCustomElementWithRestrictions(elm, EmptyObject);\n  }\n}\nfunction createCustomElmHook(vnode) {\n  modEvents.create(vnode); // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n\n  modAttrs.create(vnode);\n  modProps.create(vnode);\n  modStaticClassName.create(vnode);\n  modStaticStyle.create(vnode);\n  modComputedClassName.create(vnode);\n  modComputedStyle.create(vnode);\n  contextModule.create(vnode);\n}\nfunction createChildrenHook(vnode) {\n  const {\n    elm,\n    children\n  } = vnode;\n\n  for (let j = 0; j < children.length; ++j) {\n    const ch = children[j];\n\n    if (ch != null) {\n      ch.hook.create(ch);\n      ch.hook.insert(ch, elm, null);\n    }\n  }\n}\nfunction rerenderCustomElmHook(vnode) {\n  const vm = getAssociatedVM(vnode.elm);\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);\n  }\n\n  rerenderVM(vm);\n}\nfunction updateCustomElmHook(oldVnode, vnode) {\n  // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n  modAttrs.update(oldVnode, vnode);\n  modProps.update(oldVnode, vnode);\n  modComputedClassName.update(oldVnode, vnode);\n  modComputedStyle.update(oldVnode, vnode);\n}\nfunction removeElmHook(vnode) {\n  // this method only needs to search on child vnodes from template\n  // to trigger the remove hook just in case some of those children\n  // are custom elements.\n  const {\n    children,\n    elm\n  } = vnode;\n\n  for (let j = 0, len = children.length; j < len; ++j) {\n    const ch = children[j];\n\n    if (!isNull(ch)) {\n      ch.hook.remove(ch, elm);\n    }\n  }\n}\nfunction removeCustomElmHook(vnode) {\n  // for custom elements we don't have to go recursively because the removeVM routine\n  // will take care of disconnecting any child VM attached to its shadow as well.\n  removeVM(getAssociatedVM(vnode.elm));\n} // Using a WeakMap instead of a WeakSet because this one works in IE11 :(\n\nconst FromIteration = new WeakMap(); // dynamic children means it was generated by an iteration\n// in a template, and will require a more complex diffing algo.\n\nfunction markAsDynamicChildren(children) {\n  FromIteration.set(children, 1);\n}\nfunction hasDynamicChildren(children) {\n  return FromIteration.has(children);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst Services = create(null);\nconst hooks = ['wiring', 'locator', 'rendered', 'connected', 'disconnected'];\n/**\n * EXPERIMENTAL: This function allows for the registration of \"services\"\n * in LWC by exposing hooks into the component life-cycle. This API is\n * subject to change or being removed.\n */\n\nfunction register(service) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isObject$1(service), `Invalid service declaration, ${service}: service must be an object`);\n  }\n\n  for (let i = 0; i < hooks.length; ++i) {\n    const hookName = hooks[i];\n\n    if (hookName in service) {\n      let l = Services[hookName];\n\n      if (isUndefined(l)) {\n        Services[hookName] = l = [];\n      }\n\n      ArrayPush.call(l, service[hookName]);\n    }\n  }\n}\nfunction invokeServiceHook(vm, cbs) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(cbs) && cbs.length > 0, `Optimize invokeServiceHook() to be invoked only when needed`);\n  }\n\n  const {\n    component,\n    data,\n    def,\n    context\n  } = vm;\n\n  for (let i = 0, len = cbs.length; i < len; ++i) {\n    cbs[i].call(undefined, component, data, def, context);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst CHAR_S = 115;\nconst CHAR_V = 118;\nconst CHAR_G = 103;\nconst NamespaceAttributeForSVG = 'http://www.w3.org/2000/svg';\nconst SymbolIterator = Symbol.iterator;\nconst TextHook = {\n  create: vnode => {\n    vnode.elm = document.createTextNode(vnode.text);\n    linkNodeToShadow(vnode);\n\n    if (process.env.NODE_ENV !== 'production') {\n      markNodeFromVNode(vnode.elm);\n    }\n  },\n  update: updateNodeHook,\n  insert: insertNodeHook,\n  move: insertNodeHook,\n  remove: removeNodeHook\n};\nconst CommentHook = {\n  create: vnode => {\n    vnode.elm = document.createComment(vnode.text);\n    linkNodeToShadow(vnode);\n\n    if (process.env.NODE_ENV !== 'production') {\n      markNodeFromVNode(vnode.elm);\n    }\n  },\n  update: updateNodeHook,\n  insert: insertNodeHook,\n  move: insertNodeHook,\n  remove: removeNodeHook\n}; // insert is called after update, which is used somewhere else (via a module)\n// to mark the vm as inserted, that means we cannot use update as the main channel\n// to rehydrate when dirty, because sometimes the element is not inserted just yet,\n// which breaks some invariants. For that reason, we have the following for any\n// Custom Element that is inserted via a template.\n\nconst ElementHook = {\n  create: vnode => {\n    const {\n      data,\n      sel,\n      clonedElement\n    } = vnode;\n    const {\n      ns\n    } = data; // TODO [#1364]: supporting the ability to inject a cloned StyleElement via a vnode this is\n    // used for style tags for native shadow\n\n    if (isUndefined(clonedElement)) {\n      vnode.elm = isUndefined(ns) ? document.createElement(sel) : document.createElementNS(ns, sel);\n    } else {\n      vnode.elm = clonedElement;\n    }\n\n    linkNodeToShadow(vnode);\n\n    if (process.env.NODE_ENV !== 'production') {\n      markNodeFromVNode(vnode.elm);\n    }\n\n    fallbackElmHook(vnode);\n    createElmHook(vnode);\n  },\n  update: (oldVnode, vnode) => {\n    updateElmHook(oldVnode, vnode);\n    updateChildrenHook(oldVnode, vnode);\n  },\n  insert: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n    createChildrenHook(vnode);\n  },\n  move: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n  },\n  remove: (vnode, parentNode) => {\n    removeNodeHook(vnode, parentNode);\n    removeElmHook(vnode);\n  }\n};\nconst CustomElementHook = {\n  create: vnode => {\n    const {\n      sel\n    } = vnode;\n    vnode.elm = document.createElement(sel);\n    linkNodeToShadow(vnode);\n\n    if (process.env.NODE_ENV !== 'production') {\n      markNodeFromVNode(vnode.elm);\n    }\n\n    createViewModelHook(vnode);\n    allocateChildrenHook(vnode);\n    createCustomElmHook(vnode);\n  },\n  update: (oldVnode, vnode) => {\n    updateCustomElmHook(oldVnode, vnode); // in fallback mode, the allocation will always set children to\n    // empty and delegate the real allocation to the slot elements\n\n    allocateChildrenHook(vnode); // in fallback mode, the children will be always empty, so, nothing\n    // will happen, but in native, it does allocate the light dom\n\n    updateChildrenHook(oldVnode, vnode); // this will update the shadowRoot\n\n    rerenderCustomElmHook(vnode);\n  },\n  insert: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n    const vm = getAssociatedVM(vnode.elm);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isTrue(vm.state === VMState.created, `${vm} cannot be recycled.`);\n    }\n\n    runConnectedCallback(vm);\n    createChildrenHook(vnode);\n    insertCustomElmHook(vnode);\n  },\n  move: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n  },\n  remove: (vnode, parentNode) => {\n    removeNodeHook(vnode, parentNode);\n    removeCustomElmHook(vnode);\n  }\n};\n\nfunction linkNodeToShadow(vnode) {\n  // TODO [#1164]: this should eventually be done by the polyfill directly\n  vnode.elm.$shadowResolver$ = vnode.owner.cmpRoot.$shadowResolver$;\n} // TODO [#1136]: this should be done by the compiler, adding ns to every sub-element\n\n\nfunction addNS(vnode) {\n  const {\n    data,\n    children,\n    sel\n  } = vnode;\n  data.ns = NamespaceAttributeForSVG; // TODO [#1275]: review why `sel` equal `foreignObject` should get this `ns`\n\n  if (isArray$1(children) && sel !== 'foreignObject') {\n    for (let j = 0, n = children.length; j < n; ++j) {\n      const childNode = children[j];\n\n      if (childNode != null && childNode.hook === ElementHook) {\n        addNS(childNode);\n      }\n    }\n  }\n}\n\nfunction addVNodeToChildLWC(vnode) {\n  ArrayPush.call(getVMBeingRendered().velements, vnode);\n} // [h]tml node\n\n\nfunction h(sel, data, children) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isString(sel), `h() 1st argument sel must be a string.`);\n    assert.isTrue(isObject$1(data), `h() 2nd argument data must be an object.`);\n    assert.isTrue(isArray$1(children), `h() 3rd argument children must be an array.`);\n    assert.isTrue('key' in data, ` <${sel}> \"key\" attribute is invalid or missing for ${vmBeingRendered}. Key inside iterator is either undefined or null.`); // checking reserved internal data properties\n\n    assert.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n    assert.isFalse(data.styleMap && data.style, `vnode.data.styleMap and vnode.data.style ambiguous declaration.`);\n\n    if (data.style && !isString(data.style)) {\n      logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);\n    }\n\n    forEach.call(children, childVnode => {\n      if (childVnode != null) {\n        assert.isTrue(childVnode && 'sel' in childVnode && 'data' in childVnode && 'children' in childVnode && 'text' in childVnode && 'elm' in childVnode && 'key' in childVnode, `${childVnode} is not a vnode.`);\n      }\n    });\n  }\n\n  const {\n    key\n  } = data;\n  let text, elm;\n  const vnode = {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: ElementHook,\n    owner: vmBeingRendered\n  };\n\n  if (sel.length === 3 && StringCharCodeAt.call(sel, 0) === CHAR_S && StringCharCodeAt.call(sel, 1) === CHAR_V && StringCharCodeAt.call(sel, 2) === CHAR_G) {\n    addNS(vnode);\n  }\n\n  return vnode;\n} // [t]ab[i]ndex function\n\nfunction ti(value) {\n  // if value is greater than 0, we normalize to 0\n  // If value is an invalid tabIndex value (null, undefined, string, etc), we let that value pass through\n  // If value is less than -1, we don't care\n  const shouldNormalize = value > 0 && !(isTrue$1(value) || isFalse$1(value));\n\n  if (process.env.NODE_ENV !== 'production') {\n    const vmBeingRendered = getVMBeingRendered();\n\n    if (shouldNormalize) {\n      logError(`Invalid tabindex value \\`${toString(value)}\\` in template for ${vmBeingRendered}. This attribute must be set to 0 or -1.`, vmBeingRendered);\n    }\n  }\n\n  return shouldNormalize ? 0 : value;\n} // [s]lot element node\n\nfunction s(slotName, data, children, slotset) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isString(slotName), `s() 1st argument slotName must be a string.`);\n    assert.isTrue(isObject$1(data), `s() 2nd argument data must be an object.`);\n    assert.isTrue(isArray$1(children), `h() 3rd argument children must be an array.`);\n  }\n\n  if (!isUndefined(slotset) && !isUndefined(slotset[slotName]) && slotset[slotName].length !== 0) {\n    children = slotset[slotName];\n  }\n\n  const vnode = h('slot', data, children);\n\n  if (useSyntheticShadow) {\n    // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n    sc(children);\n  }\n\n  return vnode;\n} // [c]ustom element node\n\nfunction c(sel, Ctor, data, children = EmptyArray) {\n  if (isCircularModuleDependency(Ctor)) {\n    Ctor = resolveCircularModuleDependency(Ctor);\n  }\n\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isString(sel), `c() 1st argument sel must be a string.`);\n    assert.isTrue(isFunction(Ctor), `c() 2nd argument Ctor must be a function.`);\n    assert.isTrue(isObject$1(data), `c() 3nd argument data must be an object.`);\n    assert.isTrue(arguments.length === 3 || isArray$1(children), `c() 4nd argument data must be an array.`); // checking reserved internal data properties\n\n    assert.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n    assert.isFalse(data.styleMap && data.style, `vnode.data.styleMap and vnode.data.style ambiguous declaration.`);\n\n    if (data.style && !isString(data.style)) {\n      logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);\n    }\n\n    if (arguments.length === 4) {\n      forEach.call(children, childVnode => {\n        if (childVnode != null) {\n          assert.isTrue(childVnode && 'sel' in childVnode && 'data' in childVnode && 'children' in childVnode && 'text' in childVnode && 'elm' in childVnode && 'key' in childVnode, `${childVnode} is not a vnode.`);\n        }\n      });\n    }\n  }\n\n  const {\n    key\n  } = data;\n  let text, elm;\n  const vnode = {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: CustomElementHook,\n    ctor: Ctor,\n    owner: vmBeingRendered,\n    mode: 'open'\n  };\n  addVNodeToChildLWC(vnode);\n  return vnode;\n} // [i]terable node\n\nfunction i(iterable, factory) {\n  const list = []; // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n\n  sc(list);\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined(iterable) || iterable === null) {\n    if (process.env.NODE_ENV !== 'production') {\n      logError(`Invalid template iteration for value \"${toString(iterable)}\" in ${vmBeingRendered}. It must be an Array or an iterable Object.`, vmBeingRendered);\n    }\n\n    return list;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isFalse(isUndefined(iterable[SymbolIterator]), `Invalid template iteration for value \\`${toString(iterable)}\\` in ${vmBeingRendered}. It must be an array-like object and not \\`null\\` nor \\`undefined\\`.`);\n  }\n\n  const iterator = iterable[SymbolIterator]();\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(iterator && isFunction(iterator.next), `Invalid iterator function for \"${toString(iterable)}\" in ${vmBeingRendered}.`);\n  }\n\n  let next = iterator.next();\n  let j = 0;\n  let {\n    value,\n    done: last\n  } = next;\n  let keyMap;\n  let iterationError;\n\n  if (process.env.NODE_ENV !== 'production') {\n    keyMap = create(null);\n  }\n\n  while (last === false) {\n    // implementing a look-back-approach because we need to know if the element is the last\n    next = iterator.next();\n    last = next.done; // template factory logic based on the previous collected value\n\n    const vnode = factory(value, j, j === 0, last);\n\n    if (isArray$1(vnode)) {\n      ArrayPush.apply(list, vnode);\n    } else {\n      ArrayPush.call(list, vnode);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vnodes = isArray$1(vnode) ? vnode : [vnode];\n      forEach.call(vnodes, childVnode => {\n        if (!isNull(childVnode) && isObject$1(childVnode) && !isUndefined(childVnode.sel)) {\n          const {\n            key\n          } = childVnode;\n\n          if (isString(key) || isNumber(key)) {\n            if (keyMap[key] === 1 && isUndefined(iterationError)) {\n              iterationError = `Duplicated \"key\" attribute value for \"<${childVnode.sel}>\" in ${vmBeingRendered} for item number ${j}. A key with value \"${childVnode.key}\" appears more than once in the iteration. Key values must be unique numbers or strings.`;\n            }\n\n            keyMap[key] = 1;\n          } else if (isUndefined(iterationError)) {\n            iterationError = `Invalid \"key\" attribute value in \"<${childVnode.sel}>\" in ${vmBeingRendered} for item number ${j}. Set a unique \"key\" value on all iterated child elements.`;\n          }\n        }\n      });\n    } // preparing next value\n\n\n    j += 1;\n    value = next.value;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(iterationError)) {\n      logError(iterationError, vmBeingRendered);\n    }\n  }\n\n  return list;\n}\n/**\n * [f]lattening\n */\n\nfunction f(items) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(items), 'flattening api can only work with arrays.');\n  }\n\n  const len = items.length;\n  const flattened = []; // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n\n  sc(flattened);\n\n  for (let j = 0; j < len; j += 1) {\n    const item = items[j];\n\n    if (isArray$1(item)) {\n      ArrayPush.apply(flattened, item);\n    } else {\n      ArrayPush.call(flattened, item);\n    }\n  }\n\n  return flattened;\n} // [t]ext node\n\nfunction t(text) {\n  const data = EmptyObject;\n  let sel, children, key, elm;\n  return {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: TextHook,\n    owner: getVMBeingRendered()\n  };\n} // comment node\n\nfunction p(text) {\n  const data = EmptyObject;\n  const sel = '!';\n  let children, key, elm;\n  return {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: CommentHook,\n    owner: getVMBeingRendered()\n  };\n} // [d]ynamic value to produce a text vnode\n\nfunction d(value) {\n  if (value == null) {\n    return null;\n  }\n\n  return t(value);\n} // [b]ind function\n\nfunction b(fn) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isNull(vmBeingRendered)) {\n    throw new Error();\n  }\n\n  const vm = vmBeingRendered;\n  return function (event) {\n    invokeEventListener(vm, fn, vm.component, event);\n  };\n} // [f]unction_[b]ind\n\nfunction fb(fn) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isNull(vmBeingRendered)) {\n    throw new Error();\n  }\n\n  const vm = vmBeingRendered;\n  return function () {\n    return invokeComponentCallback(vm, fn, ArraySlice$1.call(arguments));\n  };\n} // [l]ocator_[l]istener function\n\nfunction ll(originalHandler, id, context) {\n  const vm = getVMBeingRendered();\n\n  if (isNull(vm)) {\n    throw new Error();\n  } // bind the original handler with b() so we can call it\n  // after resolving the locator\n\n\n  const eventListener = b(originalHandler); // create a wrapping handler to resolve locator, and\n  // then invoke the original handler.\n\n  return function (event) {\n    // located service for the locator metadata\n    const {\n      context: {\n        locator\n      }\n    } = vm;\n\n    if (!isUndefined(locator)) {\n      const {\n        locator: locatorService\n      } = Services;\n\n      if (locatorService) {\n        locator.resolved = {\n          target: id,\n          host: locator.id,\n          targetContext: isFunction(context) && context(),\n          hostContext: isFunction(locator.context) && locator.context()\n        }; // a registered `locator` service will be invoked with\n        // access to the context.locator.resolved, which will contain:\n        // outer id, outer context, inner id, and inner context\n\n        invokeServiceHook(vm, locatorService);\n      }\n    } // invoke original event listener via b()\n\n\n    eventListener(event);\n  };\n} // [k]ey function\n\nfunction k(compilerKey, obj) {\n  switch (typeof obj) {\n    case 'number':\n    case 'string':\n      return compilerKey + ':' + obj;\n\n    case 'object':\n      if (process.env.NODE_ENV !== 'production') {\n        assert.fail(`Invalid key value \"${obj}\" in ${getVMBeingRendered()}. Key must be a string or number.`);\n      }\n\n  }\n} // [g]lobal [id] function\n\nfunction gid(id) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined(id) || id === '') {\n    if (process.env.NODE_ENV !== 'production') {\n      logError(`Invalid id value \"${id}\". The id attribute must contain a non-empty string.`, vmBeingRendered);\n    }\n\n    return id;\n  } // We remove attributes when they are assigned a value of null\n\n\n  if (isNull(id)) {\n    return null;\n  }\n\n  return `${id}-${vmBeingRendered.idx}`;\n} // [f]ragment [id] function\n\nfunction fid(url) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined(url) || url === '') {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isUndefined(url)) {\n        logError(`Undefined url value for \"href\" or \"xlink:href\" attribute. Expected a non-empty string.`, vmBeingRendered);\n      }\n    }\n\n    return url;\n  } // We remove attributes when they are assigned a value of null\n\n\n  if (isNull(url)) {\n    return null;\n  } // Apply transformation only for fragment-only-urls\n\n\n  if (/^#/.test(url)) {\n    return `${url}-${vmBeingRendered.idx}`;\n  }\n\n  return url;\n}\n/**\n * Map to store an index value assigned to any dynamic component reference ingested\n * by dc() api. This allows us to generate a unique unique per template per dynamic\n * component reference to avoid diffing algo mismatches.\n */\n\nconst DynamicImportedComponentMap = new Map();\nlet dynamicImportedComponentCounter = 0;\n/**\n * create a dynamic component via `<x-foo lwc:dynamic={Ctor}>`\n */\n\nfunction dc(sel, Ctor, data, children) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isString(sel), `dc() 1st argument sel must be a string.`);\n    assert.isTrue(isObject$1(data), `dc() 3nd argument data must be an object.`);\n    assert.isTrue(arguments.length === 3 || isArray$1(children), `dc() 4nd argument data must be an array.`);\n  } // null or undefined values should produce a null value in the VNodes\n\n\n  if (Ctor == null) {\n    return null;\n  }\n\n  if (!isComponentConstructor(Ctor)) {\n    throw new Error(`Invalid LWC Constructor ${toString(Ctor)} for custom element <${sel}>.`);\n  }\n\n  let idx = DynamicImportedComponentMap.get(Ctor);\n\n  if (isUndefined(idx)) {\n    idx = dynamicImportedComponentCounter++;\n    DynamicImportedComponentMap.set(Ctor, idx);\n  } // the new vnode key is a mix of idx and compiler key, this is required by the diffing algo\n  // to identify different constructors as vnodes with different keys to avoid reusing the\n  // element used for previous constructors.\n\n\n  data.key = `dc:${idx}:${data.key}`;\n  return c(sel, Ctor, data, children);\n}\n/**\n * slow children collection marking mechanism. this API allows the compiler to signal\n * to the engine that a particular collection of children must be diffed using the slow\n * algo based on keys due to the nature of the list. E.g.:\n *\n *   - slot element's children: the content of the slot has to be dynamic when in synthetic\n *                              shadow mode because the `vnode.children` might be the slotted\n *                              content vs default content, in which case the size and the\n *                              keys are not matching.\n *   - children that contain dynamic components\n *   - children that are produced by iteration\n *\n */\n\nfunction sc(vnodes) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(vnodes), 'sc() api can only work with arrays.');\n  } // We have to mark the vnodes collection as dynamic so we can later on\n  // choose to use the snabbdom virtual dom diffing algo instead of our\n  // static dummy algo.\n\n\n  markAsDynamicChildren(vnodes);\n  return vnodes;\n}\n\nvar api = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    h: h,\n    ti: ti,\n    s: s,\n    c: c,\n    i: i,\n    f: f,\n    t: t,\n    p: p,\n    d: d,\n    b: b,\n    fb: fb,\n    ll: ll,\n    k: k,\n    gid: gid,\n    fid: fid,\n    dc: dc,\n    sc: sc\n});\n\nconst signedTemplateSet = new Set();\nfunction defaultEmptyTemplate() {\n  return [];\n}\nsignedTemplateSet.add(defaultEmptyTemplate);\nfunction isTemplateRegistered(tpl) {\n  return signedTemplateSet.has(tpl);\n}\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\n\nfunction registerTemplate(tpl) {\n  signedTemplateSet.add(tpl); // chaining this method as a way to wrap existing\n  // assignment of templates easily, without too much transformation\n\n  return tpl;\n}\n/**\n * EXPERIMENTAL: This function acts like a hook for Lightning Locker\n * Service and other similar libraries to sanitize vulnerable attributes.\n * This API is subject to change or being removed.\n */\n\nfunction sanitizeAttribute(tagName, namespaceUri, attrName, attrValue) {\n  // locker-service patches this function during runtime to sanitize vulnerable attributes.\n  // when ran off-core this function becomes a noop and returns the user authored value.\n  return attrValue;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst CachedStyleFragments = create(null);\n\nfunction createStyleElement(styleContent) {\n  const elm = document.createElement('style');\n  elm.type = 'text/css';\n  elm.textContent = styleContent;\n  return elm;\n}\n\nfunction getCachedStyleElement(styleContent) {\n  let fragment = CachedStyleFragments[styleContent];\n\n  if (isUndefined(fragment)) {\n    fragment = document.createDocumentFragment();\n    const styleElm = createStyleElement(styleContent);\n    fragment.appendChild(styleElm);\n    CachedStyleFragments[styleContent] = fragment;\n  }\n\n  return fragment.cloneNode(true).firstChild;\n}\n\nconst globalStyleParent = document.head || document.body || document;\nconst InsertedGlobalStyleContent = create(null);\n\nfunction insertGlobalStyle(styleContent) {\n  // inserts the global style when needed, otherwise does nothing\n  if (isUndefined(InsertedGlobalStyleContent[styleContent])) {\n    InsertedGlobalStyleContent[styleContent] = true;\n    const elm = createStyleElement(styleContent);\n    globalStyleParent.appendChild(elm);\n  }\n}\n\nfunction createStyleVNode(elm) {\n  const vnode = h('style', {\n    key: 'style'\n  }, EmptyArray); // TODO [#1364]: supporting the ability to inject a cloned StyleElement\n  // forcing the diffing algo to use the cloned style for native shadow\n\n  vnode.clonedElement = elm;\n  return vnode;\n}\n/**\n * Reset the styling token applied to the host element.\n */\n\n\nfunction resetStyleAttributes(vm) {\n  const {\n    context,\n    elm\n  } = vm; // Remove the style attribute currently applied to the host element.\n\n  const oldHostAttribute = context.hostAttribute;\n\n  if (!isUndefined(oldHostAttribute)) {\n    removeAttribute.call(elm, oldHostAttribute);\n  } // Reset the scoping attributes associated to the context.\n\n\n  context.hostAttribute = context.shadowAttribute = undefined;\n}\n/**\n * Apply/Update the styling token applied to the host element.\n */\n\nfunction applyStyleAttributes(vm, hostAttribute, shadowAttribute) {\n  const {\n    context,\n    elm\n  } = vm; // Remove the style attribute currently applied to the host element.\n\n  setAttribute.call(elm, hostAttribute, '');\n  context.hostAttribute = hostAttribute;\n  context.shadowAttribute = shadowAttribute;\n}\n\nfunction collectStylesheets(stylesheets, hostSelector, shadowSelector, isNative, aggregatorFn) {\n  forEach.call(stylesheets, sheet => {\n    if (isArray$1(sheet)) {\n      collectStylesheets(sheet, hostSelector, shadowSelector, isNative, aggregatorFn);\n    } else {\n      aggregatorFn(sheet(hostSelector, shadowSelector, isNative));\n    }\n  });\n}\n\nfunction evaluateCSS(stylesheets, hostAttribute, shadowAttribute) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(stylesheets), `Invalid stylesheets.`);\n  }\n\n  if (useSyntheticShadow) {\n    const hostSelector = `[${hostAttribute}]`;\n    const shadowSelector = `[${shadowAttribute}]`;\n    collectStylesheets(stylesheets, hostSelector, shadowSelector, false, textContent => {\n      insertGlobalStyle(textContent);\n    });\n    return null;\n  } else {\n    // Native shadow in place, we need to act accordingly by using the `:host` selector, and an\n    // empty shadow selector since it is not really needed.\n    let buffer = '';\n    collectStylesheets(stylesheets, emptyString, emptyString, true, textContent => {\n      buffer += textContent;\n    });\n    return createStyleVNode(getCachedStyleElement(buffer));\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nvar GlobalMeasurementPhase;\n\n(function (GlobalMeasurementPhase) {\n  GlobalMeasurementPhase[\"REHYDRATE\"] = \"lwc-rehydrate\";\n  GlobalMeasurementPhase[\"HYDRATE\"] = \"lwc-hydrate\";\n})(GlobalMeasurementPhase || (GlobalMeasurementPhase = {})); // Even if all the browser the engine supports implements the UserTiming API, we need to guard the measure APIs.\n// JSDom (used in Jest) for example doesn't implement the UserTiming APIs.\n\n\nconst isUserTimingSupported = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';\n\nfunction getMarkName(phase, vm) {\n  // Adding the VM idx to the mark name creates a unique mark name component instance. This is necessary to produce\n  // the right measures for components that are recursive.\n  return `${getComponentTag(vm)} - ${phase} - ${vm.idx}`;\n}\n\nfunction getMeasureName(phase, vm) {\n  return `${getComponentTag(vm)} - ${phase}`;\n}\n\nfunction start(markName) {\n  performance.mark(markName);\n}\n\nfunction end(measureName, markName) {\n  performance.measure(measureName, markName); // Clear the created marks and measure to avoid filling the performance entries buffer.\n  // Note: Even if the entries get deleted, existing PerformanceObservers preserve a copy of those entries.\n\n  performance.clearMarks(markName);\n  performance.clearMarks(measureName);\n}\n\nfunction noop$1() {\n  /* do nothing */\n}\n\nconst startMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = getMarkName(phase, vm);\n  start(markName);\n};\nconst endMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = getMarkName(phase, vm);\n  const measureName = getMeasureName(phase, vm);\n  end(measureName, markName);\n};\nconst startGlobalMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = isUndefined(vm) ? phase : getMarkName(phase, vm);\n  start(markName);\n};\nconst endGlobalMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = isUndefined(vm) ? phase : getMarkName(phase, vm);\n  end(phase, markName);\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet isUpdatingTemplate = false;\nlet vmBeingRendered = null;\nfunction getVMBeingRendered() {\n  return vmBeingRendered;\n}\nfunction setVMBeingRendered(vm) {\n  vmBeingRendered = vm;\n}\nfunction isVMBeingRendered(vm) {\n  return vm === vmBeingRendered;\n}\nconst EmptySlots = create(null);\n\nfunction validateSlots(vm, html) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const {\n    cmpSlots = EmptySlots\n  } = vm;\n  const {\n    slots = EmptyArray\n  } = html;\n\n  for (const slotName in cmpSlots) {\n    // eslint-disable-next-line lwc-internal/no-production-assert\n    assert.isTrue(isArray$1(cmpSlots[slotName]), `Slots can only be set to an array, instead received ${toString(cmpSlots[slotName])} for slot \"${slotName}\" in ${vm}.`);\n\n    if (slotName !== '' && ArrayIndexOf.call(slots, slotName) === -1) {\n      // TODO [#1297]: this should never really happen because the compiler should always validate\n      // eslint-disable-next-line lwc-internal/no-production-assert\n      logError(`Ignoring unknown provided slot name \"${slotName}\" in ${vm}. Check for a typo on the slot attribute.`, vm);\n    }\n  }\n}\n\nfunction validateFields(vm, html) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const {\n    component\n  } = vm; // validating identifiers used by template that should be provided by the component\n\n  const {\n    ids = []\n  } = html;\n  forEach.call(ids, propName => {\n    if (!(propName in component)) {\n      // eslint-disable-next-line lwc-internal/no-production-assert\n      logError(`The template rendered by ${vm} references \\`this.${propName}\\`, which is not declared. Check for a typo in the template.`, vm);\n    }\n  });\n}\n\nfunction evaluateTemplate(vm, html) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isFunction(html), `evaluateTemplate() second argument must be an imported template instead of ${toString(html)}`);\n  }\n\n  const isUpdatingTemplateInception = isUpdatingTemplate;\n  const vmOfTemplateBeingUpdatedInception = vmBeingRendered;\n  let vnodes = [];\n  runWithBoundaryProtection(vm, vm.owner, () => {\n    // pre\n    vmBeingRendered = vm;\n\n    if (process.env.NODE_ENV !== 'production') {\n      startMeasure('render', vm);\n    }\n  }, () => {\n    // job\n    const {\n      component,\n      context,\n      cmpSlots,\n      cmpTemplate,\n      tro\n    } = vm;\n    tro.observe(() => {\n      // reset the cache memoizer for template when needed\n      if (html !== cmpTemplate) {\n        // perf opt: do not reset the shadow root during the first rendering (there is nothing to reset)\n        if (!isUndefined(cmpTemplate)) {\n          // It is important to reset the content to avoid reusing similar elements generated from a different\n          // template, because they could have similar IDs, and snabbdom just rely on the IDs.\n          resetShadowRoot(vm);\n        } // Check that the template was built by the compiler\n\n\n        if (isUndefined(html) || !isTemplateRegistered(html)) {\n          throw new TypeError(`Invalid template returned by the render() method on ${vm}. It must return an imported template (e.g.: \\`import html from \"./${vm.def.name}.html\"\\`), instead, it has returned: ${toString(html)}.`);\n        }\n\n        vm.cmpTemplate = html; // Populate context with template information\n\n        context.tplCache = create(null);\n        resetStyleAttributes(vm);\n        const {\n          stylesheets,\n          stylesheetTokens\n        } = html;\n\n        if (isUndefined(stylesheets) || stylesheets.length === 0) {\n          context.styleVNode = null;\n        } else if (!isUndefined(stylesheetTokens)) {\n          const {\n            hostAttribute,\n            shadowAttribute\n          } = stylesheetTokens;\n          applyStyleAttributes(vm, hostAttribute, shadowAttribute); // Caching style vnode so it can be reused on every render\n\n          context.styleVNode = evaluateCSS(stylesheets, hostAttribute, shadowAttribute);\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          // one time operation for any new template returned by render()\n          // so we can warn if the template is attempting to use a binding\n          // that is not provided by the component instance.\n          validateFields(vm, html);\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isObject$1(context.tplCache), `vm.context.tplCache must be an object associated to ${cmpTemplate}.`); // validating slots in every rendering since the allocated content might change over time\n\n        validateSlots(vm, html);\n      } // right before producing the vnodes, we clear up all internal references\n      // to custom elements from the template.\n\n\n      vm.velements = []; // Set the global flag that template is being updated\n\n      isUpdatingTemplate = true;\n      vnodes = html.call(undefined, api, component, cmpSlots, context.tplCache);\n      const {\n        styleVNode\n      } = context;\n\n      if (!isNull(styleVNode)) {\n        ArrayUnshift$1.call(vnodes, styleVNode);\n      }\n    });\n  }, () => {\n    // post\n    isUpdatingTemplate = isUpdatingTemplateInception;\n    vmBeingRendered = vmOfTemplateBeingUpdatedInception;\n\n    if (process.env.NODE_ENV !== 'production') {\n      endMeasure('render', vm);\n    }\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isArray$1(vnodes), `Compiler should produce html functions that always return an array.`);\n  }\n\n  return vnodes;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet isInvokingRender = false;\nlet vmBeingConstructed = null;\nfunction isBeingConstructed(vm) {\n  return vmBeingConstructed === vm;\n}\nlet vmInvokingRenderedCallback = null;\nfunction isInvokingRenderedCallback(vm) {\n  return vmInvokingRenderedCallback === vm;\n}\n\nconst noop$2 = () => void 0;\n\nfunction invokeComponentCallback(vm, fn, args) {\n  const {\n    component,\n    callHook,\n    owner\n  } = vm;\n  let result;\n  runWithBoundaryProtection(vm, owner, noop$2, () => {\n    // job\n    result = callHook(component, fn, args);\n  }, noop$2);\n  return result;\n}\nfunction invokeComponentConstructor(vm, Ctor) {\n  const vmBeingConstructedInception = vmBeingConstructed;\n  let error;\n\n  if (process.env.NODE_ENV !== 'production') {\n    startMeasure('constructor', vm);\n  }\n\n  vmBeingConstructed = vm;\n  /**\n   * Constructors don't need to be wrapped with a boundary because for root elements\n   * it should throw, while elements from template are already wrapped by a boundary\n   * associated to the diffing algo.\n   */\n\n  try {\n    // job\n    const result = new Ctor(); // Check indirectly if the constructor result is an instance of LightningElement. Using\n    // the \"instanceof\" operator would not work here since Locker Service provides its own\n    // implementation of LightningElement, so we indirectly check if the base constructor is\n    // invoked by accessing the component on the vm.\n\n    if (vmBeingConstructed.component !== result) {\n      throw new TypeError('Invalid component constructor, the class should extend LightningElement.');\n    }\n  } catch (e) {\n    error = Object(e);\n  } finally {\n    if (process.env.NODE_ENV !== 'production') {\n      endMeasure('constructor', vm);\n    }\n\n    vmBeingConstructed = vmBeingConstructedInception;\n\n    if (!isUndefined(error)) {\n      error.wcStack = getErrorComponentStack(vm); // re-throwing the original error annotated after restoring the context\n\n      throw error; // eslint-disable-line no-unsafe-finally\n    }\n  }\n}\nfunction invokeComponentRenderMethod(vm) {\n  const {\n    def: {\n      render\n    },\n    callHook,\n    component,\n    owner\n  } = vm;\n  const isRenderBeingInvokedInception = isInvokingRender;\n  const vmBeingRenderedInception = getVMBeingRendered();\n  let html;\n  let renderInvocationSuccessful = false;\n  runWithBoundaryProtection(vm, owner, () => {\n    // pre\n    isInvokingRender = true;\n    setVMBeingRendered(vm);\n  }, () => {\n    // job\n    vm.tro.observe(() => {\n      html = callHook(component, render);\n      renderInvocationSuccessful = true;\n    });\n  }, () => {\n    // post\n    isInvokingRender = isRenderBeingInvokedInception;\n    setVMBeingRendered(vmBeingRenderedInception);\n  }); // If render() invocation failed, process errorCallback in boundary and return an empty template\n\n  return renderInvocationSuccessful ? evaluateTemplate(vm, html) : [];\n}\nfunction invokeComponentRenderedCallback(vm) {\n  const {\n    def: {\n      renderedCallback\n    },\n    component,\n    callHook,\n    owner\n  } = vm;\n\n  if (!isUndefined(renderedCallback)) {\n    const vmInvokingRenderedCallbackInception = vmInvokingRenderedCallback;\n    runWithBoundaryProtection(vm, owner, () => {\n      vmInvokingRenderedCallback = vm; // pre\n\n      if (process.env.NODE_ENV !== 'production') {\n        startMeasure('renderedCallback', vm);\n      }\n    }, () => {\n      // job\n      callHook(component, renderedCallback);\n    }, () => {\n      // post\n      if (process.env.NODE_ENV !== 'production') {\n        endMeasure('renderedCallback', vm);\n      }\n\n      vmInvokingRenderedCallback = vmInvokingRenderedCallbackInception;\n    });\n  }\n}\nfunction invokeEventListener(vm, fn, thisValue, event) {\n  const {\n    callHook,\n    owner\n  } = vm;\n  runWithBoundaryProtection(vm, owner, noop$2, () => {\n    // job\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isTrue(isFunction(fn), `Invalid event handler for event '${event.type}' on ${vm}.`);\n    }\n\n    callHook(thisValue, fn, [event]);\n  }, noop$2);\n}\n\n/*\n * Copyright (c) 2019, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst {\n  create: create$1\n} = Object;\nconst {\n  splice: ArraySplice$1,\n  indexOf: ArrayIndexOf$1,\n  push: ArrayPush$1\n} = Array.prototype;\nconst TargetToReactiveRecordMap = new WeakMap();\n\nfunction isUndefined$1(obj) {\n  return obj === undefined;\n}\n\nfunction getReactiveRecord(target) {\n  let reactiveRecord = TargetToReactiveRecordMap.get(target);\n\n  if (isUndefined$1(reactiveRecord)) {\n    const newRecord = create$1(null);\n    reactiveRecord = newRecord;\n    TargetToReactiveRecordMap.set(target, newRecord);\n  }\n\n  return reactiveRecord;\n}\n\nlet currentReactiveObserver = null;\nfunction valueMutated(target, key) {\n  const reactiveRecord = TargetToReactiveRecordMap.get(target);\n\n  if (!isUndefined$1(reactiveRecord)) {\n    const reactiveObservers = reactiveRecord[key];\n\n    if (!isUndefined$1(reactiveObservers)) {\n      for (let i = 0, len = reactiveObservers.length; i < len; i += 1) {\n        const ro = reactiveObservers[i];\n        ro.notify();\n      }\n    }\n  }\n}\nfunction valueObserved(target, key) {\n  // We should determine if an active Observing Record is present to track mutations.\n  if (currentReactiveObserver === null) {\n    return;\n  }\n\n  const ro = currentReactiveObserver;\n  const reactiveRecord = getReactiveRecord(target);\n  let reactiveObservers = reactiveRecord[key];\n\n  if (isUndefined$1(reactiveObservers)) {\n    reactiveObservers = [];\n    reactiveRecord[key] = reactiveObservers;\n  } else if (reactiveObservers[0] === ro) {\n    return; // perf optimization considering that most subscriptions will come from the same record\n  }\n\n  if (ArrayIndexOf$1.call(reactiveObservers, ro) === -1) {\n    ro.link(reactiveObservers);\n  }\n}\nclass ReactiveObserver {\n  constructor(callback) {\n    this.listeners = [];\n    this.callback = callback;\n  }\n\n  observe(job) {\n    const inceptionReactiveRecord = currentReactiveObserver;\n    currentReactiveObserver = this;\n    let error;\n\n    try {\n      job();\n    } catch (e) {\n      error = Object(e);\n    } finally {\n      currentReactiveObserver = inceptionReactiveRecord;\n\n      if (error !== undefined) {\n        throw error; // eslint-disable-line no-unsafe-finally\n      }\n    }\n  }\n  /**\n   * This method is responsible for disconnecting the Reactive Observer\n   * from any Reactive Record that has a reference to it, to prevent future\n   * notifications about previously recorded access.\n   */\n\n\n  reset() {\n    const {\n      listeners\n    } = this;\n    const len = listeners.length;\n\n    if (len > 0) {\n      for (let i = 0; i < len; i += 1) {\n        const set = listeners[i];\n        const pos = ArrayIndexOf$1.call(listeners[i], this);\n        ArraySplice$1.call(set, pos, 1);\n      }\n\n      listeners.length = 0;\n    }\n  } // friend methods\n\n\n  notify() {\n    this.callback.call(undefined, this);\n  }\n\n  link(reactiveObservers) {\n    ArrayPush$1.call(reactiveObservers, this); // we keep track of observing records where the observing record was added to so we can do some clean up later on\n\n    ArrayPush$1.call(this.listeners, reactiveObservers);\n  }\n\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst signedComponentToMetaMap = new Map();\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\n\nfunction registerComponent(Ctor, {\n  name,\n  tmpl: template\n}) {\n  signedComponentToMetaMap.set(Ctor, {\n    name,\n    template\n  }); // chaining this method as a way to wrap existing\n  // assignment of component constructor easily, without too much transformation\n\n  return Ctor;\n}\nfunction getComponentRegisteredMeta(Ctor) {\n  return signedComponentToMetaMap.get(Ctor);\n}\nfunction createComponent(uninitializedVm, Ctor) {\n  // create the component instance\n  invokeComponentConstructor(uninitializedVm, Ctor);\n  const initializedVm = uninitializedVm;\n\n  if (isUndefined(initializedVm.component)) {\n    throw new ReferenceError(`Invalid construction for ${Ctor}, you must extend LightningElement.`);\n  }\n}\nfunction linkComponent(vm) {\n  const {\n    def: {\n      wire\n    }\n  } = vm;\n\n  if (!isUndefined(wire)) {\n    const {\n      wiring\n    } = Services;\n\n    if (wiring) {\n      invokeServiceHook(vm, wiring);\n    }\n  }\n}\nfunction getTemplateReactiveObserver(vm) {\n  return new ReactiveObserver(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.invariant(!isInvokingRender, `Mutating property is not allowed during the rendering life-cycle of ${getVMBeingRendered()}.`);\n      assert.invariant(!isUpdatingTemplate, `Mutating property is not allowed while updating template of ${getVMBeingRendered()}.`);\n    }\n\n    const {\n      isDirty\n    } = vm;\n\n    if (isFalse$1(isDirty)) {\n      markComponentAsDirty(vm);\n      scheduleRehydration(vm);\n    }\n  });\n}\nfunction renderComponent(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(vm.isDirty, `${vm} is not dirty.`);\n  }\n\n  vm.tro.reset();\n  const vnodes = invokeComponentRenderMethod(vm);\n  vm.isDirty = false;\n  vm.isScheduled = false;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isArray$1(vnodes), `${vm}.render() should always return an array of vnodes instead of ${vnodes}`);\n  }\n\n  return vnodes;\n}\nfunction markComponentAsDirty(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    const vmBeingRendered = getVMBeingRendered();\n    assert.isFalse(vm.isDirty, `markComponentAsDirty() for ${vm} should not be called when the component is already dirty.`);\n    assert.isFalse(isInvokingRender, `markComponentAsDirty() for ${vm} cannot be called during rendering of ${vmBeingRendered}.`);\n    assert.isFalse(isUpdatingTemplate, `markComponentAsDirty() for ${vm} cannot be called while updating template of ${vmBeingRendered}.`);\n  }\n\n  vm.isDirty = true;\n}\nconst cmpEventListenerMap = new WeakMap();\nfunction getWrappedComponentsListener(vm, listener) {\n  if (!isFunction(listener)) {\n    throw new TypeError(); // avoiding problems with non-valid listeners\n  }\n\n  let wrappedListener = cmpEventListenerMap.get(listener);\n\n  if (isUndefined(wrappedListener)) {\n    wrappedListener = function (event) {\n      invokeEventListener(vm, listener, undefined, event);\n    };\n\n    cmpEventListenerMap.set(listener, wrappedListener);\n  }\n\n  return wrappedListener;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction createObservedFieldsDescriptorMap(fields) {\n  return ArrayReduce.call(fields, (acc, field) => {\n    acc[field] = createObservedFieldPropertyDescriptor(field);\n    return acc;\n  }, {});\n}\n\nfunction createObservedFieldPropertyDescriptor(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n      valueObserved(this, key);\n      return vm.cmpTrack[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (newValue !== vm.cmpTrack[key]) {\n        vm.cmpTrack[key] = newValue;\n\n        if (isFalse$1(vm.isDirty)) {\n          valueMutated(this, key);\n        }\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This is a descriptor map that contains\n * all standard properties that a Custom Element can support (including AOM properties), which\n * determines what kind of capabilities the Base HTML Element and\n * Base Lightning Element should support.\n */\n\nconst HTMLElementOriginalDescriptors = create(null);\nforEach.call(ElementPrototypeAriaPropertyNames, propName => {\n  // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because\n  // in IE11, some properties are on Element.prototype instead of HTMLElement, just to be sure.\n  const descriptor = getPropertyDescriptor(HTMLElement.prototype, propName);\n\n  if (!isUndefined(descriptor)) {\n    HTMLElementOriginalDescriptors[propName] = descriptor;\n  }\n});\nforEach.call(defaultDefHTMLPropertyNames, propName => {\n  // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because\n  // in IE11, id property is on Element.prototype instead of HTMLElement, and we suspect that more will fall into\n  // this category, so, better to be sure.\n  const descriptor = getPropertyDescriptor(HTMLElement.prototype, propName);\n\n  if (!isUndefined(descriptor)) {\n    HTMLElementOriginalDescriptors[propName] = descriptor;\n  }\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ShadowRootInnerHTMLSetter = getOwnPropertyDescriptor(ShadowRoot.prototype, 'innerHTML').set;\nconst dispatchEvent = 'EventTarget' in window ? EventTarget.prototype.dispatchEvent : Node.prototype.dispatchEvent; // IE11\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This operation is called with a descriptor of an standard html property\n * that a Custom Element can support (including AOM properties), which\n * determines what kind of capabilities the Base Lightning Element should support. When producing the new descriptors\n * for the Base Lightning Element, it also include the reactivity bit, so the standard property is reactive.\n */\n\nfunction createBridgeToElementDescriptor(propName, descriptor) {\n  const {\n    get,\n    set,\n    enumerable,\n    configurable\n  } = descriptor;\n\n  if (!isFunction(get)) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard getter.`);\n    }\n\n    throw new TypeError();\n  }\n\n  if (!isFunction(set)) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard setter.`);\n    }\n\n    throw new TypeError();\n  }\n\n  return {\n    enumerable,\n    configurable,\n\n    get() {\n      const vm = getAssociatedVM(this);\n\n      if (isBeingConstructed(vm)) {\n        if (process.env.NODE_ENV !== 'production') {\n          const name = vm.elm.constructor.name;\n          logError(`\\`${name}\\` constructor can't read the value of property \\`${propName}\\` because the owner component hasn't set the value yet. Instead, use the \\`${name}\\` constructor to set a default value for the property.`, vm);\n        }\n\n        return;\n      }\n\n      valueObserved(this, propName);\n      return get.call(vm.elm);\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${propName}`);\n        assert.invariant(!isUpdatingTemplate, `When updating the template of ${vmBeingRendered}, one of the accessors used by the template has side effects on the state of ${vm}.${propName}`);\n        assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n        assert.invariant(!isObject$1(newValue) || isNull(newValue), `Invalid value \"${newValue}\" for \"${propName}\" of ${vm}. Value cannot be an object, must be a primitive value.`);\n      }\n\n      if (newValue !== vm.cmpProps[propName]) {\n        vm.cmpProps[propName] = newValue;\n\n        if (isFalse$1(vm.isDirty)) {\n          // perf optimization to skip this step if not in the DOM\n          valueMutated(this, propName);\n        }\n      }\n\n      return set.call(vm.elm, newValue);\n    }\n\n  };\n}\n\nfunction getLinkedElement(cmp) {\n  return getAssociatedVM(cmp).elm;\n}\n/**\n * This class is the base class for any LWC element.\n * Some elements directly extends this class, others implement it via inheritance.\n **/\n\n\nfunction BaseLightningElementConstructor() {\n  // This should be as performant as possible, while any initialization should be done lazily\n  if (isNull(vmBeingConstructed)) {\n    throw new ReferenceError('Illegal constructor');\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(vmBeingConstructed.elm instanceof HTMLElement, `Component creation requires a DOM element to be associated to ${vmBeingConstructed}.`);\n  }\n\n  const vm = vmBeingConstructed;\n  const {\n    elm,\n    mode,\n    def: {\n      ctor\n    }\n  } = vm;\n  const component = this;\n  vm.component = component;\n  vm.tro = getTemplateReactiveObserver(vm);\n  vm.oar = create(null); // interaction hooks\n  // We are intentionally hiding this argument from the formal API of LWCElement because\n  // we don't want folks to know about it just yet.\n\n  if (arguments.length === 1) {\n    const {\n      callHook,\n      setHook,\n      getHook\n    } = arguments[0];\n    vm.callHook = callHook;\n    vm.setHook = setHook;\n    vm.getHook = getHook;\n  } // attaching the shadowRoot\n\n\n  const shadowRootOptions = {\n    mode,\n    delegatesFocus: !!ctor.delegatesFocus,\n    '$$lwc-synthetic-mode$$': true\n  };\n  const cmpRoot = elm.attachShadow(shadowRootOptions); // linking elm, shadow root and component with the VM\n\n  associateVM(component, vm);\n  associateVM(cmpRoot, vm);\n  associateVM(elm, vm); // VM is now initialized\n\n  vm.cmpRoot = cmpRoot;\n\n  if (process.env.NODE_ENV !== 'production') {\n    patchComponentWithRestrictions(component);\n    patchShadowRootWithRestrictions(cmpRoot, EmptyObject);\n  }\n\n  return this;\n} // HTML Element - The Good Parts\n\n\nBaseLightningElementConstructor.prototype = {\n  constructor: BaseLightningElementConstructor,\n\n  dispatchEvent(_event) {\n    const elm = getLinkedElement(this); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch;\n\n    return dispatchEvent.apply(elm, arguments);\n  },\n\n  addEventListener(type, listener, options) {\n    const vm = getAssociatedVM(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vmBeingRendered = getVMBeingRendered();\n      assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm} by adding an event listener for \"${type}\".`);\n      assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm} by adding an event listener for \"${type}\".`);\n      assert.invariant(isFunction(listener), `Invalid second argument for this.addEventListener() in ${vm} for event \"${type}\". Expected an EventListener but received ${listener}.`);\n    }\n\n    const wrappedListener = getWrappedComponentsListener(vm, listener);\n    vm.elm.addEventListener(type, wrappedListener, options);\n  },\n\n  removeEventListener(type, listener, options) {\n    const vm = getAssociatedVM(this);\n    const wrappedListener = getWrappedComponentsListener(vm, listener);\n    vm.elm.removeEventListener(type, wrappedListener, options);\n  },\n\n  setAttributeNS(ns, attrName, _value) {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n    }\n\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    elm.setAttributeNS.apply(elm, arguments);\n    lockAttribute();\n  },\n\n  removeAttributeNS(ns, attrName) {\n    const elm = getLinkedElement(this);\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    elm.removeAttributeNS.apply(elm, arguments);\n    lockAttribute();\n  },\n\n  removeAttribute(attrName) {\n    const elm = getLinkedElement(this);\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    elm.removeAttribute.apply(elm, arguments);\n    lockAttribute();\n  },\n\n  setAttribute(attrName, _value) {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n    }\n\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    elm.setAttribute.apply(elm, arguments);\n    lockAttribute();\n  },\n\n  getAttribute(attrName) {\n    const elm = getLinkedElement(this);\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    const value = elm.getAttribute.apply(elm, arguments);\n    lockAttribute();\n    return value;\n  },\n\n  getAttributeNS(ns, attrName) {\n    const elm = getLinkedElement(this);\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    const value = elm.getAttributeNS.apply(elm, arguments);\n    lockAttribute();\n    return value;\n  },\n\n  getBoundingClientRect() {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `this.getBoundingClientRect() should not be called during the construction of the custom element for ${getComponentTag(vm)} because the element is not yet in the DOM, instead, you can use it in one of the available life-cycle hooks.`);\n    }\n\n    return elm.getBoundingClientRect();\n  },\n\n  /**\n   * Returns the first element that is a descendant of node that\n   * matches selectors.\n   */\n  // querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;\n  // querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;\n  querySelector(selectors) {\n    const vm = getAssociatedVM(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isFalse(isBeingConstructed(vm), `this.querySelector() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    }\n\n    const {\n      elm\n    } = vm;\n    return elm.querySelector(selectors);\n  },\n\n  /**\n   * Returns all element descendants of node that\n   * match selectors.\n   */\n  // querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>,\n  // querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>,\n  querySelectorAll(selectors) {\n    const vm = getAssociatedVM(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isFalse(isBeingConstructed(vm), `this.querySelectorAll() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    }\n\n    const {\n      elm\n    } = vm;\n    return elm.querySelectorAll(selectors);\n  },\n\n  /**\n   * Returns all element descendants of node that\n   * match the provided tagName.\n   */\n  getElementsByTagName(tagNameOrWildCard) {\n    const vm = getAssociatedVM(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isFalse(isBeingConstructed(vm), `this.getElementsByTagName() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    }\n\n    const {\n      elm\n    } = vm;\n    return elm.getElementsByTagName(tagNameOrWildCard);\n  },\n\n  /**\n   * Returns all element descendants of node that\n   * match the provide classnames.\n   */\n  getElementsByClassName(names) {\n    const vm = getAssociatedVM(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isFalse(isBeingConstructed(vm), `this.getElementsByClassName() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    }\n\n    const {\n      elm\n    } = vm;\n    return elm.getElementsByClassName(names);\n  },\n\n  get isConnected() {\n    const vm = getAssociatedVM(this);\n    const {\n      elm\n    } = vm;\n    return elm.isConnected;\n  },\n\n  get classList() {\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this); // TODO [#1290]: this still fails in dev but works in production, eventually, we should just throw in all modes\n\n      assert.isFalse(isBeingConstructed(vm), `Failed to construct ${vm}: The result must not have attributes. Adding or tampering with classname in constructor is not allowed in a web component, use connectedCallback() instead.`);\n    }\n\n    return getLinkedElement(this).classList;\n  },\n\n  get template() {\n    const vm = getAssociatedVM(this);\n    return vm.cmpRoot;\n  },\n\n  get shadowRoot() {\n    // From within the component instance, the shadowRoot is always\n    // reported as \"closed\". Authors should rely on this.template instead.\n    return null;\n  },\n\n  render() {\n    const vm = getAssociatedVM(this);\n    return vm.def.template;\n  },\n\n  toString() {\n    const vm = getAssociatedVM(this);\n    return `[object ${vm.def.name}]`;\n  }\n\n}; // Typescript is inferring the wrong function type for this particular\n// overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n// @ts-ignore type-mismatch\n\nconst baseDescriptors = ArrayReduce.call(getOwnPropertyNames(HTMLElementOriginalDescriptors), (descriptors, propName) => {\n  descriptors[propName] = createBridgeToElementDescriptor(propName, HTMLElementOriginalDescriptors[propName]);\n  return descriptors;\n}, create(null));\ndefineProperties(BaseLightningElementConstructor.prototype, baseDescriptors);\n\nif (process.env.NODE_ENV !== 'production') {\n  patchLightningElementPrototypeWithRestrictions(BaseLightningElementConstructor.prototype);\n}\n\nfreeze(BaseLightningElementConstructor);\nseal(BaseLightningElementConstructor.prototype); // @ts-ignore\n\nconst BaseLightningElement = BaseLightningElementConstructor;\n\n/**\n * Copyright (C) 2017 salesforce.com, inc.\n */\nconst {\n  isArray: isArray$2\n} = Array;\nconst {\n  getPrototypeOf: getPrototypeOf$1,\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  defineProperties: ObjectDefineProperties,\n  isExtensible,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor$1,\n  getOwnPropertyNames: getOwnPropertyNames$1,\n  getOwnPropertySymbols,\n  preventExtensions,\n  hasOwnProperty: hasOwnProperty$2\n} = Object;\nconst {\n  push: ArrayPush$2,\n  concat: ArrayConcat,\n  map: ArrayMap$1\n} = Array.prototype;\nconst OtS$1 = {}.toString;\n\nfunction toString$1(obj) {\n  if (obj && obj.toString) {\n    return obj.toString();\n  } else if (typeof obj === 'object') {\n    return OtS$1.call(obj);\n  } else {\n    return obj + '';\n  }\n}\n\nfunction isUndefined$2(obj) {\n  return obj === undefined;\n}\n\nfunction isFunction$1(obj) {\n  return typeof obj === 'function';\n}\n\nfunction isObject$2(obj) {\n  return typeof obj === 'object';\n}\n\nconst proxyToValueMap = new WeakMap();\n\nfunction registerProxy(proxy, value) {\n  proxyToValueMap.set(proxy, value);\n}\n\nconst unwrap = replicaOrAny => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\nfunction wrapValue(membrane, value) {\n  return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n}\n/**\n * Unwrap property descriptors will set value on original descriptor\n * We only need to unwrap if value is specified\n * @param descriptor external descrpitor provided to define new property on original value\n */\n\n\nfunction unwrapDescriptor(descriptor) {\n  if (hasOwnProperty$2.call(descriptor, 'value')) {\n    descriptor.value = unwrap(descriptor.value);\n  }\n\n  return descriptor;\n}\n\nfunction lockShadowTarget(membrane, shadowTarget, originalTarget) {\n  const targetKeys = ArrayConcat.call(getOwnPropertyNames$1(originalTarget), getOwnPropertySymbols(originalTarget));\n  targetKeys.forEach(key => {\n    let descriptor = getOwnPropertyDescriptor$1(originalTarget, key); // We do not need to wrap the descriptor if configurable\n    // Because we can deal with wrapping it when user goes through\n    // Get own property descriptor. There is also a chance that this descriptor\n    // could change sometime in the future, so we can defer wrapping\n    // until we need to\n\n    if (!descriptor.configurable) {\n      descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n    }\n\n    ObjectDefineProperty(shadowTarget, key, descriptor);\n  });\n  preventExtensions(shadowTarget);\n}\n\nclass ReactiveProxyHandler {\n  constructor(membrane, value) {\n    this.originalTarget = value;\n    this.membrane = membrane;\n  }\n\n  get(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const value = originalTarget[key];\n    const {\n      valueObserved\n    } = membrane;\n    valueObserved(originalTarget, key);\n    return membrane.getProxy(value);\n  }\n\n  set(shadowTarget, key, value) {\n    const {\n      originalTarget,\n      membrane: {\n        valueMutated\n      }\n    } = this;\n    const oldValue = originalTarget[key];\n\n    if (oldValue !== value) {\n      originalTarget[key] = value;\n      valueMutated(originalTarget, key);\n    } else if (key === 'length' && isArray$2(originalTarget)) {\n      // fix for issue #236: push will add the new index, and by the time length\n      // is updated, the internal length is already equal to the new length value\n      // therefore, the oldValue is equal to the value. This is the forking logic\n      // to support this use case.\n      valueMutated(originalTarget, key);\n    }\n\n    return true;\n  }\n\n  deleteProperty(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueMutated\n      }\n    } = this;\n    delete originalTarget[key];\n    valueMutated(originalTarget, key);\n    return true;\n  }\n\n  apply(shadowTarget, thisArg, argArray) {\n    /* No op */\n  }\n\n  construct(target, argArray, newTarget) {\n    /* No op */\n  }\n\n  has(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueObserved\n      }\n    } = this;\n    valueObserved(originalTarget, key);\n    return key in originalTarget;\n  }\n\n  ownKeys(shadowTarget) {\n    const {\n      originalTarget\n    } = this;\n    return ArrayConcat.call(getOwnPropertyNames$1(originalTarget), getOwnPropertySymbols(originalTarget));\n  }\n\n  isExtensible(shadowTarget) {\n    const shadowIsExtensible = isExtensible(shadowTarget);\n\n    if (!shadowIsExtensible) {\n      return shadowIsExtensible;\n    }\n\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const targetIsExtensible = isExtensible(originalTarget);\n\n    if (!targetIsExtensible) {\n      lockShadowTarget(membrane, shadowTarget, originalTarget);\n    }\n\n    return targetIsExtensible;\n  }\n\n  setPrototypeOf(shadowTarget, prototype) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Invalid setPrototypeOf invocation for reactive proxy ${toString$1(this.originalTarget)}. Prototype of reactive objects cannot be changed.`);\n    }\n  }\n\n  getPrototypeOf(shadowTarget) {\n    const {\n      originalTarget\n    } = this;\n    return getPrototypeOf$1(originalTarget);\n  }\n\n  getOwnPropertyDescriptor(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const {\n      valueObserved\n    } = this.membrane; // keys looked up via hasOwnProperty need to be reactive\n\n    valueObserved(originalTarget, key);\n    let desc = getOwnPropertyDescriptor$1(originalTarget, key);\n\n    if (isUndefined$2(desc)) {\n      return desc;\n    }\n\n    const shadowDescriptor = getOwnPropertyDescriptor$1(shadowTarget, key);\n\n    if (!isUndefined$2(shadowDescriptor)) {\n      return shadowDescriptor;\n    } // Note: by accessing the descriptor, the key is marked as observed\n    // but access to the value, setter or getter (if available) cannot observe\n    // mutations, just like regular methods, in which case we just do nothing.\n\n\n    desc = wrapDescriptor(membrane, desc, wrapValue);\n\n    if (!desc.configurable) {\n      // If descriptor from original target is not configurable,\n      // We must copy the wrapped descriptor over to the shadow target.\n      // Otherwise, proxy will throw an invariant error.\n      // This is our last chance to lock the value.\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n      ObjectDefineProperty(shadowTarget, key, desc);\n    }\n\n    return desc;\n  }\n\n  preventExtensions(shadowTarget) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    lockShadowTarget(membrane, shadowTarget, originalTarget);\n    preventExtensions(originalTarget);\n    return true;\n  }\n\n  defineProperty(shadowTarget, key, descriptor) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const {\n      valueMutated\n    } = membrane;\n    const {\n      configurable\n    } = descriptor; // We have to check for value in descriptor\n    // because Object.freeze(proxy) calls this method\n    // with only { configurable: false, writeable: false }\n    // Additionally, method will only be called with writeable:false\n    // if the descriptor has a value, as opposed to getter/setter\n    // So we can just check if writable is present and then see if\n    // value is present. This eliminates getter and setter descriptors\n\n    if (hasOwnProperty$2.call(descriptor, 'writable') && !hasOwnProperty$2.call(descriptor, 'value')) {\n      const originalDescriptor = getOwnPropertyDescriptor$1(originalTarget, key);\n      descriptor.value = originalDescriptor.value;\n    }\n\n    ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n\n    if (configurable === false) {\n      ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n    }\n\n    valueMutated(originalTarget, key);\n    return true;\n  }\n\n}\n\nfunction wrapReadOnlyValue(membrane, value) {\n  return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n}\n\nclass ReadOnlyHandler {\n  constructor(membrane, value) {\n    this.originalTarget = value;\n    this.membrane = membrane;\n  }\n\n  get(shadowTarget, key) {\n    const {\n      membrane,\n      originalTarget\n    } = this;\n    const value = originalTarget[key];\n    const {\n      valueObserved\n    } = membrane;\n    valueObserved(originalTarget, key);\n    return membrane.getReadOnlyProxy(value);\n  }\n\n  set(shadowTarget, key, value) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot set \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n  deleteProperty(shadowTarget, key) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot delete \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n  apply(shadowTarget, thisArg, argArray) {\n    /* No op */\n  }\n\n  construct(target, argArray, newTarget) {\n    /* No op */\n  }\n\n  has(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueObserved\n      }\n    } = this;\n    valueObserved(originalTarget, key);\n    return key in originalTarget;\n  }\n\n  ownKeys(shadowTarget) {\n    const {\n      originalTarget\n    } = this;\n    return ArrayConcat.call(getOwnPropertyNames$1(originalTarget), getOwnPropertySymbols(originalTarget));\n  }\n\n  setPrototypeOf(shadowTarget, prototype) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid prototype mutation: Cannot set prototype on \"${originalTarget}\". \"${originalTarget}\" prototype is read-only.`);\n    }\n  }\n\n  getOwnPropertyDescriptor(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const {\n      valueObserved\n    } = membrane; // keys looked up via hasOwnProperty need to be reactive\n\n    valueObserved(originalTarget, key);\n    let desc = getOwnPropertyDescriptor$1(originalTarget, key);\n\n    if (isUndefined$2(desc)) {\n      return desc;\n    }\n\n    const shadowDescriptor = getOwnPropertyDescriptor$1(shadowTarget, key);\n\n    if (!isUndefined$2(shadowDescriptor)) {\n      return shadowDescriptor;\n    } // Note: by accessing the descriptor, the key is marked as observed\n    // but access to the value or getter (if available) cannot be observed,\n    // just like regular methods, in which case we just do nothing.\n\n\n    desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n\n    if (hasOwnProperty$2.call(desc, 'set')) {\n      desc.set = undefined; // readOnly membrane does not allow setters\n    }\n\n    if (!desc.configurable) {\n      // If descriptor from original target is not configurable,\n      // We must copy the wrapped descriptor over to the shadow target.\n      // Otherwise, proxy will throw an invariant error.\n      // This is our last chance to lock the value.\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n      ObjectDefineProperty(shadowTarget, key, desc);\n    }\n\n    return desc;\n  }\n\n  preventExtensions(shadowTarget) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot preventExtensions on ${originalTarget}\". \"${originalTarget} is read-only.`);\n    }\n\n    return false;\n  }\n\n  defineProperty(shadowTarget, key, descriptor) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot defineProperty \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n}\n\nfunction extract(objectOrArray) {\n  if (isArray$2(objectOrArray)) {\n    return objectOrArray.map(item => {\n      const original = unwrap(item);\n\n      if (original !== item) {\n        return extract(original);\n      }\n\n      return item;\n    });\n  }\n\n  const obj = ObjectCreate(getPrototypeOf$1(objectOrArray));\n  const names = getOwnPropertyNames$1(objectOrArray);\n  return ArrayConcat.call(names, getOwnPropertySymbols(objectOrArray)).reduce((seed, key) => {\n    const item = objectOrArray[key];\n    const original = unwrap(item);\n\n    if (original !== item) {\n      seed[key] = extract(original);\n    } else {\n      seed[key] = item;\n    }\n\n    return seed;\n  }, obj);\n}\n\nconst formatter = {\n  header: plainOrProxy => {\n    const originalTarget = unwrap(plainOrProxy); // if originalTarget is falsy or not unwrappable, exit\n\n    if (!originalTarget || originalTarget === plainOrProxy) {\n      return null;\n    }\n\n    const obj = extract(plainOrProxy);\n    return ['object', {\n      object: obj\n    }];\n  },\n  hasBody: () => {\n    return false;\n  },\n  body: () => {\n    return null;\n  }\n}; // Inspired from paulmillr/es6-shim\n// https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L176-L185\n\nfunction getGlobal() {\n  // the only reliable means to get the global object is `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  } // Gracefully degrade if not able to locate the global object\n\n\n  return {};\n}\n\nfunction init() {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const global = getGlobal(); // Custom Formatter for Dev Tools. To enable this, open Chrome Dev Tools\n  //  - Go to Settings,\n  //  - Under console, select \"Enable custom formatters\"\n  // For more information, https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview\n\n  const devtoolsFormatters = global.devtoolsFormatters || [];\n  ArrayPush$2.call(devtoolsFormatters, formatter);\n  global.devtoolsFormatters = devtoolsFormatters;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  init();\n}\n\nfunction createShadowTarget(value) {\n  let shadowTarget = undefined;\n\n  if (isArray$2(value)) {\n    shadowTarget = [];\n  } else if (isObject$2(value)) {\n    shadowTarget = {};\n  }\n\n  return shadowTarget;\n}\n\nconst ObjectDotPrototype = Object.prototype;\n\nfunction defaultValueIsObservable(value) {\n  // intentionally checking for null\n  if (value === null) {\n    return false;\n  } // treat all non-object types, including undefined, as non-observable values\n\n\n  if (typeof value !== 'object') {\n    return false;\n  }\n\n  if (isArray$2(value)) {\n    return true;\n  }\n\n  const proto = getPrototypeOf$1(value);\n  return proto === ObjectDotPrototype || proto === null || getPrototypeOf$1(proto) === null;\n}\n\nconst defaultValueObserved = (obj, key) => {\n  /* do nothing */\n};\n\nconst defaultValueMutated = (obj, key) => {\n  /* do nothing */\n};\n\nconst defaultValueDistortion = value => value;\n\nfunction wrapDescriptor(membrane, descriptor, getValue) {\n  const {\n    set,\n    get\n  } = descriptor;\n\n  if (hasOwnProperty$2.call(descriptor, 'value')) {\n    descriptor.value = getValue(membrane, descriptor.value);\n  } else {\n    if (!isUndefined$2(get)) {\n      descriptor.get = function () {\n        // invoking the original getter with the original target\n        return getValue(membrane, get.call(unwrap(this)));\n      };\n    }\n\n    if (!isUndefined$2(set)) {\n      descriptor.set = function (value) {\n        // At this point we don't have a clear indication of whether\n        // or not a valid mutation will occur, we don't have the key,\n        // and we are not sure why and how they are invoking this setter.\n        // Nevertheless we preserve the original semantics by invoking the\n        // original setter with the original target and the unwrapped value\n        set.call(unwrap(this), membrane.unwrapProxy(value));\n      };\n    }\n  }\n\n  return descriptor;\n}\n\nclass ReactiveMembrane {\n  constructor(options) {\n    this.valueDistortion = defaultValueDistortion;\n    this.valueMutated = defaultValueMutated;\n    this.valueObserved = defaultValueObserved;\n    this.valueIsObservable = defaultValueIsObservable;\n    this.objectGraph = new WeakMap();\n\n    if (!isUndefined$2(options)) {\n      const {\n        valueDistortion,\n        valueMutated,\n        valueObserved,\n        valueIsObservable\n      } = options;\n      this.valueDistortion = isFunction$1(valueDistortion) ? valueDistortion : defaultValueDistortion;\n      this.valueMutated = isFunction$1(valueMutated) ? valueMutated : defaultValueMutated;\n      this.valueObserved = isFunction$1(valueObserved) ? valueObserved : defaultValueObserved;\n      this.valueIsObservable = isFunction$1(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n    }\n  }\n\n  getProxy(value) {\n    const unwrappedValue = unwrap(value);\n    const distorted = this.valueDistortion(unwrappedValue);\n\n    if (this.valueIsObservable(distorted)) {\n      const o = this.getReactiveState(unwrappedValue, distorted); // when trying to extract the writable version of a readonly\n      // we return the readonly.\n\n      return o.readOnly === value ? value : o.reactive;\n    }\n\n    return distorted;\n  }\n\n  getReadOnlyProxy(value) {\n    value = unwrap(value);\n    const distorted = this.valueDistortion(value);\n\n    if (this.valueIsObservable(distorted)) {\n      return this.getReactiveState(value, distorted).readOnly;\n    }\n\n    return distorted;\n  }\n\n  unwrapProxy(p) {\n    return unwrap(p);\n  }\n\n  getReactiveState(value, distortedValue) {\n    const {\n      objectGraph\n    } = this;\n    let reactiveState = objectGraph.get(distortedValue);\n\n    if (reactiveState) {\n      return reactiveState;\n    }\n\n    const membrane = this;\n    reactiveState = {\n      get reactive() {\n        const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue); // caching the reactive proxy after the first time it is accessed\n\n        const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n        registerProxy(proxy, value);\n        ObjectDefineProperty(this, 'reactive', {\n          value: proxy\n        });\n        return proxy;\n      },\n\n      get readOnly() {\n        const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue); // caching the readOnly proxy after the first time it is accessed\n\n        const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n        registerProxy(proxy, value);\n        ObjectDefineProperty(this, 'readOnly', {\n          value: proxy\n        });\n        return proxy;\n      }\n\n    };\n    objectGraph.set(distortedValue, reactiveState);\n    return reactiveState;\n  }\n\n}\n/** version: 0.26.0 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction valueDistortion(value) {\n  return value;\n}\n\nconst reactiveMembrane = new ReactiveMembrane({\n  valueObserved,\n  valueMutated,\n  valueDistortion\n});\n/**\n * EXPERIMENTAL: This function implements an unwrap mechanism that\n * works for observable membrane objects. This API is subject to\n * change or being removed.\n */\n\nconst unwrap$1 = function (value) {\n  const unwrapped = reactiveMembrane.unwrapProxy(value);\n\n  if (unwrapped !== value) {\n    // if value is a proxy, unwrap to access original value and apply distortion\n    return valueDistortion(unwrapped);\n  }\n\n  return value;\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// from the element instance, and get the value or set a new value on the component.\n// This means that across different elements, similar names can get the exact same\n// descriptor, so we can cache them:\n\nconst cachedGetterByKey = create(null);\nconst cachedSetterByKey = create(null);\n\nfunction createGetter(key) {\n  let fn = cachedGetterByKey[key];\n\n  if (isUndefined(fn)) {\n    fn = cachedGetterByKey[key] = function () {\n      const vm = getAssociatedVM(this);\n      const {\n        getHook\n      } = vm;\n      return getHook(vm.component, key);\n    };\n  }\n\n  return fn;\n}\n\nfunction createSetter(key) {\n  let fn = cachedSetterByKey[key];\n\n  if (isUndefined(fn)) {\n    fn = cachedSetterByKey[key] = function (newValue) {\n      const vm = getAssociatedVM(this);\n      const {\n        setHook\n      } = vm;\n      newValue = reactiveMembrane.getReadOnlyProxy(newValue);\n      setHook(vm.component, key, newValue);\n    };\n  }\n\n  return fn;\n}\n\nfunction createMethodCaller(methodName) {\n  return function () {\n    const vm = getAssociatedVM(this);\n    const {\n      callHook,\n      component\n    } = vm;\n    const fn = component[methodName];\n    return callHook(vm.component, fn, ArraySlice$1.call(arguments));\n  };\n}\n\nfunction HTMLBridgeElementFactory(SuperClass, props, methods) {\n  let HTMLBridgeElement;\n  /**\n   * Modern browsers will have all Native Constructors as regular Classes\n   * and must be instantiated with the new keyword. In older browsers,\n   * specifically IE11, those are objects with a prototype property defined,\n   * since they are not supposed to be extended or instantiated with the\n   * new keyword. This forking logic supports both cases, specifically because\n   * wc.ts relies on the construction path of the bridges to create new\n   * fully qualifying web components.\n   */\n\n  if (isFunction(SuperClass)) {\n    HTMLBridgeElement = class extends SuperClass {};\n  } else {\n    HTMLBridgeElement = function () {\n      // Bridge classes are not supposed to be instantiated directly in\n      // browsers that do not support web components.\n      throw new TypeError('Illegal constructor');\n    }; // prototype inheritance dance\n\n\n    setPrototypeOf(HTMLBridgeElement, SuperClass);\n    setPrototypeOf(HTMLBridgeElement.prototype, SuperClass.prototype);\n    defineProperty(HTMLBridgeElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      value: HTMLBridgeElement\n    });\n  }\n\n  const descriptors = create(null); // expose getters and setters for each public props on the new Element Bridge\n\n  for (let i = 0, len = props.length; i < len; i += 1) {\n    const propName = props[i];\n    descriptors[propName] = {\n      get: createGetter(propName),\n      set: createSetter(propName),\n      enumerable: true,\n      configurable: true\n    };\n  } // expose public methods as props on the new Element Bridge\n\n\n  for (let i = 0, len = methods.length; i < len; i += 1) {\n    const methodName = methods[i];\n    descriptors[methodName] = {\n      value: createMethodCaller(methodName),\n      writable: true,\n      configurable: true\n    };\n  }\n\n  defineProperties(HTMLBridgeElement.prototype, descriptors);\n  return HTMLBridgeElement;\n}\nconst BaseBridgeElement = HTMLBridgeElementFactory(HTMLElement, getOwnPropertyNames(HTMLElementOriginalDescriptors), []);\nfreeze(BaseBridgeElement);\nseal(BaseBridgeElement.prototype);\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction track(target, prop, descriptor) {\n  if (arguments.length === 1) {\n    return reactiveMembrane.getProxy(target);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length !== 3) {\n      assert.fail(`@track decorator can only be used with one argument to return a trackable object, or as a decorator function.`);\n    }\n\n    if (!isUndefined(descriptor)) {\n      const {\n        get,\n        set,\n        configurable,\n        writable\n      } = descriptor;\n      assert.isTrue(!get && !set, `Compiler Error: A @track decorator can only be applied to a public field.`);\n      assert.isTrue(configurable !== false, `Compiler Error: A @track decorator can only be applied to a configurable property.`);\n      assert.isTrue(writable !== false, `Compiler Error: A @track decorator can only be applied to a writable property.`);\n    }\n  }\n\n  return createTrackedPropertyDescriptor(target, prop, isUndefined(descriptor) ? true : descriptor.enumerable === true);\n}\nfunction createTrackedPropertyDescriptor(Ctor, key, enumerable) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n      valueObserved(this, key);\n      return vm.cmpTrack[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString(key)}`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString(key)}`);\n      }\n\n      const reactiveOrAnyValue = reactiveMembrane.getProxy(newValue);\n\n      if (reactiveOrAnyValue !== vm.cmpTrack[key]) {\n        vm.cmpTrack[key] = reactiveOrAnyValue;\n\n        if (isFalse$1(vm.isDirty)) {\n          // perf optimization to skip this step if the track property is on a component that is already dirty\n          valueMutated(this, key);\n        }\n      }\n    },\n\n    enumerable,\n    configurable: true\n  };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction wireDecorator(target, prop, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(descriptor)) {\n      const {\n        get,\n        set,\n        configurable,\n        writable\n      } = descriptor;\n      assert.isTrue(!get && !set, `Compiler Error: A @wire decorator can only be applied to a public field.`);\n      assert.isTrue(configurable !== false, `Compiler Error: A @wire decorator can only be applied to a configurable property.`);\n      assert.isTrue(writable !== false, `Compiler Error: A @wire decorator can only be applied to a writable property.`);\n    }\n  }\n\n  return createTrackedPropertyDescriptor(target, prop, isObject$1(descriptor) ? descriptor.enumerable === true : true);\n}\n/**\n * @wire decorator to wire fields and methods to a wire adapter in\n * LWC Components. This function implements the internals of this\n * decorator.\n */\n\n\nfunction wire(_adapter, _config) {\n  const len = arguments.length;\n\n  if (len > 0 && len < 3) {\n    return wireDecorator;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.fail('@wire(adapter, config?) may only be used as a decorator.');\n    }\n\n    throw new TypeError();\n  }\n}\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst {\n  assign: assign$1,\n  create: create$2,\n  defineProperties: defineProperties$1,\n  defineProperty: defineProperty$1,\n  freeze: freeze$1,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor$2,\n  getOwnPropertyNames: getOwnPropertyNames$2,\n  getPrototypeOf: getPrototypeOf$2,\n  hasOwnProperty: hasOwnProperty$3,\n  keys: keys$1,\n  seal: seal$1,\n  setPrototypeOf: setPrototypeOf$1\n} = Object;\n\nfunction isUndefined$3(obj) {\n  return obj === undefined;\n}\n\nfunction isTrue$1$1(obj) {\n  return obj === true;\n}\n\nfunction isFalse$1$1(obj) {\n  return obj === false;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/*\n * In IE11, symbols are expensive.\n * Due to the nature of the symbol polyfill. This method abstract the\n * creation of symbols, so we can fallback to string when native symbols\n * are not supported. Note that we can't use typeof since it will fail when transpiling.\n */\n\n\nconst hasNativeSymbolsSupport$1 = Symbol('x').toString() === 'Symbol(x)';\n/** version: 1.3.2 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Cached reference to globalThis\n\nlet _globalThis;\n\nif (typeof globalThis === 'object') {\n  _globalThis = globalThis;\n}\n\nfunction getGlobalThis() {\n  if (typeof _globalThis === 'object') {\n    return _globalThis;\n  }\n\n  try {\n    // eslint-disable-next-line no-extend-native\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this;\n      },\n      configurable: true\n    }); // @ts-ignore\n    // __magic__ is undefined in Safari 10 and IE10 and older.\n    // eslint-disable-next-line no-undef\n\n    _globalThis = __magic__; // @ts-ignore\n\n    delete Object.prototype.__magic__;\n  } catch (ex) {// In IE8, Object.defineProperty only works on DOM objects.\n  } finally {\n    // If the magic above fails for some reason we assume that we are in a\n    // legacy browser. Assume `window` exists in this case.\n    if (typeof _globalThis === 'undefined') {\n      _globalThis = window;\n    }\n  }\n\n  return _globalThis;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst _globalThis$1 = getGlobalThis();\n\nif (!_globalThis$1.lwcRuntimeFlags) {\n  Object.defineProperty(_globalThis$1, 'lwcRuntimeFlags', {\n    value: create$2(null)\n  });\n}\n\nconst runtimeFlags = _globalThis$1.lwcRuntimeFlags; // This function is not supported for use within components and is meant for\n// configuring runtime feature flags during app initialization.\n\nfunction setFeatureFlag(name, value) {\n  const isBoolean = isTrue$1$1(value) || isFalse$1$1(value);\n\n  if (!isBoolean) {\n    const message = `Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". Runtime feature flags can only be set to a boolean value.`;\n\n    if (process.env.NODE_ENV !== 'production') {\n      throw new TypeError(message);\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(message);\n      return;\n    }\n  }\n\n  if (isUndefined$3(featureFlagLookup[name])) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to set the value \"${value}\" for the runtime feature flag \"${name}\" because it is undefined. Possible reasons are that 1) it was misspelled or 2) it was removed from the @lwc/features package.`);\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Allow the same flag to be set more than once outside of production to enable testing\n    runtimeFlags[name] = value;\n  } else {\n    // Disallow the same flag to be set more than once in production\n    const runtimeValue = runtimeFlags[name];\n\n    if (!isUndefined$3(runtimeValue)) {\n      // eslint-disable-next-line no-console\n      console.error(`Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". \"${name}\" has already been set with the value \"${runtimeValue}\".`);\n      return;\n    }\n\n    Object.defineProperty(runtimeFlags, name, {\n      value\n    });\n  }\n} // This function is exposed to components to facilitate testing so we add a\n// check to make sure it is not invoked in production.\n\n\nfunction setFeatureFlagForTest(name, value) {\n  if (process.env.NODE_ENV !== 'production') {\n    return setFeatureFlag(name, value);\n  }\n}\n\nconst featureFlagLookup = {\n  ENABLE_REACTIVE_SETTER: null,\n  // Flags to toggle on/off the enforcement of shadow dom semantic in element/node outside lwc boundary when using synthetic shadow.\n  ENABLE_ELEMENT_PATCH: null,\n  ENABLE_NODE_LIST_PATCH: null,\n  ENABLE_HTML_COLLECTIONS_PATCH: null,\n  ENABLE_NODE_PATCH: null\n};\n/** version: 1.3.2 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * @api decorator to mark public fields and public methods in\n * LWC Components. This function implements the internals of this\n * decorator.\n */\n\nfunction api$1(target, propName, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length !== 3) {\n      assert.fail(`@api decorator can only be used as a decorator function.`);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(!descriptor || isFunction(descriptor.get) || isFunction(descriptor.set), `Invalid property ${toString(propName)} definition in ${target}, it cannot be a prototype definition if it is a public property. Instead use the constructor to define it.`);\n\n    if (isObject$1(descriptor) && isFunction(descriptor.set)) {\n      assert.isTrue(isObject$1(descriptor) && isFunction(descriptor.get), `Missing getter for property ${toString(propName)} decorated with @api in ${target}. You cannot have a setter without the corresponding getter.`);\n    }\n  }\n\n  const meta = getDecoratorsRegisteredMeta(target); // initializing getters and setters for each public prop on the target prototype\n\n  if (isObject$1(descriptor) && (isFunction(descriptor.get) || isFunction(descriptor.set))) {\n    // if it is configured as an accessor it must have a descriptor\n    // @ts-ignore it must always be set before calling this method\n    meta.props[propName].config = isFunction(descriptor.set) ? 3 : 1;\n    return createPublicAccessorDescriptor(target, propName, descriptor);\n  } else {\n    // @ts-ignore it must always be set before calling this method\n    meta.props[propName].config = 0;\n    return createPublicPropertyDescriptor(target, propName, descriptor);\n  }\n}\n\nfunction createPublicPropertyDescriptor(proto, key, descriptor) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n\n      if (isBeingConstructed(vm)) {\n        if (process.env.NODE_ENV !== 'production') {\n          const name = vm.elm.constructor.name;\n          logError(`\\`${name}\\` constructor can’t read the value of property \\`${toString(key)}\\` because the owner component hasn’t set the value yet. Instead, use the \\`${name}\\` constructor to set a default value for the property.`, vm);\n        }\n\n        return;\n      }\n\n      valueObserved(this, key);\n      return vm.cmpProps[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString(key)}`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString(key)}`);\n      }\n\n      vm.cmpProps[key] = newValue; // avoid notification of observability if the instance is already dirty\n\n      if (isFalse$1(vm.isDirty)) {\n        // perf optimization to skip this step if the component is dirty already.\n        valueMutated(this, key);\n      }\n    },\n\n    enumerable: isUndefined(descriptor) ? true : descriptor.enumerable\n  };\n}\n\nclass AccessorReactiveObserver extends ReactiveObserver {\n  constructor(vm, set) {\n    super(() => {\n      if (isFalse$1(this.debouncing)) {\n        this.debouncing = true;\n        addCallbackToNextTick(() => {\n          if (isTrue$1(this.debouncing)) {\n            const {\n              value\n            } = this;\n            const {\n              isDirty: dirtyStateBeforeSetterCall,\n              component,\n              idx\n            } = vm;\n            set.call(component, value); // de-bouncing after the call to the original setter to prevent\n            // infinity loop if the setter itself is mutating things that\n            // were accessed during the previous invocation.\n\n            this.debouncing = false;\n\n            if (isTrue$1(vm.isDirty) && isFalse$1(dirtyStateBeforeSetterCall) && idx > 0) {\n              // immediate rehydration due to a setter driven mutation, otherwise\n              // the component will get rendered on the second tick, which it is not\n              // desirable.\n              rerenderVM(vm);\n            }\n          }\n        });\n      }\n    });\n    this.debouncing = false;\n  }\n\n  reset(value) {\n    super.reset();\n    this.debouncing = false;\n\n    if (arguments.length > 0) {\n      this.value = value;\n    }\n  }\n\n}\n\nfunction createPublicAccessorDescriptor(Ctor, key, descriptor) {\n  const {\n    get,\n    set,\n    enumerable\n  } = descriptor;\n\n  if (!isFunction(get)) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.fail(`Invalid attempt to create public property descriptor ${toString(key)} in ${Ctor}. It is missing the getter declaration with @api get ${toString(key)}() {} syntax.`);\n    }\n\n    throw new TypeError();\n  }\n\n  return {\n    get() {\n      if (process.env.NODE_ENV !== 'production') {\n        // Assert that the this value is an actual Component with an associated VM.\n        getAssociatedVM(this);\n      }\n\n      return get.call(this);\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString(key)}`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString(key)}`);\n      }\n\n      if (set) {\n        if (runtimeFlags.ENABLE_REACTIVE_SETTER) {\n          let ro = vm.oar[key];\n\n          if (isUndefined(ro)) {\n            ro = vm.oar[key] = new AccessorReactiveObserver(vm, set);\n          } // every time we invoke this setter from outside (through this wrapper setter)\n          // we should reset the value and then debounce just in case there is a pending\n          // invocation the next tick that is not longer relevant since the value is changing\n          // from outside.\n\n\n          ro.reset(newValue);\n          ro.observe(() => {\n            set.call(this, newValue);\n          });\n        } else {\n          set.call(this, newValue);\n        }\n      } else if (process.env.NODE_ENV !== 'production') {\n        assert.fail(`Invalid attempt to set a new value for property ${toString(key)} of ${vm} that does not has a setter decorated with @api.`);\n      }\n    },\n\n    enumerable\n  };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * EXPERIMENTAL: This function allows for the registration of \"services\" in\n * LWC by exposing hooks into the component life-cycle. This API is subject\n * to change or being removed.\n */\n\nfunction decorate(Ctor, decorators) {\n  // intentionally comparing decorators with null and undefined\n  if (!isFunction(Ctor) || decorators == null) {\n    throw new TypeError();\n  }\n\n  const props = getOwnPropertyNames(decorators); // intentionally allowing decoration of classes only for now\n\n  const target = Ctor.prototype;\n\n  for (let i = 0, len = props.length; i < len; i += 1) {\n    const propName = props[i];\n    const decorator = decorators[propName];\n\n    if (!isFunction(decorator)) {\n      throw new TypeError();\n    }\n\n    const originalDescriptor = getOwnPropertyDescriptor(target, propName);\n    const descriptor = decorator(Ctor, propName, originalDescriptor);\n\n    if (!isUndefined(descriptor)) {\n      defineProperty(target, propName, descriptor);\n    }\n  }\n\n  return Ctor; // chaining\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst signedDecoratorToMetaMap = new Map();\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\n\nfunction registerDecorators(Ctor, meta) {\n  const decoratorMap = create(null);\n  const props = getPublicPropertiesHash(Ctor, meta.publicProps);\n  const methods = getPublicMethodsHash(Ctor, meta.publicMethods);\n  const wire$1 = getWireHash(Ctor, meta.wire);\n  const track$1 = getTrackHash(Ctor, meta.track);\n  const fields = meta.fields;\n  signedDecoratorToMetaMap.set(Ctor, {\n    props,\n    methods,\n    wire: wire$1,\n    track: track$1,\n    fields\n  });\n\n  for (const propName in props) {\n    decoratorMap[propName] = api$1;\n  }\n\n  if (wire$1) {\n    for (const propName in wire$1) {\n      const wireDef = wire$1[propName];\n\n      if (wireDef.method) {\n        // for decorated methods we need to do nothing\n        continue;\n      }\n\n      decoratorMap[propName] = wire(wireDef.adapter, wireDef.params);\n    }\n  }\n\n  if (track$1) {\n    for (const propName in track$1) {\n      decoratorMap[propName] = track;\n    }\n  }\n\n  decorate(Ctor, decoratorMap);\n  return Ctor;\n}\nfunction getDecoratorsRegisteredMeta(Ctor) {\n  return signedDecoratorToMetaMap.get(Ctor);\n}\n\nfunction getTrackHash(target, track) {\n  if (isUndefined(track) || getOwnPropertyNames(track).length === 0) {\n    return EmptyObject;\n  } // TODO [#1302]: check that anything in `track` is correctly defined in the prototype\n\n\n  return assign(create(null), track);\n}\n\nfunction getWireHash(target, wire) {\n  if (isUndefined(wire) || getOwnPropertyNames(wire).length === 0) {\n    return;\n  } // TODO [#1302]: check that anything in `wire` is correctly defined in the prototype\n\n\n  return assign(create(null), wire);\n}\n\nfunction getPublicPropertiesHash(target, props) {\n  if (isUndefined(props) || getOwnPropertyNames(props).length === 0) {\n    return EmptyObject;\n  }\n\n  return getOwnPropertyNames(props).reduce((propsHash, propName) => {\n    const attr = getAttrNameFromPropName(propName);\n    propsHash[propName] = assign({\n      config: 0,\n      type: 'any',\n      attr\n    }, props[propName]);\n    return propsHash;\n  }, create(null));\n}\n\nfunction getPublicMethodsHash(target, publicMethods) {\n  if (isUndefined(publicMethods) || publicMethods.length === 0) {\n    return EmptyObject;\n  }\n\n  return publicMethods.reduce((methodsHash, methodName) => {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isTrue(isFunction(target.prototype[methodName]), `Component \"${target.name}\" should have a method \\`${methodName}\\` instead of ${target.prototype[methodName]}.`);\n    }\n\n    methodsHash[methodName] = target.prototype[methodName];\n    return methodsHash;\n  }, create(null));\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst CtorToDefMap = new WeakMap();\n\nfunction getCtorProto(Ctor, subclassComponentName) {\n  let proto = getPrototypeOf(Ctor);\n\n  if (isNull(proto)) {\n    throw new ReferenceError(`Invalid prototype chain for ${subclassComponentName}, you must extend LightningElement.`);\n  } // covering the cases where the ref is circular in AMD\n\n\n  if (isCircularModuleDependency(proto)) {\n    const p = resolveCircularModuleDependency(proto);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isNull(p)) {\n        throw new ReferenceError(`Circular module dependency for ${subclassComponentName}, must resolve to a constructor that extends LightningElement.`);\n      }\n    } // escape hatch for Locker and other abstractions to provide their own base class instead\n    // of our Base class without having to leak it to user-land. If the circular function returns\n    // itself, that's the signal that we have hit the end of the proto chain, which must always\n    // be base.\n\n\n    proto = p === proto ? BaseLightningElement : p;\n  }\n\n  return proto;\n}\n\nfunction createComponentDef(Ctor, meta, subclassComponentName) {\n  if (process.env.NODE_ENV !== 'production') {\n    // local to dev block\n    const ctorName = Ctor.name; // Removing the following assert until https://bugs.webkit.org/show_bug.cgi?id=190140 is fixed.\n    // assert.isTrue(ctorName && isString(ctorName), `${toString(Ctor)} should have a \"name\" property with string value, but found ${ctorName}.`);\n\n    assert.isTrue(Ctor.constructor, `Missing ${ctorName}.constructor, ${ctorName} should have a \"constructor\" property.`);\n  }\n\n  const {\n    name\n  } = meta;\n  let {\n    template\n  } = meta;\n  const decoratorsMeta = getDecoratorsRegisteredMeta(Ctor);\n  let props = {};\n  let methods = {};\n  let wire;\n  let track = {};\n  let fields;\n\n  if (!isUndefined(decoratorsMeta)) {\n    props = decoratorsMeta.props;\n    methods = decoratorsMeta.methods;\n    wire = decoratorsMeta.wire;\n    track = decoratorsMeta.track;\n    fields = decoratorsMeta.fields;\n  }\n\n  const proto = Ctor.prototype;\n  let {\n    connectedCallback,\n    disconnectedCallback,\n    renderedCallback,\n    errorCallback,\n    render\n  } = proto;\n  const superProto = getCtorProto(Ctor, subclassComponentName);\n  const superDef = superProto !== BaseLightningElement ? getComponentDef(superProto, subclassComponentName) : null;\n  const SuperBridge = isNull(superDef) ? BaseBridgeElement : superDef.bridge;\n  const bridge = HTMLBridgeElementFactory(SuperBridge, getOwnPropertyNames(props), getOwnPropertyNames(methods));\n\n  if (!isNull(superDef)) {\n    props = assign(create(null), superDef.props, props);\n    methods = assign(create(null), superDef.methods, methods);\n    wire = superDef.wire || wire ? assign(create(null), superDef.wire, wire) : undefined;\n    track = assign(create(null), superDef.track, track);\n    connectedCallback = connectedCallback || superDef.connectedCallback;\n    disconnectedCallback = disconnectedCallback || superDef.disconnectedCallback;\n    renderedCallback = renderedCallback || superDef.renderedCallback;\n    errorCallback = errorCallback || superDef.errorCallback;\n    render = render || superDef.render;\n    template = template || superDef.template;\n  }\n\n  props = assign(create(null), HTML_PROPS, props);\n\n  if (!isUndefined(fields)) {\n    defineProperties(proto, createObservedFieldsDescriptorMap(fields));\n  }\n\n  if (isUndefined(template)) {\n    // default template\n    template = defaultEmptyTemplate;\n  }\n\n  const def = {\n    ctor: Ctor,\n    name,\n    wire,\n    track,\n    props,\n    methods,\n    bridge,\n    template,\n    connectedCallback,\n    disconnectedCallback,\n    renderedCallback,\n    errorCallback,\n    render\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    freeze(Ctor.prototype);\n  }\n\n  return def;\n}\n/**\n * EXPERIMENTAL: This function allows for the identification of LWC\n * constructors. This API is subject to change or being removed.\n */\n\n\nfunction isComponentConstructor(ctor) {\n  if (!isFunction(ctor)) {\n    return false;\n  } // Fast path: LightningElement is part of the prototype chain of the constructor.\n\n\n  if (ctor.prototype instanceof BaseLightningElement) {\n    return true;\n  } // Slow path: LightningElement is not part of the prototype chain of the constructor, we need\n  // climb up the constructor prototype chain to check in case there are circular dependencies\n  // to resolve.\n\n\n  let current = ctor;\n\n  do {\n    if (isCircularModuleDependency(current)) {\n      const circularResolved = resolveCircularModuleDependency(current); // If the circular function returns itself, that's the signal that we have hit the end of the proto chain,\n      // which must always be a valid base constructor.\n\n      if (circularResolved === current) {\n        return true;\n      }\n\n      current = circularResolved;\n    }\n\n    if (current === BaseLightningElement) {\n      return true;\n    }\n  } while (!isNull(current) && (current = getPrototypeOf(current))); // Finally return false if the LightningElement is not part of the prototype chain.\n\n\n  return false;\n}\n/**\n * EXPERIMENTAL: This function allows for the collection of internal\n * component metadata. This API is subject to change or being removed.\n */\n\nfunction getComponentDef(Ctor, subclassComponentName) {\n  let def = CtorToDefMap.get(Ctor);\n\n  if (isUndefined(def)) {\n    if (!isComponentConstructor(Ctor)) {\n      throw new TypeError(`${Ctor} is not a valid component, or does not extends LightningElement from \"lwc\". You probably forgot to add the extend clause on the class declaration.`);\n    }\n\n    let meta = getComponentRegisteredMeta(Ctor);\n\n    if (isUndefined(meta)) {\n      // TODO [#1295]: remove this workaround after refactoring tests\n      meta = {\n        template: undefined,\n        name: Ctor.name\n      };\n    }\n\n    def = createComponentDef(Ctor, meta, subclassComponentName || Ctor.name);\n    CtorToDefMap.set(Ctor, def);\n  }\n\n  return def;\n}\n/**\n * EXPERIMENTAL: This function provides access to the component constructor,\n * given an HTMLElement. This API is subject to change or being removed.\n */\n\nfunction getComponentConstructor(elm) {\n  let ctor = null;\n\n  if (elm instanceof HTMLElement) {\n    const vm = getAssociatedVMIfPresent(elm);\n\n    if (!isUndefined(vm)) {\n      ctor = vm.def.ctor;\n    }\n  }\n\n  return ctor;\n} // Only set prototype for public methods and properties\n// No DOM Patching occurs here\n\nfunction setElementProto(elm, def) {\n  setPrototypeOf(elm, def.bridge.prototype);\n} // Typescript is inferring the wrong function type for this particular\n// overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n// @ts-ignore type-mismatch\n\nconst HTML_PROPS = ArrayReduce.call(getOwnPropertyNames(HTMLElementOriginalDescriptors), (props, propName) => {\n  const attrName = getAttrNameFromPropName(propName);\n  props[propName] = {\n    config: 3,\n    type: 'any',\n    attr: attrName\n  };\n  return props;\n}, create(null));\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nvar VMState;\n\n(function (VMState) {\n  VMState[VMState[\"created\"] = 0] = \"created\";\n  VMState[VMState[\"connected\"] = 1] = \"connected\";\n  VMState[VMState[\"disconnected\"] = 2] = \"disconnected\";\n})(VMState || (VMState = {}));\n\nlet idx = 0;\n/** The internal slot used to associate different objects the engine manipulates with the VM */\n\nconst ViewModelReflection = createHiddenField('ViewModel', 'engine');\n\nfunction callHook(cmp, fn, args = []) {\n  return fn.apply(cmp, args);\n}\n\nfunction setHook(cmp, prop, newValue) {\n  cmp[prop] = newValue;\n}\n\nfunction getHook(cmp, prop) {\n  return cmp[prop];\n}\n\nfunction rerenderVM(vm) {\n  rehydrate(vm);\n}\nfunction appendRootVM(vm) {\n  runConnectedCallback(vm);\n  rehydrate(vm);\n}\nfunction appendVM(vm) {\n  rehydrate(vm);\n} // just in case the component comes back, with this we guarantee re-rendering it\n// while preventing any attempt to rehydration until after reinsertion.\n\nfunction resetComponentStateWhenRemoved(vm) {\n  const {\n    state\n  } = vm;\n\n  if (state !== VMState.disconnected) {\n    const {\n      oar,\n      tro\n    } = vm; // Making sure that any observing record will not trigger the rehydrated on this vm\n\n    tro.reset(); // Making sure that any observing accessor record will not trigger the setter to be reinvoked\n\n    for (const key in oar) {\n      oar[key].reset();\n    }\n\n    runDisconnectedCallback(vm); // Spec: https://dom.spec.whatwg.org/#concept-node-remove (step 14-15)\n\n    runShadowChildNodesDisconnectedCallback(vm);\n    runLightChildNodesDisconnectedCallback(vm);\n  }\n} // this method is triggered by the diffing algo only when a vnode from the\n// old vnode.children is removed from the DOM.\n\n\nfunction removeVM(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(vm.state === VMState.connected || vm.state === VMState.disconnected, `${vm} must have been connected.`);\n  }\n\n  resetComponentStateWhenRemoved(vm);\n} // this method is triggered by the removal of a root element from the DOM.\n\nfunction removeRootVM(vm) {\n  resetComponentStateWhenRemoved(vm);\n}\nfunction createVM(elm, Ctor, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(elm instanceof HTMLElement, `VM creation requires a DOM element instead of ${elm}.`);\n  }\n\n  const def = getComponentDef(Ctor);\n  const {\n    isRoot,\n    mode,\n    owner\n  } = options;\n  idx += 1;\n  const uninitializedVm = {\n    // component creation index is defined once, and never reset, it can\n    // be preserved from one insertion to another without any issue\n    idx,\n    state: VMState.created,\n    isScheduled: false,\n    isDirty: true,\n    isRoot: isTrue$1(isRoot),\n    mode,\n    def,\n    owner,\n    elm,\n    data: EmptyObject,\n    context: create(null),\n    cmpProps: create(null),\n    cmpTrack: create(null),\n    cmpSlots: useSyntheticShadow ? create(null) : undefined,\n    callHook,\n    setHook,\n    getHook,\n    children: EmptyArray,\n    aChildren: EmptyArray,\n    velements: EmptyArray,\n    // Perf optimization to preserve the shape of this obj\n    cmpTemplate: undefined,\n    component: undefined,\n    cmpRoot: undefined,\n    tro: undefined,\n    oar: undefined\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    uninitializedVm.toString = () => {\n      return `[object:vm ${def.name} (${uninitializedVm.idx})]`;\n    };\n  } // create component instance associated to the vm and the element\n\n\n  createComponent(uninitializedVm, Ctor); // link component to the wire service\n\n  const initializedVm = uninitializedVm;\n  linkComponent(initializedVm);\n}\n\nfunction assertIsVM(obj) {\n  if (isNull(obj) || !isObject$1(obj) || !('cmpRoot' in obj)) {\n    throw new TypeError(`${obj} is not a VM.`);\n  }\n}\n\nfunction associateVM(obj, vm) {\n  setHiddenField(obj, ViewModelReflection, vm);\n}\nfunction getAssociatedVM(obj) {\n  const vm = getHiddenField(obj, ViewModelReflection);\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertIsVM(vm);\n  }\n\n  return vm;\n}\nfunction getAssociatedVMIfPresent(obj) {\n  const maybeVm = getHiddenField(obj, ViewModelReflection);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(maybeVm)) {\n      assertIsVM(maybeVm);\n    }\n  }\n\n  return maybeVm;\n}\n\nfunction rehydrate(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(vm.elm instanceof HTMLElement, `rehydration can only happen after ${vm} was patched the first time.`);\n  }\n\n  if (isTrue$1(vm.isDirty)) {\n    const children = renderComponent(vm);\n    patchShadowRoot(vm, children);\n  }\n}\n\nfunction patchShadowRoot(vm, newCh) {\n  const {\n    cmpRoot,\n    children: oldCh\n  } = vm;\n  vm.children = newCh; // caching the new children collection\n\n  if (newCh.length > 0 || oldCh.length > 0) {\n    // patch function mutates vnodes by adding the element reference,\n    // however, if patching fails it contains partial changes.\n    if (oldCh !== newCh) {\n      const fn = hasDynamicChildren(newCh) ? updateDynamicChildren : updateStaticChildren;\n      runWithBoundaryProtection(vm, vm, () => {\n        // pre\n        if (process.env.NODE_ENV !== 'production') {\n          startMeasure('patch', vm);\n        }\n      }, () => {\n        // job\n        fn(cmpRoot, oldCh, newCh);\n      }, () => {\n        // post\n        if (process.env.NODE_ENV !== 'production') {\n          endMeasure('patch', vm);\n        }\n      });\n    }\n  }\n\n  if (vm.state === VMState.connected) {\n    // If the element is connected, that means connectedCallback was already issued, and\n    // any successive rendering should finish with the call to renderedCallback, otherwise\n    // the connectedCallback will take care of calling it in the right order at the end of\n    // the current rehydration process.\n    runRenderedCallback(vm);\n  }\n}\n\nfunction runRenderedCallback(vm) {\n  const {\n    rendered\n  } = Services;\n\n  if (rendered) {\n    invokeServiceHook(vm, rendered);\n  }\n\n  invokeComponentRenderedCallback(vm);\n}\n\nlet rehydrateQueue = [];\n\nfunction flushRehydrationQueue() {\n  startGlobalMeasure(GlobalMeasurementPhase.REHYDRATE);\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(rehydrateQueue.length, `If rehydrateQueue was scheduled, it is because there must be at least one VM on this pending queue instead of ${rehydrateQueue}.`);\n  }\n\n  const vms = rehydrateQueue.sort((a, b) => a.idx - b.idx);\n  rehydrateQueue = []; // reset to a new queue\n\n  for (let i = 0, len = vms.length; i < len; i += 1) {\n    const vm = vms[i];\n\n    try {\n      rehydrate(vm);\n    } catch (error) {\n      if (i + 1 < len) {\n        // pieces of the queue are still pending to be rehydrated, those should have priority\n        if (rehydrateQueue.length === 0) {\n          addCallbackToNextTick(flushRehydrationQueue);\n        }\n\n        ArrayUnshift$1.apply(rehydrateQueue, ArraySlice$1.call(vms, i + 1));\n      } // we need to end the measure before throwing.\n\n\n      endGlobalMeasure(GlobalMeasurementPhase.REHYDRATE); // re-throwing the original error will break the current tick, but since the next tick is\n      // already scheduled, it should continue patching the rest.\n\n      throw error; // eslint-disable-line no-unsafe-finally\n    }\n  }\n\n  endGlobalMeasure(GlobalMeasurementPhase.REHYDRATE);\n}\n\nfunction runConnectedCallback(vm) {\n  const {\n    state\n  } = vm;\n\n  if (state === VMState.connected) {\n    return; // nothing to do since it was already connected\n  }\n\n  vm.state = VMState.connected; // reporting connection\n\n  const {\n    connected\n  } = Services;\n\n  if (connected) {\n    invokeServiceHook(vm, connected);\n  }\n\n  const {\n    connectedCallback\n  } = vm.def;\n\n  if (!isUndefined(connectedCallback)) {\n    if (process.env.NODE_ENV !== 'production') {\n      startMeasure('connectedCallback', vm);\n    }\n\n    invokeComponentCallback(vm, connectedCallback);\n\n    if (process.env.NODE_ENV !== 'production') {\n      endMeasure('connectedCallback', vm);\n    }\n  }\n}\n\nfunction runDisconnectedCallback(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(vm.state !== VMState.disconnected, `${vm} must be inserted.`);\n  }\n\n  if (isFalse$1(vm.isDirty)) {\n    // this guarantees that if the component is reused/reinserted,\n    // it will be re-rendered because we are disconnecting the reactivity\n    // linking, so mutations are not automatically reflected on the state\n    // of disconnected components.\n    vm.isDirty = true;\n  }\n\n  vm.state = VMState.disconnected; // reporting disconnection\n\n  const {\n    disconnected\n  } = Services;\n\n  if (disconnected) {\n    invokeServiceHook(vm, disconnected);\n  }\n\n  const {\n    disconnectedCallback\n  } = vm.def;\n\n  if (!isUndefined(disconnectedCallback)) {\n    if (process.env.NODE_ENV !== 'production') {\n      startMeasure('disconnectedCallback', vm);\n    }\n\n    invokeComponentCallback(vm, disconnectedCallback);\n\n    if (process.env.NODE_ENV !== 'production') {\n      endMeasure('disconnectedCallback', vm);\n    }\n  }\n}\n\nfunction runShadowChildNodesDisconnectedCallback(vm) {\n  const {\n    velements: vCustomElementCollection\n  } = vm; // reporting disconnection for every child in inverse order since they are inserted in reserved order\n\n  for (let i = vCustomElementCollection.length - 1; i >= 0; i -= 1) {\n    const elm = vCustomElementCollection[i].elm; // There are two cases where the element could be undefined:\n    // * when there is an error during the construction phase, and an\n    //   error boundary picks it, there is a possibility that the VCustomElement\n    //   is not properly initialized, and therefore is should be ignored.\n    // * when slotted custom element is not used by the element where it is slotted\n    //   into it, as a result, the custom element was never initialized.\n\n    if (!isUndefined(elm)) {\n      const childVM = getAssociatedVM(elm);\n      resetComponentStateWhenRemoved(childVM);\n    }\n  }\n}\n\nfunction runLightChildNodesDisconnectedCallback(vm) {\n  const {\n    aChildren: adoptedChildren\n  } = vm;\n  recursivelyDisconnectChildren(adoptedChildren);\n}\n/**\n * The recursion doesn't need to be a complete traversal of the vnode graph,\n * instead it can be partial, when a custom element vnode is found, we don't\n * need to continue into its children because by attempting to disconnect the\n * custom element itself will trigger the removal of anything slotted or anything\n * defined on its shadow.\n */\n\n\nfunction recursivelyDisconnectChildren(vnodes) {\n  for (let i = 0, len = vnodes.length; i < len; i += 1) {\n    const vnode = vnodes[i];\n\n    if (!isNull(vnode) && isArray$1(vnode.children) && !isUndefined(vnode.elm)) {\n      // vnode is a VElement with children\n      if (isUndefined(vnode.ctor)) {\n        // it is a VElement, just keep looking (recursively)\n        recursivelyDisconnectChildren(vnode.children);\n      } else {\n        // it is a VCustomElement, disconnect it and ignore its children\n        resetComponentStateWhenRemoved(getAssociatedVM(vnode.elm));\n      }\n    }\n  }\n} // This is a super optimized mechanism to remove the content of the shadowRoot\n// without having to go into snabbdom. Especially useful when the reset is a consequence\n// of an error, in which case the children VNodes might not be representing the current\n// state of the DOM\n\n\nfunction resetShadowRoot(vm) {\n  vm.children = EmptyArray;\n  ShadowRootInnerHTMLSetter.call(vm.cmpRoot, ''); // disconnecting any known custom element inside the shadow of the this vm\n\n  runShadowChildNodesDisconnectedCallback(vm);\n}\nfunction scheduleRehydration(vm) {\n  if (!vm.isScheduled) {\n    vm.isScheduled = true;\n\n    if (rehydrateQueue.length === 0) {\n      addCallbackToNextTick(flushRehydrationQueue);\n    }\n\n    ArrayPush.call(rehydrateQueue, vm);\n  }\n}\n\nfunction getErrorBoundaryVM(vm) {\n  let currentVm = vm;\n\n  while (!isNull(currentVm)) {\n    if (!isUndefined(currentVm.def.errorCallback)) {\n      return currentVm;\n    }\n\n    currentVm = currentVm.owner;\n  }\n}\n/**\n * EXPERIMENTAL: This function detects whether or not a Node is\n * controlled by a LWC template. This API is subject to\n * change or being removed.\n */\n\n\nfunction isNodeFromTemplate(node) {\n  if (isFalse$1(node instanceof Node)) {\n    return false;\n  } // TODO [#1250]: skipping the shadowRoot instances itself makes no sense, we need to revisit this with locker\n\n\n  if (node instanceof ShadowRoot) {\n    return false;\n  }\n\n  if (useSyntheticShadow) {\n    // TODO [#1252]: old behavior that is still used by some pieces of the platform, specifically, nodes inserted\n    // manually on places where `lwc:dom=\"manual\"` directive is not used, will be considered global elements.\n    if (isUndefined(node.$shadowResolver$)) {\n      return false;\n    }\n  }\n\n  const root = node.getRootNode();\n  return root instanceof ShadowRoot;\n} // slow path routine\n// NOTE: we should probably more this routine to the synthetic shadow folder\n// and get the allocation to be cached by in the elm instead of in the VM\n\nfunction allocateInSlot(vm, children) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isObject$1(vm.cmpSlots), `When doing manual allocation, there must be a cmpSlots object available.`);\n  }\n\n  const {\n    cmpSlots: oldSlots\n  } = vm;\n  const cmpSlots = vm.cmpSlots = create(null);\n\n  for (let i = 0, len = children.length; i < len; i += 1) {\n    const vnode = children[i];\n\n    if (isNull(vnode)) {\n      continue;\n    }\n\n    const {\n      data\n    } = vnode;\n    const slotName = data.attrs && data.attrs.slot || '';\n    const vnodes = cmpSlots[slotName] = cmpSlots[slotName] || []; // re-keying the vnodes is necessary to avoid conflicts with default content for the slot\n    // which might have similar keys. Each vnode will always have a key that\n    // starts with a numeric character from compiler. In this case, we add a unique\n    // notation for slotted vnodes keys, e.g.: `@foo:1:1`\n\n    vnode.key = `@${slotName}:${vnode.key}`;\n    ArrayPush.call(vnodes, vnode);\n  }\n\n  if (isFalse$1(vm.isDirty)) {\n    // We need to determine if the old allocation is really different from the new one\n    // and mark the vm as dirty\n    const oldKeys = keys(oldSlots);\n\n    if (oldKeys.length !== keys(cmpSlots).length) {\n      markComponentAsDirty(vm);\n      return;\n    }\n\n    for (let i = 0, len = oldKeys.length; i < len; i += 1) {\n      const key = oldKeys[i];\n\n      if (isUndefined(cmpSlots[key]) || oldSlots[key].length !== cmpSlots[key].length) {\n        markComponentAsDirty(vm);\n        return;\n      }\n\n      const oldVNodes = oldSlots[key];\n      const vnodes = cmpSlots[key];\n\n      for (let j = 0, a = cmpSlots[key].length; j < a; j += 1) {\n        if (oldVNodes[j] !== vnodes[j]) {\n          markComponentAsDirty(vm);\n          return;\n        }\n      }\n    }\n  }\n}\nfunction runWithBoundaryProtection(vm, owner, pre, job, post) {\n  let error;\n  pre();\n\n  try {\n    job();\n  } catch (e) {\n    error = Object(e);\n  } finally {\n    post();\n\n    if (!isUndefined(error)) {\n      error.wcStack = error.wcStack || getErrorComponentStack(vm);\n      const errorBoundaryVm = isNull(owner) ? undefined : getErrorBoundaryVM(owner);\n\n      if (isUndefined(errorBoundaryVm)) {\n        throw error; // eslint-disable-line no-unsafe-finally\n      }\n\n      resetShadowRoot(vm); // remove offenders\n\n      if (process.env.NODE_ENV !== 'production') {\n        startMeasure('errorCallback', errorBoundaryVm);\n      } // error boundaries must have an ErrorCallback\n\n\n      const errorCallback = errorBoundaryVm.def.errorCallback;\n      invokeComponentCallback(errorBoundaryVm, errorCallback, [error, error.wcStack]);\n\n      if (process.env.NODE_ENV !== 'production') {\n        endMeasure('errorCallback', errorBoundaryVm);\n      }\n    }\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst {\n  appendChild,\n  insertBefore,\n  removeChild,\n  replaceChild\n} = Node.prototype;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ConnectingSlot = createHiddenField('connecting', 'engine');\nconst DisconnectingSlot = createHiddenField('disconnecting', 'engine');\n\nfunction callNodeSlot(node, slot) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(node, `callNodeSlot() should not be called for a non-object`);\n  }\n\n  const fn = getHiddenField(node, slot);\n\n  if (!isUndefined(fn)) {\n    fn();\n  }\n\n  return node; // for convenience\n} // monkey patching Node methods to be able to detect the insertions and removal of\n// root elements created via createElement.\n\n\nassign(Node.prototype, {\n  appendChild(newChild) {\n    const appendedNode = appendChild.call(this, newChild);\n    return callNodeSlot(appendedNode, ConnectingSlot);\n  },\n\n  insertBefore(newChild, referenceNode) {\n    const insertedNode = insertBefore.call(this, newChild, referenceNode);\n    return callNodeSlot(insertedNode, ConnectingSlot);\n  },\n\n  removeChild(oldChild) {\n    const removedNode = removeChild.call(this, oldChild);\n    return callNodeSlot(removedNode, DisconnectingSlot);\n  },\n\n  replaceChild(newChild, oldChild) {\n    const replacedNode = replaceChild.call(this, newChild, oldChild);\n    callNodeSlot(replacedNode, DisconnectingSlot);\n    callNodeSlot(newChild, ConnectingSlot);\n    return replacedNode;\n  }\n\n});\n/**\n * EXPERIMENTAL: This function is almost identical to document.createElement\n * (https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement)\n * with the slightly difference that in the options, you can pass the `is`\n * property set to a Constructor instead of just a string value. The intent\n * is to allow the creation of an element controlled by LWC without having\n * to register the element as a custom element. E.g.:\n *\n * const el = createElement('x-foo', { is: FooCtor });\n *\n * If the value of `is` attribute is not a constructor,\n * then it throws a TypeError.\n */\n\nfunction createElement(sel, options) {\n  if (!isObject$1(options) || isNull(options)) {\n    throw new TypeError(`\"createElement\" function expects an object as second parameter but received \"${toString(options)}\".`);\n  }\n\n  let Ctor = options.is;\n\n  if (!isFunction(Ctor)) {\n    throw new TypeError(`\"createElement\" function expects a \"is\" option with a valid component constructor.`);\n  }\n\n  const mode = options.mode !== 'closed' ? 'open' : 'closed'; // Create element with correct tagName\n\n  const element = document.createElement(sel);\n\n  if (!isUndefined(getAssociatedVMIfPresent(element))) {\n    // There is a possibility that a custom element is registered under tagName,\n    // in which case, the initialization is already carry on, and there is nothing else\n    // to do here.\n    return element;\n  }\n\n  if (isCircularModuleDependency(Ctor)) {\n    Ctor = resolveCircularModuleDependency(Ctor);\n  }\n\n  const def = getComponentDef(Ctor);\n  setElementProto(element, def);\n\n  if (process.env.NODE_ENV !== 'production') {\n    patchCustomElementWithRestrictions(element, EmptyObject);\n  } // In case the element is not initialized already, we need to carry on the manual creation\n\n\n  createVM(element, Ctor, {\n    mode,\n    isRoot: true,\n    owner: null\n  }); // Handle insertion and removal from the DOM manually\n\n  setHiddenField(element, ConnectingSlot, () => {\n    const vm = getAssociatedVM(element);\n    startGlobalMeasure(GlobalMeasurementPhase.HYDRATE, vm);\n\n    if (vm.state === VMState.connected) {\n      // usually means moving the element from one place to another, which is observable via life-cycle hooks\n      removeRootVM(vm);\n    }\n\n    appendRootVM(vm);\n    endGlobalMeasure(GlobalMeasurementPhase.HYDRATE, vm);\n  });\n  setHiddenField(element, DisconnectingSlot, () => {\n    const vm = getAssociatedVM(element);\n    removeRootVM(vm);\n  });\n  return element;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * EXPERIMENTAL: This function allows you to create a reactive readonly\n * membrane around any object value. This API is subject to change or\n * being removed.\n */\n\nfunction readonly(obj) {\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO [#1292]: Remove the readonly decorator\n    if (arguments.length !== 1) {\n      assert.fail('@readonly cannot be used as a decorator just yet, use it as a function with one argument to produce a readonly version of the provided value.');\n    }\n  }\n\n  return reactiveMembrane.getReadOnlyProxy(obj);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This function builds a Web Component class from a LWC constructor\n * so it can be registered as a new element via customElements.define()\n * at any given time. E.g.:\n *\n *      import { buildCustomElementConstructor } from 'lwc';\n *      import Foo from 'ns/foo';\n *      const WC = buildCustomElementConstructor(Foo);\n *      customElements.define('x-foo', WC);\n *      const elm = document.createElement('x-foo');\n *\n */\n\nfunction buildCustomElementConstructor(Ctor, options) {\n  var _a;\n\n  const {\n    props,\n    bridge: BaseElement\n  } = getComponentDef(Ctor);\n  const normalizedOptions = {\n    mode: 'open',\n    isRoot: true,\n    owner: null\n  };\n\n  if (isObject$1(options) && !isNull(options)) {\n    const {\n      mode\n    } = options;\n\n    if (mode === 'closed') {\n      normalizedOptions.mode = mode;\n    }\n  }\n\n  return _a = class extends BaseElement {\n    constructor() {\n      super();\n      createVM(this, Ctor, normalizedOptions);\n\n      if (process.env.NODE_ENV !== 'production') {\n        patchCustomElementWithRestrictions(this, EmptyObject);\n      }\n    }\n\n    connectedCallback() {\n      const vm = getAssociatedVM(this);\n      appendRootVM(vm);\n    }\n\n    disconnectedCallback() {\n      const vm = getAssociatedVM(this);\n      removeRootVM(vm);\n    }\n\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (oldValue === newValue) {\n        // ignoring similar values for better perf\n        return;\n      }\n\n      const propName = getPropNameFromAttrName(attrName);\n\n      if (isUndefined(props[propName])) {\n        // ignoring unknown attributes\n        return;\n      }\n\n      if (!isAttributeLocked(this, attrName)) {\n        // ignoring changes triggered by the engine itself during:\n        // * diffing when public props are attempting to reflect to the DOM\n        // * component via `this.setAttribute()`, should never update the prop.\n        // Both cases, the the setAttribute call is always wrap by the unlocking\n        // of the attribute to be changed\n        return;\n      } // reflect attribute change to the corresponding props when changed\n      // from outside.\n\n\n      this[propName] = newValue;\n    }\n\n  }, // collecting all attribute names from all public props to apply\n  // the reflection from attributes to props via attributeChangedCallback.\n  _a.observedAttributes = ArrayMap.call(getOwnPropertyNames(props), propName => props[propName].attr), _a;\n}\n\nexport { BaseLightningElement as LightningElement, api$1 as api, buildCustomElementConstructor, createElement, decorate, getComponentConstructor, getComponentDef, isComponentConstructor, isNodeFromTemplate, readonly, register, registerComponent, registerDecorators, registerTemplate, sanitizeAttribute, setFeatureFlag, setFeatureFlagForTest, track, unwrap$1 as unwrap, wire };\n/** version: 1.3.2 */\n"],"names":["detect","Proxy","proxy","res","concat","length","isConcatSpreadable","Symbol","isArray","Array","slice","ArraySlice","unshift","ArrayUnshift","shift","ArrayShift","prototype","isObject","O","isSpreadable","spreadable","undefined","Boolean","ArrayConcatPolyfill","_args","Object","A","N","items","call","arguments","E","k","subElement","apply","detect$1","propName","getOwnPropertyDescriptor","Element","hasAttribute","getAttribute","setAttribute","setAttributeNS","removeAttribute","removeAttributeNS","ARIA_REGEX","nodeToAriaPropertyValuesMap","WeakMap","hasOwnProperty","replace","StringReplace","toLowerCase","StringToLowerCase","String","getAriaPropertyMap","elm","map","get","set","getNormalizedAriaPropertyValue","value","createAriaPropertyPropertyDescriptor","attrName","newValue","normalizedValue","configurable","enumerable","patch","replaced","descriptor","defineProperty","ElementPrototypeAriaPropertyNames","i","len","invariant","msg","Error","isTrue","isFalse","fail","assert","freeze","__proto__","assign","create","defineProperties","getOwnPropertyNames","getPrototypeOf","hasOwnProperty$1","keys","seal","setPrototypeOf","isArray$1","filter","ArrayFilter","find","ArrayFind","forEach","indexOf","ArrayIndexOf","join","ArrayJoin","ArrayMap","push","ArrayPush","reduce","ArrayReduce","reverse","ArrayReverse","ArraySlice$1","splice","ArraySplice","ArrayUnshift$1","charCodeAt","StringCharCodeAt","StringReplace$1","StringSlice","StringToLowerCase$1","isUndefined","obj","isNull","isTrue$1","isFalse$1","isFunction","isObject$1","isString","isNumber","OtS","toString","emptyString","getPropertyDescriptor","o","p","d","hasNativeSymbolsSupport","createHiddenField","key","namespace","hiddenFieldsMap","setHiddenField","field","valuesByField","getHiddenField","defaultDefHTMLPropertyNames","HTMLPropertyNamesWithLowercasedReflectiveAttributes","offsetPropertyErrorMessage","name","globalHTMLProperties","accessKey","attribute","accessKeyLabel","readOnly","className","error","contentEditable","dataset","dir","draggable","dropzone","hidden","id","inputMode","lang","slot","spellcheck","style","tabIndex","title","translate","isContentEditable","offsetHeight","offsetLeft","offsetParent","offsetTop","offsetWidth","role","AttrNameToPropNameMap","PropNameToAttrNameMap","CAMEL_REGEX","getPropNameFromAttrName","g","toUpperCase","CAPS_REGEX","getAttrNameFromPropName","match","controlledElement","controlledAttributeName","isAttributeLocked","lockAttribute","_elm","_key","unlockAttribute","nextTickCallbackQueue","SPACE_CHAR","EmptyObject","EmptyArray","flushCallbackQueue","callbacks","addCallbackToNextTick","callback","Promise","resolve","then","isCircularModuleDependency","resolveCircularModuleDependency","fn","TypeError","useSyntheticShadow","getComponentTag","vm","tagName","getComponentStack","stack","prefix","owner","getErrorComponentStack","wcStack","currentVm","logError","message","e","console","handleEvent","event","vnode","type","data","on","handler","createListener","updateAllEventListeners","oldVnode","listener","createAllEventListeners","addEventListener","modEvents","update","xlinkNS","xmlNS","ColonCharCode","updateAttrs","attrs","oldAttrs","cur","old","emptyVNode","modAttrs","isLiveBindingProp","sel","props","oldProps","isFirstPatch","emptyVNode$1","modProps","classNameToClassMap","getMapFromClassName","start","updateClassAttribute","newClass","oldClass","classList","newClassMap","oldClassMap","remove","add","emptyVNode$2","modComputedClassName","updateStyleAttribute","newStyle","cssText","emptyVNode$3","modComputedStyle","createClassAttribute","classMap","modStaticClassName","createStyleAttribute","styleMap","modStaticStyle","createContext","context","getAssociatedVMIfPresent","contextModule","isUndef","s","sameVnode","vnode1","vnode2","isVNode","createKeyToOldIdx","children","beginIdx","endIdx","j","ch","addVnodes","parentElm","before","vnodes","startIdx","hook","insert","removeVnodes","updateDynamicChildren","oldCh","newCh","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","oldKeyToIdx","idxInOld","elmToMove","patchVnode","move","nextSibling","n","updateStaticChildren","referenceElm","oldVNode","generateDataDescriptor","options","writable","generateAccessorDescriptor","isDomMutationAllowed","unlockDomMutation","lockDomMutation","portalRestrictionErrorMessage","getNodeRestrictionsDescriptors","node","originalTextContentDescriptor","originalNodeValueDescriptor","appendChild","insertBefore","removeChild","replaceChild","aChild","isPortal","newNode","referenceNode","newChild","oldChild","nodeValue","textContent","getElementRestrictionsDescriptors","descriptors","originalInnerHTMLDescriptor","originalOuterHTMLDescriptor","innerHTML","outerHTML","_value","getShadowRootRestrictionsDescriptors","sr","originalQuerySelector","querySelector","originalQuerySelectorAll","querySelectorAll","originalAddEventListener","vmBeingRendered","getVMBeingRendered","isInvokingRender","isUpdatingTemplate","getAssociatedVM","isBeingConstructed","BlockedShadowRootMethods","cloneNode","getElementById","getSelection","elementsFromPoint","dispatchEvent","methodName","getCustomElementRestrictionsDescriptors","getComponentRestrictionsDescriptors","getLightningElementPrototypeRestrictionsDescriptors","proto","originalDispatchEvent","originalIsConnectedGetter","test","isConnected","componentTag","isVMBeingRendered","isInvokingRenderedCallback","markNodeFromVNode","$fromTemplate$","patchElementWithRestrictions","patchShadowRootWithRestrictions","patchCustomElementWithRestrictions","restrictionsDescriptors","elmProto","patchComponentWithRestrictions","cmp","patchLightningElementPrototypeWithRestrictions","noop","observeElementChildNodes","$domManual$","setElementShadowToken","token","$shadowToken$","updateNodeHook","text","insertNodeHook","parentNode","removeNodeHook","createElmHook","LWCDOMMode","fallbackElmHook","shadowAttribute","lwc","dom","manual","updateElmHook","insertCustomElmHook","appendVM","updateChildrenHook","hasDynamicChildren","runWithBoundaryProtection","allocateChildrenHook","aChildren","allocateInSlot","createViewModelHook","mode","ctor","def","getComponentDef","setElementProto","createVM","createCustomElmHook","createChildrenHook","rerenderCustomElmHook","rerenderVM","updateCustomElmHook","removeElmHook","removeCustomElmHook","removeVM","FromIteration","markAsDynamicChildren","has","Services","invokeServiceHook","cbs","component","CHAR_S","CHAR_V","CHAR_G","NamespaceAttributeForSVG","SymbolIterator","iterator","TextHook","document","createTextNode","linkNodeToShadow","CommentHook","createComment","ElementHook","clonedElement","ns","createElement","createElementNS","CustomElementHook","state","VMState","created","runConnectedCallback","$shadowResolver$","cmpRoot","addNS","childNode","addVNodeToChildLWC","velements","h","childVnode","ti","shouldNormalize","slotName","slotset","sc","c","Ctor","iterable","factory","list","next","done","last","keyMap","iterationError","f","flattened","item","t","b","invokeEventListener","fb","invokeComponentCallback","ll","originalHandler","eventListener","locator","locatorService","resolved","target","host","targetContext","hostContext","compilerKey","gid","idx","fid","url","DynamicImportedComponentMap","Map","dynamicImportedComponentCounter","dc","isComponentConstructor","api","signedTemplateSet","Set","defaultEmptyTemplate","isTemplateRegistered","tpl","registerTemplate","CachedStyleFragments","createStyleElement","styleContent","getCachedStyleElement","fragment","createDocumentFragment","styleElm","firstChild","globalStyleParent","head","body","InsertedGlobalStyleContent","insertGlobalStyle","createStyleVNode","resetStyleAttributes","oldHostAttribute","hostAttribute","applyStyleAttributes","collectStylesheets","stylesheets","hostSelector","shadowSelector","isNative","aggregatorFn","sheet","evaluateCSS","buffer","GlobalMeasurementPhase","isUserTimingSupported","performance","mark","clearMarks","measure","clearMeasures","getMarkName","phase","getMeasureName","markName","end","measureName","noop$1","startMeasure","endMeasure","startGlobalMeasure","endGlobalMeasure","setVMBeingRendered","EmptySlots","validateSlots","html","cmpSlots","slots","validateFields","ids","evaluateTemplate","isUpdatingTemplateInception","vmOfTemplateBeingUpdatedInception","cmpTemplate","tro","observe","resetShadowRoot","tplCache","stylesheetTokens","styleVNode","process","vmBeingConstructed","vmInvokingRenderedCallback","noop$2","args","callHook","result","invokeComponentConstructor","vmBeingConstructedInception","invokeComponentRenderMethod","render","isRenderBeingInvokedInception","vmBeingRenderedInception","renderInvocationSuccessful","invokeComponentRenderedCallback","renderedCallback","vmInvokingRenderedCallbackInception","thisValue","create$1","ArraySplice$1","ArrayIndexOf$1","ArrayPush$1","TargetToReactiveRecordMap","isUndefined$1","getReactiveRecord","reactiveRecord","newRecord","currentReactiveObserver","valueMutated","reactiveObservers","ro","notify","valueObserved","link","ReactiveObserver","constructor","listeners","job","inceptionReactiveRecord","reset","pos","signedComponentToMetaMap","registerComponent","tmpl","template","getComponentRegisteredMeta","createComponent","uninitializedVm","initializedVm","ReferenceError","linkComponent","wire","wiring","getTemplateReactiveObserver","isDirty","markComponentAsDirty","scheduleRehydration","renderComponent","isScheduled","cmpEventListenerMap","getWrappedComponentsListener","wrappedListener","createObservedFieldsDescriptorMap","fields","acc","createObservedFieldPropertyDescriptor","cmpTrack","HTMLElementOriginalDescriptors","HTMLElement","ShadowRootInnerHTMLSetter","ShadowRoot","window","EventTarget","Node","createBridgeToElementDescriptor","cmpProps","getLinkedElement","BaseLightningElementConstructor","oar","setHook","getHook","shadowRootOptions","delegatesFocus","attachShadow","associateVM","_event","removeEventListener","getAttributeNS","getBoundingClientRect","selectors","getElementsByTagName","tagNameOrWildCard","getElementsByClassName","names","shadowRoot","baseDescriptors","BaseLightningElement","isArray$2","getPrototypeOf$1","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyDescriptor$1","getOwnPropertyNames$1","getOwnPropertySymbols","preventExtensions","hasOwnProperty$2","ArrayPush$2","ArrayConcat","ArrayMap$1","OtS$1","toString$1","isUndefined$2","isFunction$1","isObject$2","proxyToValueMap","registerProxy","unwrap","replicaOrAny","wrapValue","membrane","valueIsObservable","getProxy","unwrapDescriptor","lockShadowTarget","shadowTarget","originalTarget","targetKeys","wrapDescriptor","ReactiveProxyHandler","oldValue","deleteProperty","thisArg","argArray","construct","newTarget","ownKeys","shadowIsExtensible","targetIsExtensible","desc","shadowDescriptor","originalDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","extract","objectOrArray","original","seed","formatter","header","plainOrProxy","object","hasBody","getGlobal","globalThis","self","global","init","devtoolsFormatters","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","ReactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","getReactiveState","reactive","distortedValue","reactiveState","reactiveHandler","readOnlyHandler","reactiveMembrane","cachedGetterByKey","cachedSetterByKey","createGetter","createSetter","createMethodCaller","HTMLBridgeElementFactory","SuperClass","methods","HTMLBridgeElement","BaseBridgeElement","track","prop","createTrackedPropertyDescriptor","reactiveOrAnyValue","wireDecorator","_adapter","_config","assign$1","create$2","defineProperties$1","defineProperty$1","freeze$1","getOwnPropertyDescriptor$2","getOwnPropertyNames$2","getPrototypeOf$2","hasOwnProperty$3","keys$1","seal$1","setPrototypeOf$1","hasNativeSymbolsSupport$1","_globalThis","getGlobalThis","__magic__","ex","_globalThis$1","lwcRuntimeFlags","runtimeFlags","api$1","meta","getDecoratorsRegisteredMeta","config","createPublicAccessorDescriptor","createPublicPropertyDescriptor","AccessorReactiveObserver","debouncing","dirtyStateBeforeSetterCall","ENABLE_REACTIVE_SETTER","decorate","decorators","decorator","signedDecoratorToMetaMap","registerDecorators","decoratorMap","getPublicPropertiesHash","publicProps","getPublicMethodsHash","publicMethods","wire$1","getWireHash","track$1","getTrackHash","wireDef","method","adapter","params","propsHash","attr","methodsHash","CtorToDefMap","getCtorProto","subclassComponentName","createComponentDef","ctorName","decoratorsMeta","connectedCallback","disconnectedCallback","errorCallback","superProto","superDef","SuperBridge","bridge","HTML_PROPS","current","circularResolved","ViewModelReflection","rehydrate","appendRootVM","resetComponentStateWhenRemoved","disconnected","runDisconnectedCallback","runShadowChildNodesDisconnectedCallback","runLightChildNodesDisconnectedCallback","connected","removeRootVM","isRoot","assertIsVM","maybeVm","patchShadowRoot","runRenderedCallback","rendered","rehydrateQueue","flushRehydrationQueue","REHYDRATE","vms","sort","a","vCustomElementCollection","childVM","adoptedChildren","recursivelyDisconnectChildren","getErrorBoundaryVM","oldSlots","oldKeys","oldVNodes","pre","post","errorBoundaryVm","ConnectingSlot","DisconnectingSlot","callNodeSlot","appendedNode","insertedNode","removedNode","replacedNode","buildCustomElementConstructor","_a","BaseElement","normalizedOptions","attributeChangedCallback","observedAttributes"],"mappings":"AAAA;;AACA;;;;;;AAMA,SAASA,MAAT,GAAkB;;MAEZ,YAAYC,OAAO;WACd;;;QAGHC,KAAK,GAAG,IAAID,KAAJ,CAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,EAAkB,EAAlB;QACRE,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAOC,MAAP,CAAcF,KAAd;SACLC,GAAG,CAACE,MAAJF,KAAe;;AAGxB;;;;;;;;AAMA,MAAM;AACJG,EAAAA;AADI,IAEFC,MAFJ;AAGA,MAAM;AACJC,EAAAA;AADI,IAEFC,KAFJ;AAGA,MAAM;AACJC,EAAAA,KAAK,EAAEC,UADH;AAEJC,EAAAA,OAAO,EAAEC,YAFL;AAGJC,EAAAA,KAAK,EAAEC;AAHH,IAIFN,KAAK,CAACO,SAJV;;AAMA,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;SACZ,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,KAAK,IAA9B,GAAqC,OAAOA,CAAP,KAAa;;;;AAI3D,SAASC,YAAT,CAAsBD,CAAtB,EAAyB;MACnB,CAACD,QAAQ,CAACC,CAAD,GAAK;WACT;;;QAGHE,UAAU,GAAGF,CAAC,CAACZ,kBAAD;SACbc,UAAU,KAAKC,SAAfD,GAA2BE,OAAO,CAACF,UAAD,CAAlCA,GAAiDZ,OAAO,CAACU,CAAD;;;;AAIjE,SAASK,mBAAT,CAA6B,GAAGC,KAAhC,EAAuC;QAC/BN,CAAC,GAAGO,MAAM,CAAC,IAAD;QACVC,CAAC,GAAG;MACNC,CAAC,GAAG;QACFC,KAAK,GAAGjB,UAAU,CAACkB,IAAXlB,CAAgBmB,SAAhBnB;AACdE,EAAAA,YAAY,CAACgB,IAAbhB,CAAkBe,KAAlBf,EAAyBK,CAAzBL;;SAEOe,KAAK,CAACvB,QAAQ;UACb0B,CAAC,GAAGhB,UAAU,CAACc,IAAXd,CAAgBa,KAAhBb;;QAENI,YAAY,CAACY,CAAD,GAAK;UACfC,CAAC,GAAG;YACF3B,MAAM,GAAG0B,CAAC,CAAC1B;;WAEZ2B,GAAGA,CAAC,GAAG3B,QAAQ2B,CAAC,IAAI,CAALA,EAAQL,CAAC,IAAI,GAAG;YAC9BK,CAAC,IAAID,GAAG;gBACJE,UAAU,GAAGF,CAAC,CAACC,CAAD;AACpBN,UAAAA,CAAC,CAACC,CAAD,CAADD,GAAOO,UAAPP;;;AAPN,WAUO;AACLA,MAAAA,CAAC,CAACC,CAAD,CAADD,GAAOK,CAAPL;AACAC,MAAAA,CAAC,IAAI,CAALA;;;;SAIGD;;;AAGT,SAASQ,KAAT,GAAiB;AACfzB,EAAAA,KAAK,CAACO,SAANP,CAAgBL,MAAhBK,GAAyBc,mBAAzBd;;AAGF;;;;;;;;AAOA,IAAIT,MAAM,EAAV,EAAc;AACZkC,EAAAA,KAAK;;AAGP;;;;;;;;AAMA,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;SACnBX,MAAM,CAACY,wBAAPZ,CAAgCa,OAAO,CAACtB,SAAxCS,EAAmDW,QAAnDX,MAAiEJ;;AAG1E;;;;;;;;AAMA,MAAM;AACJkB,EAAAA,YADI;AAEJC,EAAAA,YAFI;AAGJC,EAAAA,YAHI;AAIJC,EAAAA,cAJI;AAKJC,EAAAA,eALI;AAMJC,EAAAA;AANI,IAOFN,OAAO,CAACtB,SAPZ;AASA;;;;;;AAMA;;AAEA,MAAM6B,UAAU,GAAG,OAAnB;AACA,MAAMC,2BAA2B,GAAG,IAAIC,OAAJ,EAApC;AACA,MAAM;AACJC,EAAAA;AADI,IAEFvB,MAAM,CAACT,SAFX;AAGA,MAAM;AACJiC,EAAAA,OAAO,EAAEC,aADL;AAEJC,EAAAA,WAAW,EAAEC;AAFT,IAGFC,MAAM,CAACrC,SAHX;;AAKA,SAASsC,kBAAT,CAA4BC,GAA5B,EAAiC;MAC3BC,GAAG,GAAGV,2BAA2B,CAACW,GAA5BX,CAAgCS,GAAhCT;;MAENU,GAAG,KAAKnC,WAAW;AACrBmC,IAAAA,GAAG,GAAG,EAANA;AACAV,IAAAA,2BAA2B,CAACY,GAA5BZ,CAAgCS,GAAhCT,EAAqCU,GAArCV;;;SAGKU;;;AAGT,SAASG,8BAAT,CAAwCC,KAAxC,EAA+C;SACtCA,KAAK,IAAI,IAATA,GAAgB,IAAhBA,GAAuBA,KAAK,GAAG;;;AAGxC,SAASC,oCAAT,CAA8CzB,QAA9C,EAAwD0B,QAAxD,EAAkE;SACzD;AACLL,IAAAA,GAAG,GAAG;YACED,GAAG,GAAGF,kBAAkB,CAAC,IAAD;;UAE1BN,cAAc,CAACnB,IAAfmB,CAAoBQ,GAApBR,EAAyBZ,QAAzBY,GAAoC;eAC/BQ,GAAG,CAACpB,QAAD;AAJR,OAAA;;;aAQGG,YAAY,CAACV,IAAbU,CAAkB,IAAlBA,EAAwBuB,QAAxBvB,IAAoCC,YAAY,CAACX,IAAbW,CAAkB,IAAlBA,EAAwBsB,QAAxBtB,CAApCD,GAAwE;AAT5E,KAAA;;AAYLmB,IAAAA,GAAG,CAACK,QAAD,EAAW;YACNC,eAAe,GAAGL,8BAA8B,CAACI,QAAD;YAChDP,GAAG,GAAGF,kBAAkB,CAAC,IAAD;AAC9BE,MAAAA,GAAG,CAACpB,QAAD,CAAHoB,GAAgBQ,eAAhBR,CAHY;;UAKRO,QAAQ,KAAK,MAAM;AACrBpB,QAAAA,eAAe,CAACd,IAAhBc,CAAqB,IAArBA,EAA2BmB,QAA3BnB;AADF,aAEO;AACLF,QAAAA,YAAY,CAACZ,IAAbY,CAAkB,IAAlBA,EAAwBqB,QAAxBrB,EAAkCsB,QAAlCtB;;AApBC,KAAA;;AAwBLwB,IAAAA,YAAY,EAAE,IAxBT;AAyBLC,IAAAA,UAAU,EAAE;AAzBP;;;AA6BT,SAASC,KAAT,CAAe/B,QAAf,EAAyB;;;;QAIjBgC,QAAQ,GAAGlB,aAAa,CAACrB,IAAdqB,CAAmBd,QAAnBc,EAA6BL,UAA7BK,EAAyC,OAAzCA;QACXY,QAAQ,GAAGV,iBAAiB,CAACvB,IAAlBuB,CAAuBgB,QAAvBhB;QACXiB,UAAU,GAAGR,oCAAoC,CAACzB,QAAD,EAAW0B,QAAX;AACvDrC,EAAAA,MAAM,CAAC6C,cAAP7C,CAAsBa,OAAO,CAACtB,SAA9BS,EAAyCW,QAAzCX,EAAmD4C,UAAnD5C;;AAGF;;;;;;AAMA;;;AAEA,MAAM8C,iCAAiC,GAAG,CAAC,kBAAD,EAAqB,aAArB,EAAoC,aAApC,EAAmD,cAAnD,EAAmE,cAAnE,EAAmF,cAAnF,EAAmG,YAAnG,EAAiH,aAAjH,EAAgI,WAAhI,EAA6I,WAA7I,EAA0J,eAA1J,EAA2K,qBAA3K,EAAkM,iBAAlM,EAAqN,aAArN,EAAoO,cAApO,EAAoP,cAApP,EAAoQ,cAApQ,EAAoR,UAApR,EAAgS,cAAhS,EAAgT,cAAhT,EAAgU,cAAhU,EAAgV,eAAhV,EAAiW,UAAjW,EAA6W,cAA7W,EAA6X,YAA7X,EAA2Y,UAA3Y,EAAuZ,sBAAvZ,EAA+a,cAA/a,EAA+b,iBAA/b,EAAkd,YAAld,EAAge,gBAAhe,EAAkf,UAAlf,EAA8f,cAA9f,EAA8gB,aAA9gB,EAA6hB,cAA7hB,EAA6iB,cAA7iB,EAA6jB,aAA7jB,EAA4kB,kBAA5kB,EAAgmB,kBAAhmB,EAAonB,WAApnB,EAAioB,iBAAjoB,EAAopB,qBAAppB,EAA2qB,cAA3qB,EAA2rB,cAA3rB,EAA2sB,aAA3sB,EAA0tB,aAA1tB,EAAyuB,MAAzuB,CAA1C;AACA;;;;;AAKA,KAAK,IAAIC,EAAC,GAAG,CAAR,EAAWC,GAAG,GAAGF,iCAAiC,CAAClE,MAAxD,EAAgEmE,EAAC,GAAGC,GAApE,EAAyED,EAAC,IAAI,CAA9E,EAAiF;QACzEpC,QAAQ,GAAGmC,iCAAiC,CAACC,EAAD;;MAE9CrC,QAAQ,CAACC,QAAD,GAAY;AACtB+B,IAAAA,KAAK,CAAC/B,QAAD,CAAL+B;;;AAIJ;;;;AAIA;;;;;;;;AAMA,SAASO,SAAT,CAAmBd,KAAnB,EAA0Be,GAA1B,EAA+B;MACzB,CAACf,OAAO;UACJ,IAAIgB,KAAJ,yBAAkCD,KAAlC;;;;AAIV,SAASE,MAAT,CAAgBjB,KAAhB,EAAuBe,GAAvB,EAA4B;MACtB,CAACf,OAAO;UACJ,IAAIgB,KAAJ,sBAA+BD,KAA/B;;;;AAIV,SAASG,OAAT,CAAiBlB,KAAjB,EAAwBe,GAAxB,EAA6B;MACvBf,OAAO;UACH,IAAIgB,KAAJ,sBAA+BD,KAA/B;;;;AAIV,SAASI,IAAT,CAAcJ,GAAd,EAAmB;QACX,IAAIC,KAAJ,CAAUD,GAAV;;;AAGR,IAAIK,MAAM,gBAEVvD,MAAM,CAACwD,MAAPxD,CAAc;AACZyD,EAAAA,SAAS,EAAE,IADC;AAEZR,EAAAA,SAAS,EAAEA,SAFC;AAGZG,EAAAA,MAAM,EAAEA,MAHI;AAIZC,EAAAA,OAAO,EAAEA,OAJG;AAKZC,EAAAA,IAAI,EAAEA;AALM,CAAdtD,CAFA;AASA;;;;;;;AAOA,MAAM;AACJ0D,EAAAA,MADI;AAEJC,EAAAA,MAFI;AAGJC,EAAAA,gBAHI;AAIJf,EAAAA,cAJI;AAKJW,EAAAA,MALI;AAMJ5C,EAAAA,wBANI;AAOJiD,EAAAA,mBAPI;AAQJC,EAAAA,cARI;AASJvC,EAAAA,cAAc,EAAEwC,gBATZ;AAUJC,EAAAA,IAVI;AAWJC,EAAAA,IAXI;AAYJC,EAAAA;AAZI,IAaFlE,MAbJ;AAcA,MAAM;AACJjB,EAAAA,OAAO,EAAEoF;AADL,IAEFnF,KAFJ;AAGA,MAAM;AACJoF,EAAAA,MAAM,EAAEC,WADJ;AAEJC,EAAAA,IAAI,EAAEC,SAFF;AAGJC,EAAAA,OAHI;AAIJC,EAAAA,OAAO,EAAEC,YAJL;AAKJC,EAAAA,IAAI,EAAEC,SALF;AAMJ7C,EAAAA,GAAG,EAAE8C,QAND;AAOJC,EAAAA,IAAI,EAAEC,SAPF;AAQJC,EAAAA,MAAM,EAAEC,WARJ;AASJC,EAAAA,OAAO,EAAEC,YATL;AAUJlG,EAAAA,KAAK,EAAEmG,YAVH;AAWJC,EAAAA,MAAM,EAAEC,WAXJ;AAYJnG,EAAAA,OAAO,EAAEoG;AAZL,IAaFvG,KAAK,CAACO,SAbV;AAcA,MAAM;AACJiG,EAAAA,UAAU,EAAEC,gBADR;AAEJjE,EAAAA,OAAO,EAAEkE,eAFL;AAGJzG,EAAAA,KAAK,EAAE0G,WAHH;AAIJjE,EAAAA,WAAW,EAAEkE;AAJT,IAKFhE,MAAM,CAACrC,SALX;;AAOA,SAASsG,WAAT,CAAqBC,GAArB,EAA0B;SACjBA,GAAG,KAAKlG;;;AAGjB,SAASmG,MAAT,CAAgBD,GAAhB,EAAqB;SACZA,GAAG,KAAK;;;AAGjB,SAASE,QAAT,CAAkBF,GAAlB,EAAuB;SACdA,GAAG,KAAK;;;AAGjB,SAASG,SAAT,CAAmBH,GAAnB,EAAwB;SACfA,GAAG,KAAK;;;AAGjB,SAASI,UAAT,CAAoBJ,GAApB,EAAyB;SAChB,OAAOA,GAAP,KAAe;;;AAGxB,SAASK,UAAT,CAAoBL,GAApB,EAAyB;SAChB,OAAOA,GAAP,KAAe;;;AAGxB,SAASM,QAAT,CAAkBN,GAAlB,EAAuB;SACd,OAAOA,GAAP,KAAe;;;AAGxB,SAASO,QAAT,CAAkBP,GAAlB,EAAuB;SACd,OAAOA,GAAP,KAAe;;;AAGxB,MAAMQ,GAAG,GAAG,GAAGC,QAAf;;AAEA,SAASA,QAAT,CAAkBT,GAAlB,EAAuB;MACjBA,GAAG,IAAIA,GAAG,CAACS,UAAU;;;;QAInBpC,SAAS,CAAC2B,GAAD,GAAO;aACXlB,SAAS,CAACxE,IAAVwE,CAAeC,QAAQ,CAACzE,IAATyE,CAAciB,GAAdjB,EAAmB0B,QAAnB1B,CAAfD,EAA6C,GAA7CA;;;WAGFkB,GAAG,CAACS,QAAJT;AART,SASO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;WAC3BQ,GAAG,CAAClG,IAAJkG,CAASR,GAATQ;AADF,GAAA,MAEA;WACER,GAAG,GAAGU;;;;AAIjB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkCC,CAAlC,EAAqC;KAChC;UACKC,CAAC,GAAGhG,wBAAwB,CAAC8F,CAAD,EAAIC,CAAJ;;QAE9B,CAACd,WAAW,CAACe,CAAD,GAAK;aACZA;;;AAGTF,IAAAA,CAAC,GAAG5C,cAAc,CAAC4C,CAAD,CAAlBA;AAPF,WAQSA,CAAC,KAAK;;;AAGjB,MAAMF,WAAW,GAAG,EAApB;AACA;;;;;;;AAOA;;;;;;;AAOA,MAAMK,uBAAuB,GAAG/H,MAAM,CAAC,GAAD,CAANA,CAAYyH,QAAZzH,OAA2B,WAA3D;;AAEA,SAASgI,iBAAT,CAA2BC,GAA3B,EAAgCC,SAAhC,EAA2C;SAClCH,uBAAuB,GAAG/H,MAAM,CAACiI,GAAD,CAAT,YAA0BC,aAAaD;;;AAGvE,MAAME,eAAe,GAAG,IAAI3F,OAAJ,EAAxB;;AAEA,SAAS4F,cAAT,CAAwBR,CAAxB,EAA2BS,KAA3B,EAAkChF,KAAlC,EAAyC;MACnCiF,aAAa,GAAGH,eAAe,CAACjF,GAAhBiF,CAAoBP,CAApBO;;MAEhBpB,WAAW,CAACuB,aAAD,GAAiB;AAC9BA,IAAAA,aAAa,GAAGzD,MAAM,CAAC,IAAD,CAAtByD;AACAH,IAAAA,eAAe,CAAChF,GAAhBgF,CAAoBP,CAApBO,EAAuBG,aAAvBH;;;AAGFG,EAAAA,aAAa,CAACD,KAAD,CAAbC,GAAuBjF,KAAvBiF;;;AAGF,SAASC,cAAT,CAAwBX,CAAxB,EAA2BS,KAA3B,EAAkC;QAC1BC,aAAa,GAAGH,eAAe,CAACjF,GAAhBiF,CAAoBP,CAApBO;;MAElB,CAACpB,WAAW,CAACuB,aAAD,GAAiB;WACxBA,aAAa,CAACD,KAAD;;;AAGxB;;AAEA;;;;;;;;AAOA,MAAMG,2BAA2B,GAAG,CAAC,WAAD,EAAc,KAAd,EAAqB,WAArB,EAAkC,QAAlC,EAA4C,IAA5C,EAAkD,MAAlD,EAA0D,UAA1D,EAAsE,OAAtE,CAApC;AACA;AACA;AACA;;AAEA,MAAMC,mDAAmD,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,UAA1B,EAAsC,SAAtC,EAAiD,SAAjD,EAA4D,SAA5D,EAAuE,iBAAvE,EAA0F,UAA1F,EAAsG,YAAtG,EAAoH,OAApH,EAA6H,WAA7H,EAA0I,QAA1I,CAA5D;;AAEA,SAASC,0BAAT,CAAoCC,IAApC,EAA0C;wBAClBA;;AAExB;AACA;;;AAGA,MAAMC,oBAAoB,GAAGhE,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,EAAe;AAChDgE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GADqC;AAIhDC,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE;AADI,GAJgC;AAOhDC,EAAAA,SAAS,EAAE;AACTH,IAAAA,SAAS,EAAE,OADF;AAETI,IAAAA,KAAK,EAAE;AAFE,GAPqC;AAWhDC,EAAAA,eAAe,EAAE;AACfL,IAAAA,SAAS,EAAE;AADI,GAX+B;AAchDM,EAAAA,OAAO,EAAE;AACPJ,IAAAA,QAAQ,EAAE,IADH;AAEPE,IAAAA,KAAK,EAAE;AAFA,GAduC;AAkBhDG,EAAAA,GAAG,EAAE;AACHP,IAAAA,SAAS,EAAE;AADR,GAlB2C;AAqBhDQ,EAAAA,SAAS,EAAE;AACTR,IAAAA,SAAS,EAAE;AADF,GArBqC;AAwBhDS,EAAAA,QAAQ,EAAE;AACRT,IAAAA,SAAS,EAAE,UADH;AAERE,IAAAA,QAAQ,EAAE;AAFF,GAxBsC;AA4BhDQ,EAAAA,MAAM,EAAE;AACNV,IAAAA,SAAS,EAAE;AADL,GA5BwC;AA+BhDW,EAAAA,EAAE,EAAE;AACFX,IAAAA,SAAS,EAAE;AADT,GA/B4C;AAkChDY,EAAAA,SAAS,EAAE;AACTZ,IAAAA,SAAS,EAAE;AADF,GAlCqC;AAqChDa,EAAAA,IAAI,EAAE;AACJb,IAAAA,SAAS,EAAE;AADP,GArC0C;AAwChDc,EAAAA,IAAI,EAAE;AACJd,IAAAA,SAAS,EAAE,MADP;AAEJI,IAAAA,KAAK,EAAE;AAFH,GAxC0C;AA4ChDW,EAAAA,UAAU,EAAE;AACVf,IAAAA,SAAS,EAAE;AADD,GA5CoC;AA+ChDgB,EAAAA,KAAK,EAAE;AACLhB,IAAAA,SAAS,EAAE;AADN,GA/CyC;AAkDhDiB,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,SAAS,EAAE;AADH,GAlDsC;AAqDhDkB,EAAAA,KAAK,EAAE;AACLlB,IAAAA,SAAS,EAAE;AADN,GArDyC;AAwDhDmB,EAAAA,SAAS,EAAE;AACTnB,IAAAA,SAAS,EAAE;AADF,GAxDqC;;AA4DhDoB,EAAAA,iBAAiB,EAAE;AACjBlB,IAAAA,QAAQ,EAAE;AADO,GA5D6B;AA+DhDmB,EAAAA,YAAY,EAAE;AACZnB,IAAAA,QAAQ,EAAE,IADE;AAEZE,IAAAA,KAAK,EAAER,0BAA0B,CAAC,cAAD;AAFrB,GA/DkC;AAmEhD0B,EAAAA,UAAU,EAAE;AACVpB,IAAAA,QAAQ,EAAE,IADA;AAEVE,IAAAA,KAAK,EAAER,0BAA0B,CAAC,YAAD;AAFvB,GAnEoC;AAuEhD2B,EAAAA,YAAY,EAAE;AACZrB,IAAAA,QAAQ,EAAE;AADE,GAvEkC;AA0EhDsB,EAAAA,SAAS,EAAE;AACTtB,IAAAA,QAAQ,EAAE,IADD;AAETE,IAAAA,KAAK,EAAER,0BAA0B,CAAC,WAAD;AAFxB,GA1EqC;AA8EhD6B,EAAAA,WAAW,EAAE;AACXvB,IAAAA,QAAQ,EAAE,IADC;AAEXE,IAAAA,KAAK,EAAER,0BAA0B,CAAC,aAAD;AAFtB,GA9EmC;AAkFhD8B,EAAAA,IAAI,EAAE;AACJ1B,IAAAA,SAAS,EAAE;AADP;AAlF0C,CAAf,CAAnC;AAsFA,MAAM2B,qBAAqB,GAAG5F,MAAM,CAAC,IAAD,CAApC;AACA,MAAM6F,qBAAqB,GAAG7F,MAAM,CAAC,IAAD,CAApC;;AAEAa,OAAO,CAACpE,IAARoE,CAAa1B,iCAAb0B,EAAgD7D,QAAQ,IAAI;;;;QAIpD0B,QAAQ,GAAGuD,mBAAmB,CAACxF,IAApBwF,CAAyBF,eAAe,CAACtF,IAAhBsF,CAAqB/E,QAArB+E,EAA+B,OAA/BA,EAAwC,OAAxCA,CAAzBE;AACjB2D,EAAAA,qBAAqB,CAAClH,QAAD,CAArBkH,GAAkC5I,QAAlC4I;AACAC,EAAAA,qBAAqB,CAAC7I,QAAD,CAArB6I,GAAkCnH,QAAlCmH;AANF,CAAAhF;AAQAA,OAAO,CAACpE,IAARoE,CAAa8C,2BAAb9C,EAA0C7D,QAAQ,IAAI;QAC9C0B,QAAQ,GAAGuD,mBAAmB,CAACxF,IAApBwF,CAAyBjF,QAAzBiF;AACjB2D,EAAAA,qBAAqB,CAAClH,QAAD,CAArBkH,GAAkC5I,QAAlC4I;AACAC,EAAAA,qBAAqB,CAAC7I,QAAD,CAArB6I,GAAkCnH,QAAlCmH;AAHF,CAAAhF;AAKAA,OAAO,CAACpE,IAARoE,CAAa+C,mDAAb/C,EAAkE7D,QAAQ,IAAI;QACtE0B,QAAQ,GAAGuD,mBAAmB,CAACxF,IAApBwF,CAAyBjF,QAAzBiF;AACjB2D,EAAAA,qBAAqB,CAAClH,QAAD,CAArBkH,GAAkC5I,QAAlC4I;AACAC,EAAAA,qBAAqB,CAAC7I,QAAD,CAArB6I,GAAkCnH,QAAlCmH;AAHF,CAAAhF;AAKA,MAAMiF,WAAW,GAAG,WAApB;AACA;;;;;AAKA,SAASC,uBAAT,CAAiCrH,QAAjC,EAA2C;MACrCwD,WAAW,CAAC0D,qBAAqB,CAAClH,QAAD,CAAtB,GAAmC;AAChDkH,IAAAA,qBAAqB,CAAClH,QAAD,CAArBkH,GAAkC7D,eAAe,CAACtF,IAAhBsF,CAAqBrD,QAArBqD,EAA+B+D,WAA/B/D,EAA4CiE,CAAC,IAAIA,CAAC,CAAC,CAAD,CAADA,CAAKC,WAALD,EAAjDjE,CAAlC6D;;;SAGKA,qBAAqB,CAAClH,QAAD;;;AAE9B,MAAMwH,UAAU,GAAG,QAAnB;AACA;;;;;AAKA,SAASC,uBAAT,CAAiCnJ,QAAjC,EAA2C;MACrCkF,WAAW,CAAC2D,qBAAqB,CAAC7I,QAAD,CAAtB,GAAmC;AAChD6I,IAAAA,qBAAqB,CAAC7I,QAAD,CAArB6I,GAAkC9D,eAAe,CAACtF,IAAhBsF,CAAqB/E,QAArB+E,EAA+BmE,UAA/BnE,EAA2CqE,KAAK,IAAI,MAAMA,KAAK,CAACrI,WAANqI,EAA1DrE,CAAlC8D;;;SAGKA,qBAAqB,CAAC7I,QAAD;;;AAE9B,IAAIqJ,iBAAiB,GAAG,IAAxB;AACA,IAAIC,uBAAJ;;AACA,SAASC,iBAAT,CAA2BpI,GAA3B,EAAgCO,QAAhC,EAA0C;SACjCP,GAAG,KAAKkI,iBAARlI,IAA6BO,QAAQ,KAAK4H;;;AAEnD,SAASE,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACjCL,EAAAA,iBAAiB,GAAG,IAApBA;AACAC,EAAAA,uBAAuB,GAAGrK,SAA1BqK;;;AAEF,SAASK,eAAT,CAAyBxI,GAAzB,EAA8BiF,GAA9B,EAAmC;AACjCiD,EAAAA,iBAAiB,GAAGlI,GAApBkI;AACAC,EAAAA,uBAAuB,GAAGlD,GAA1BkD;;AAGF;;;;;;;;AAMA,IAAIM,qBAAqB,GAAG,EAA5B;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,WAAW,GAAGxG,IAAI,CAACN,MAAM,CAAC,IAAD,CAAP,CAAxB;AACA,MAAM+G,UAAU,GAAGzG,IAAI,CAAC,EAAD,CAAvB;;AAEA,SAAS0G,kBAAT,GAA8B;EACe;QACrCJ,qBAAqB,CAAC3L,MAAtB2L,KAAiC,GAAG;YAChC,IAAIpH,KAAJ,0HAAA;;;;QAIJyH,SAAS,GAAGL;AAClBA,EAAAA,qBAAqB,GAAG,EAAxBA,CAR4B;;OAUvB,IAAIxH,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG4H,SAAS,CAAChM,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;AACvD6H,IAAAA,SAAS,CAAC7H,CAAD,CAAT6H;;;;AAIJ,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;EACI;QACrC,CAAC5E,UAAU,CAAC4E,QAAD,GAAY;YACnB,IAAI3H,KAAJ,8EAAA;;;;MAINoH,qBAAqB,CAAC3L,MAAtB2L,KAAiC,GAAG;AACtCQ,IAAAA,OAAO,CAACC,OAARD,GAAkBE,IAAlBF,CAAuBJ,kBAAvBI;;;AAGFhG,EAAAA,SAAS,CAAC3E,IAAV2E,CAAewF,qBAAfxF,EAAsC+F,QAAtC/F;;;AAEF,SAASmG,0BAAT,CAAoC/I,KAApC,EAA2C;SAClC4B,gBAAgB,CAAC3D,IAAjB2D,CAAsB5B,KAAtB4B,EAA6B,cAA7BA;;AAET;;;;;;;;;;;AAUA,SAASoH,+BAAT,CAAyCC,EAAzC,EAA6C;EACA;QACrC,CAAClF,UAAU,CAACkF,EAAD,GAAM;YACb,IAAIC,SAAJ,iDAAA;;;;SAIHD,EAAE;;;AAEX,MAAME,kBAAkB,GAAGvH,gBAAgB,CAAC3D,IAAjB2D,CAAsBlD,OAAO,CAACtB,SAA9BwE,EAAyC,eAAzCA,CAA3B;AAEA;;;;;;;AAMA,SAASwH,eAAT,CAAyBC,EAAzB,EAA6B;;;MAGvB;eACS5F,mBAAmB,CAACxF,IAApBwF,CAAyB4F,EAAE,CAAC1J,GAAH0J,CAAOC,OAAhC7F;AADb,IAEE,OAAOoC,KAAP,EAAc;WACP;;;;;AAIX,SAAS0D,iBAAT,CAA2BF,EAA3B,EAA+B;QACvBG,KAAK,GAAG;MACVC,MAAM,GAAG;;SAEN,CAAC7F,MAAM,CAACyF,EAAE,CAACK,KAAJ,GAAY;AACxB9G,IAAAA,SAAS,CAAC3E,IAAV2E,CAAe4G,KAAf5G,EAAsB6G,MAAM,GAAGL,eAAe,CAACC,EAAD,CAA9CzG;AACAyG,IAAAA,EAAE,GAAGA,EAAE,CAACK,KAARL;AACAI,IAAAA,MAAM,IAAI,IAAVA;;;SAGKhH,SAAS,CAACxE,IAAVwE,CAAe+G,KAAf/G,EAAsB,IAAtBA;;;AAET,SAASkH,sBAAT,CAAgCN,EAAhC,EAAoC;QAC5BO,OAAO,GAAG;MACZC,SAAS,GAAGR;;SAET,CAACzF,MAAM,CAACiG,SAAD,GAAa;AACzBjH,IAAAA,SAAS,CAAC3E,IAAV2E,CAAegH,OAAfhH,EAAwBwG,eAAe,CAACS,SAAD,CAAvCjH;AACAiH,IAAAA,SAAS,GAAGA,SAAS,CAACH,KAAtBG;;;SAGKD,OAAO,CAAC7G,OAAR6G,GAAkBpH,IAAlBoH,CAAuB,MAAvBA;;AAGT;;;;;;;;AAMA,SAASE,QAAT,CAAkBC,OAAlB,EAA2BV,EAA3B,EAA+B;MACzBtI,GAAG,mBAAmBgJ;;MAEtB,CAACrG,WAAW,CAAC2F,EAAD,GAAM;AACpBtI,IAAAA,GAAG,MAAMA,QAAQwI,iBAAiB,CAACF,EAAD,GAAlCtI;;;MASE;UACI,IAAIC,KAAJ,CAAUD,GAAV;AADR,IAEE,OAAOiJ,CAAP,EAAU;;AAEVC,IAAAA,OAAO,CAACpE,KAARoE,CAAcD,CAAdC;;;AAIJ;;;;;;;;AAOA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;QAC3B;AACJC,IAAAA;AADI,MAEFF;QACE;AACJG,IAAAA,IAAI,EAAE;AACJC,MAAAA;AADI;AADF,MAIFH;QACEI,OAAO,GAAGD,EAAE,IAAIA,EAAE,CAACF,IAAD,EATS;;MAW7BG,SAAS;AACXA,IAAAA,OAAO,CAACvM,IAARuM,CAAa/M,SAAb+M,EAAwBL,KAAxBK;;;;AAIJ,SAASC,cAAT,GAA0B;SACjB,SAASD,OAAT,CAAiBL,KAAjB,EAAwB;AAC7BD,IAAAA,WAAW,CAACC,KAAD,EAAQK,OAAO,CAACJ,KAAhB,CAAXF;AADF;;;AAKF,SAASQ,uBAAT,CAAiCC,QAAjC,EAA2CP,KAA3C,EAAkD;MAC5C1G,WAAW,CAACiH,QAAQ,CAACC,QAAV,GAAqB;AAClCC,IAAAA,uBAAuB,CAACT,KAAD,CAAvBS;AADF,SAEO;AACLT,IAAAA,KAAK,CAACQ,QAANR,GAAiBO,QAAQ,CAACC,QAA1BR;AACAA,IAAAA,KAAK,CAACQ,QAANR,CAAeA,KAAfA,GAAuBA,KAAvBA;;;;AAIJ,SAASS,uBAAT,CAAiCT,KAAjC,EAAwC;QAChC;AACJE,IAAAA,IAAI,EAAE;AACJC,MAAAA;AADI;AADF,MAIFH;;MAEA1G,WAAW,CAAC6G,EAAD,GAAM;;;;QAIf5K,GAAG,GAAGyK,KAAK,CAACzK;QACZiL,QAAQ,GAAGR,KAAK,CAACQ,QAANR,GAAiBK,cAAc;AAChDG,EAAAA,QAAQ,CAACR,KAATQ,GAAiBR,KAAjBQ;MACItF;;OAECA,QAAQiF,IAAI;AACf5K,IAAAA,GAAG,CAACmL,gBAAJnL,CAAqB2F,IAArB3F,EAA2BiL,QAA3BjL;;;;AAIJ,IAAIoL,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAEN,uBADM;AAEdlJ,EAAAA,MAAM,EAAEqJ;AAFM,CAAhB;AAKA;;;;;;;AAMA,MAAMI,OAAO,GAAG,8BAAhB;AACA,MAAMC,KAAK,GAAG,sCAAd;AACA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,SAASC,WAAT,CAAqBT,QAArB,EAA+BP,KAA/B,EAAsC;QAC9B;AACJE,IAAAA,IAAI,EAAE;AACJe,MAAAA;AADI;AADF,MAIFjB;;MAEA1G,WAAW,CAAC2H,KAAD,GAAS;;;;MAIpB;AACFf,IAAAA,IAAI,EAAE;AACJe,MAAAA,KAAK,EAAEC;AADH;AADJ,MAIAX;;MAEAW,QAAQ,KAAKD,OAAO;;;;EAImB;AACzCjK,IAAAA,MAAM,CAACN,SAAPM,CAAiBsC,WAAW,CAAC4H,QAAD,CAAX5H,IAAyB7B,IAAI,CAACyJ,QAAD,CAAJzJ,CAAeW,IAAfX,CAAoB,GAApBA,MAA6BA,IAAI,CAACwJ,KAAD,CAAJxJ,CAAYW,IAAZX,CAAiB,GAAjBA,CAAvET,yCAAAA;;;QAGIzB,GAAG,GAAGyK,KAAK,CAACzK;MACdiF;AACJ0G,EAAAA,QAAQ,GAAG5H,WAAW,CAAC4H,QAAD,CAAX5H,GAAwB4E,WAAxB5E,GAAsC4H,QAAjDA,CA3BoC;;;;OA+B/B1G,OAAOyG,OAAO;UACXE,GAAG,GAAGF,KAAK,CAACzG,GAAD;UACX4G,GAAG,GAAGF,QAAQ,CAAC1G,GAAD;;QAEhB4G,GAAG,KAAKD,KAAK;AACfpD,MAAAA,eAAe,CAACxI,GAAD,EAAMiF,GAAN,CAAfuD;;UAEI7E,gBAAgB,CAACrF,IAAjBqF,CAAsBsB,GAAtBtB,EAA2B,CAA3BA,MAAkC6H,eAAe;;AAEnDxL,QAAAA,GAAG,CAACb,cAAJa,CAAmBuL,KAAnBvL,EAA0BiF,GAA1BjF,EAA+B4L,GAA/B5L;AAFF,aAGO,IAAI2D,gBAAgB,CAACrF,IAAjBqF,CAAsBsB,GAAtBtB,EAA2B,CAA3BA,MAAkC6H,aAAtC,EAAqD;;AAE1DxL,QAAAA,GAAG,CAACb,cAAJa,CAAmBsL,OAAnBtL,EAA4BiF,GAA5BjF,EAAiC4L,GAAjC5L;AAFK,OAAA,MAGA,IAAIiE,MAAM,CAAC2H,GAAD,CAAV,EAAiB;AACtB5L,QAAAA,GAAG,CAACZ,eAAJY,CAAoBiF,GAApBjF;AADK,OAAA,MAEA;AACLA,QAAAA,GAAG,CAACd,YAAJc,CAAiBiF,GAAjBjF,EAAsB4L,GAAtB5L;;;AAGFqI,MAAAA,aAAa;;;;;AAKnB,MAAMyD,UAAU,GAAG;AACjBnB,EAAAA,IAAI,EAAE;AADW,CAAnB;AAGA,IAAIoB,QAAQ,GAAG;AACblK,EAAAA,MAAM,EAAE4I,KAAK,IAAIgB,WAAW,CAACK,UAAD,EAAarB,KAAb,CADf;AAEbY,EAAAA,MAAM,EAAEI;AAFK,CAAf;AAKA;;;;;;;AAOA,SAASO,iBAAT,CAA2BC,GAA3B,EAAgChH,GAAhC,EAAqC;;;SAG5BgH,GAAG,KAAK,OAARA,KAAoBhH,GAAG,KAAK,OAARA,IAAmBA,GAAG,KAAK,SAA/CgH;;;AAGT,SAASZ,MAAT,CAAgBL,QAAhB,EAA0BP,KAA1B,EAAiC;QACzByB,KAAK,GAAGzB,KAAK,CAACE,IAANF,CAAWyB;;MAErBnI,WAAW,CAACmI,KAAD,GAAS;;;;QAIlBC,QAAQ,GAAGnB,QAAQ,CAACL,IAATK,CAAckB;;MAE3BC,QAAQ,KAAKD,OAAO;;;;EAImB;AACzCzK,IAAAA,MAAM,CAACN,SAAPM,CAAiBsC,WAAW,CAACoI,QAAD,CAAXpI,IAAyB7B,IAAI,CAACiK,QAAD,CAAJjK,CAAeW,IAAfX,CAAoB,GAApBA,MAA6BA,IAAI,CAACgK,KAAD,CAAJhK,CAAYW,IAAZX,CAAiB,GAAjBA,CAAvET,EAA8F,uCAA9FA;;;QAGIzB,GAAG,GAAGyK,KAAK,CAACzK;QACZoM,YAAY,GAAGrI,WAAW,CAACoI,QAAD;QAC1B;AACJF,IAAAA;AADI,MAEFxB;;OAEC,MAAMxF,OAAOiH,OAAO;UACjBN,GAAG,GAAGM,KAAK,CAACjH,GAAD;;IAE0B;UACrC,EAAEA,GAAG,IAAIjF,GAAT,GAAe;;AAEjByB,QAAAA,MAAM,CAACD,IAAPC,6BAAwCwD,oBAAoBgH,+DAA+DjE,uBAAuB,CAAC/C,GAAD,KAAlJxD;;AANmB,KAAA;;;QAWnB2K,YAAY,IAAIR,GAAG,MAAMI,iBAAiB,CAACC,GAAD,EAAMhH,GAAN,CAAjB+G,GAA8BhM,GAAG,CAACiF,GAAD,CAAjC+G,GAAyCG,QAAQ,CAAClH,GAAD,CAAvD,GAA+D;AACpFjF,MAAAA,GAAG,CAACiF,GAAD,CAAHjF,GAAW4L,GAAX5L;;;;;AAKN,MAAMqM,YAAY,GAAG;AACnB1B,EAAAA,IAAI,EAAE;AADa,CAArB;AAGA,IAAI2B,QAAQ,GAAG;AACbzK,EAAAA,MAAM,EAAE4I,KAAK,IAAIY,MAAM,CAACgB,YAAD,EAAe5B,KAAf,CADV;AAEbY,EAAAA;AAFa,CAAf;AAKA;;;;;;;AAMA,MAAMkB,mBAAmB,GAAG1K,MAAM,CAAC,IAAD,CAAlC;;AAEA,SAAS2K,mBAAT,CAA6BvG,SAA7B,EAAwC;;MAElCA,SAAS,IAAI,MAAM;WACd0C;AAH6B,GAAA;;;AAOtC1C,EAAAA,SAAS,GAAG3B,QAAQ,CAAC2B,SAAD,CAAR3B,GAAsB2B,SAAtB3B,GAAkC2B,SAAS,GAAG,EAA1DA;MACIhG,GAAG,GAAGsM,mBAAmB,CAACtG,SAAD;;MAEzBhG,KAAK;WACAA;;;AAGTA,EAAAA,GAAG,GAAG4B,MAAM,CAAC,IAAD,CAAZ5B;MACIwM,KAAK,GAAG;MACR7H;QACE1D,GAAG,GAAG+E,SAAS,CAACnJ;;OAEjB8H,CAAC,GAAG,GAAGA,CAAC,GAAG1D,KAAK0D,CAAC,IAAI;QACpBjB,gBAAgB,CAACrF,IAAjBqF,CAAsBsC,SAAtBtC,EAAiCiB,CAAjCjB,MAAwC+E,YAAY;UAClD9D,CAAC,GAAG6H,OAAO;AACbxM,QAAAA,GAAG,CAAC4D,WAAW,CAACvF,IAAZuF,CAAiBoC,SAAjBpC,EAA4B4I,KAA5B5I,EAAmCe,CAAnCf,CAAD,CAAH5D,GAA6C,IAA7CA;;;AAGFwM,MAAAA,KAAK,GAAG7H,CAAC,GAAG,CAAZ6H;;;;MAIA7H,CAAC,GAAG6H,OAAO;AACbxM,IAAAA,GAAG,CAAC4D,WAAW,CAACvF,IAAZuF,CAAiBoC,SAAjBpC,EAA4B4I,KAA5B5I,EAAmCe,CAAnCf,CAAD,CAAH5D,GAA6C,IAA7CA;;;AAGFsM,EAAAA,mBAAmB,CAACtG,SAAD,CAAnBsG,GAAiCtM,GAAjCsM;;EAE2C;;AAEzC7K,IAAAA,MAAM,CAACzB,GAAD,CAANyB;;;SAGKzB;;;AAGT,SAASyM,oBAAT,CAA8B1B,QAA9B,EAAwCP,KAAxC,EAA+C;QACvC;AACJzK,IAAAA,GADI;AAEJ2K,IAAAA,IAAI,EAAE;AACJ1E,MAAAA,SAAS,EAAE0G;AADP;AAFF,MAKFlC;QACE;AACJE,IAAAA,IAAI,EAAE;AACJ1E,MAAAA,SAAS,EAAE2G;AADP;AADF,MAIF5B;;MAEA4B,QAAQ,KAAKD,UAAU;;;;QAIrB;AACJE,IAAAA;AADI,MAEF7M;QACE8M,WAAW,GAAGN,mBAAmB,CAACG,QAAD;QACjCI,WAAW,GAAGP,mBAAmB,CAACI,QAAD;MACnCjH;;OAECA,QAAQoH,aAAa;;QAEpBhJ,WAAW,CAAC+I,WAAW,CAACnH,IAAD,CAAZ,GAAqB;AAClCkH,MAAAA,SAAS,CAACG,MAAVH,CAAiBlH,IAAjBkH;;;;OAIClH,QAAQmH,aAAa;QACpB/I,WAAW,CAACgJ,WAAW,CAACpH,IAAD,CAAZ,GAAqB;AAClCkH,MAAAA,SAAS,CAACI,GAAVJ,CAAclH,IAAdkH;;;;;AAKN,MAAMK,YAAY,GAAG;AACnBvC,EAAAA,IAAI,EAAE;AADa,CAArB;AAGA,IAAIwC,oBAAoB,GAAG;AACzBtL,EAAAA,MAAM,EAAE4I,KAAK,IAAIiC,oBAAoB,CAACQ,YAAD,EAAezC,KAAf,CADZ;AAEzBY,EAAAA,MAAM,EAAEqB;AAFiB,CAA3B;AAKA;;;;;;;AAOA,SAASU,oBAAT,CAA8BpC,QAA9B,EAAwCP,KAAxC,EAA+C;QACvC;AACJ3D,IAAAA,KAAK,EAAEuG;AADH,MAEF5C,KAAK,CAACE;;MAENK,QAAQ,CAACL,IAATK,CAAclE,KAAdkE,KAAwBqC,UAAU;;;;QAIhCrN,GAAG,GAAGyK,KAAK,CAACzK;QACZ;AACJ8G,IAAAA;AADI,MAEF9G;;MAEA,CAACsE,QAAQ,CAAC+I,QAAD,CAAT,IAAuBA,QAAQ,KAAK,IAAI;AAC1CjO,IAAAA,eAAe,CAACd,IAAhBc,CAAqBY,GAArBZ,EAA0B,OAA1BA;AADF,SAEO;AACL0H,IAAAA,KAAK,CAACwG,OAANxG,GAAgBuG,QAAhBvG;;;;AAIJ,MAAMyG,YAAY,GAAG;AACnB5C,EAAAA,IAAI,EAAE;AADa,CAArB;AAGA,IAAI6C,gBAAgB,GAAG;AACrB3L,EAAAA,MAAM,EAAE4I,KAAK,IAAI2C,oBAAoB,CAACG,YAAD,EAAe9C,KAAf,CADhB;AAErBY,EAAAA,MAAM,EAAE+B;AAFa,CAAvB;AAKA;;;;;;AAMA;AACA;;AAEA,SAASK,oBAAT,CAA8BhD,KAA9B,EAAqC;QAC7B;AACJzK,IAAAA,GADI;AAEJ2K,IAAAA,IAAI,EAAE;AACJ+C,MAAAA;AADI;AAFF,MAKFjD;;MAEA1G,WAAW,CAAC2J,QAAD,GAAY;;;;QAIrB;AACJb,IAAAA;AADI,MAEF7M;;OAEC,MAAM2F,QAAQ+H,UAAU;AAC3Bb,IAAAA,SAAS,CAACI,GAAVJ,CAAclH,IAAdkH;;;;AAIJ,IAAIc,kBAAkB,GAAG;AACvB9L,EAAAA,MAAM,EAAE4L;AADe,CAAzB;AAIA;;;;;;AAMA;AACA;;AAEA,SAASG,oBAAT,CAA8BnD,KAA9B,EAAqC;QAC7B;AACJzK,IAAAA,GADI;AAEJ2K,IAAAA,IAAI,EAAE;AACJkD,MAAAA;AADI;AAFF,MAKFpD;;MAEA1G,WAAW,CAAC8J,QAAD,GAAY;;;;QAIrB;AACJ/G,IAAAA;AADI,MAEF9G;;OAEC,MAAM2F,QAAQkI,UAAU;AAC3B/G,IAAAA,KAAK,CAACnB,IAAD,CAALmB,GAAc+G,QAAQ,CAAClI,IAAD,CAAtBmB;;;;AAIJ,IAAIgH,cAAc,GAAG;AACnBjM,EAAAA,MAAM,EAAE+L;AADW,CAArB;AAIA;;;;;;;AAOA,SAASG,aAAT,CAAuBtD,KAAvB,EAA8B;QACtB;AACJE,IAAAA,IAAI,EAAE;AACJqD,MAAAA;AADI;AADF,MAIFvD;;MAEA1G,WAAW,CAACiK,OAAD,GAAW;;;;QAIpBhO,GAAG,GAAGyK,KAAK,CAACzK;QACZ0J,EAAE,GAAGuE,wBAAwB,CAACjO,GAAD;;MAE/B,CAAC+D,WAAW,CAAC2F,EAAD,GAAM;AACpB9H,IAAAA,MAAM,CAAC8H,EAAE,CAACsE,OAAJ,EAAaA,OAAb,CAANpM;;;;AAIJ,MAAMsM,aAAa,GAAG;AACpBrM,EAAAA,MAAM,EAAEkM;AADY,CAAtB;AAIA;;;;;;;AAOA;;;;;;;;;AAQA,SAASI,OAAT,CAAiBC,CAAjB,EAAoB;SACXA,CAAC,KAAKtQ;;;AAGf,SAASuQ,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmC;SAC1BD,MAAM,CAACrJ,GAAPqJ,KAAeC,MAAM,CAACtJ,GAAtBqJ,IAA6BA,MAAM,CAACrC,GAAPqC,KAAeC,MAAM,CAACtC;;;AAG5D,SAASuC,OAAT,CAAiB/D,KAAjB,EAAwB;SACfA,KAAK,IAAI;;;AAGlB,SAASgE,iBAAT,CAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,MAA/C,EAAuD;QAC/C3O,GAAG,GAAG;MACR4O,GAAG5J,KAAK6J,GAFyC;;OAIhDD,CAAC,GAAGF,UAAUE,CAAC,IAAID,QAAQ,EAAEC,GAAG;AACnCC,IAAAA,EAAE,GAAGJ,QAAQ,CAACG,CAAD,CAAbC;;QAEIN,OAAO,CAACM,EAAD,GAAM;AACf7J,MAAAA,GAAG,GAAG6J,EAAE,CAAC7J,GAATA;;UAEIA,GAAG,KAAKnH,WAAW;AACrBmC,QAAAA,GAAG,CAACgF,GAAD,CAAHhF,GAAW4O,CAAX5O;;;;;SAKCA;;;AAGT,SAAS8O,SAAT,CAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8CC,QAA9C,EAAwDP,MAAxD,EAAgE;SACvDO,QAAQ,IAAIP,QAAQ,EAAEO,UAAU;UAC/BL,EAAE,GAAGI,MAAM,CAACC,QAAD;;QAEbX,OAAO,CAACM,EAAD,GAAM;AACfA,MAAAA,EAAE,CAACM,IAAHN,CAAQjN,MAARiN,CAAeA,EAAfA;AACAA,MAAAA,EAAE,CAACM,IAAHN,CAAQO,MAARP,CAAeA,EAAfA,EAAmBE,SAAnBF,EAA8BG,MAA9BH;;;;;AAKN,SAASQ,YAAT,CAAsBN,SAAtB,EAAiCE,MAAjC,EAAyCC,QAAzC,EAAmDP,MAAnD,EAA2D;SAClDO,QAAQ,IAAIP,QAAQ,EAAEO,UAAU;UAC/BL,EAAE,GAAGI,MAAM,CAACC,QAAD,EADoB;;QAGjCX,OAAO,CAACM,EAAD,GAAM;AACfA,MAAAA,EAAE,CAACM,IAAHN,CAAQ9B,MAAR8B,CAAeA,EAAfA,EAAmBE,SAAnBF;;;;;AAKN,SAASS,qBAAT,CAA+BP,SAA/B,EAA0CQ,KAA1C,EAAiDC,KAAjD,EAAwD;MAClDC,WAAW,GAAG;MACdC,WAAW,GAAG;MACdC,SAAS,GAAGJ,KAAK,CAAC1S,MAAN0S,GAAe;MAC3BK,aAAa,GAAGL,KAAK,CAAC,CAAD;MACrBM,WAAW,GAAGN,KAAK,CAACI,SAAD;MACnBG,SAAS,GAAGN,KAAK,CAAC3S,MAAN2S,GAAe;MAC3BO,aAAa,GAAGP,KAAK,CAAC,CAAD;MACrBQ,WAAW,GAAGR,KAAK,CAACM,SAAD;MACnBG;MACAC;MACAC;MACAnB;;SAEGS,WAAW,IAAIE,SAAfF,IAA4BC,WAAW,IAAII,WAAW;QACvD,CAACvB,OAAO,CAACqB,aAAD,GAAiB;AAC3BA,MAAAA,aAAa,GAAGL,KAAK,CAAC,EAAEE,WAAH,CAArBG,CAD2B;AAA7B,WAEO,IAAI,CAACrB,OAAO,CAACsB,WAAD,CAAZ,EAA2B;AAChCA,MAAAA,WAAW,GAAGN,KAAK,CAAC,EAAEI,SAAH,CAAnBE;AADK,KAAA,MAEA,IAAI,CAACtB,OAAO,CAACwB,aAAD,CAAZ,EAA6B;AAClCA,MAAAA,aAAa,GAAGP,KAAK,CAAC,EAAEE,WAAH,CAArBK;AADK,KAAA,MAEA,IAAI,CAACxB,OAAO,CAACyB,WAAD,CAAZ,EAA2B;AAChCA,MAAAA,WAAW,GAAGR,KAAK,CAAC,EAAEM,SAAH,CAAnBE;AADK,KAAA,MAEA,IAAI5B,SAAS,CAACwB,aAAD,EAAgBG,aAAhB,CAAb,EAA6C;AAClDK,MAAAA,UAAU,CAACR,aAAD,EAAgBG,aAAhB,CAAVK;AACAR,MAAAA,aAAa,GAAGL,KAAK,CAAC,EAAEE,WAAH,CAArBG;AACAG,MAAAA,aAAa,GAAGP,KAAK,CAAC,EAAEE,WAAH,CAArBK;AAHK,KAAA,MAIA,IAAI3B,SAAS,CAACyB,WAAD,EAAcG,WAAd,CAAb,EAAyC;AAC9CI,MAAAA,UAAU,CAACP,WAAD,EAAcG,WAAd,CAAVI;AACAP,MAAAA,WAAW,GAAGN,KAAK,CAAC,EAAEI,SAAH,CAAnBE;AACAG,MAAAA,WAAW,GAAGR,KAAK,CAAC,EAAEM,SAAH,CAAnBE;AAHK,KAAA,MAIA,IAAI5B,SAAS,CAACwB,aAAD,EAAgBI,WAAhB,CAAb,EAA2C;;AAEhDI,MAAAA,UAAU,CAACR,aAAD,EAAgBI,WAAhB,CAAVI;AACAJ,MAAAA,WAAW,CAACb,IAAZa,CAAiBK,IAAjBL,CAAsBJ,aAAtBI,EAAqCjB,SAArCiB,EAAgDH,WAAW,CAAC9P,GAAZ8P,CAAgBS,WAAhEN;AACAJ,MAAAA,aAAa,GAAGL,KAAK,CAAC,EAAEE,WAAH,CAArBG;AACAI,MAAAA,WAAW,GAAGR,KAAK,CAAC,EAAEM,SAAH,CAAnBE;AALK,KAAA,MAMA,IAAI5B,SAAS,CAACyB,WAAD,EAAcE,aAAd,CAAb,EAA2C;;AAEhDK,MAAAA,UAAU,CAACP,WAAD,EAAcE,aAAd,CAAVK;AACAL,MAAAA,aAAa,CAACZ,IAAdY,CAAmBM,IAAnBN,CAAwBF,WAAxBE,EAAqChB,SAArCgB,EAAgDH,aAAa,CAAC7P,GAA9DgQ;AACAF,MAAAA,WAAW,GAAGN,KAAK,CAAC,EAAEI,SAAH,CAAnBE;AACAE,MAAAA,aAAa,GAAGP,KAAK,CAAC,EAAEE,WAAH,CAArBK;AALK,KAAA,MAMA;UACDE,WAAW,KAAKpS,WAAW;AAC7BoS,QAAAA,WAAW,GAAGzB,iBAAiB,CAACe,KAAD,EAAQE,WAAR,EAAqBE,SAArB,CAA/BM;;;AAGFC,MAAAA,QAAQ,GAAGD,WAAW,CAACF,aAAa,CAAC/K,GAAf,CAAtBkL;;UAEIhC,OAAO,CAACgC,QAAD,GAAY;;AAErBH,QAAAA,aAAa,CAACZ,IAAdY,CAAmBnO,MAAnBmO,CAA0BA,aAA1BA;AACAA,QAAAA,aAAa,CAACZ,IAAdY,CAAmBX,MAAnBW,CAA0BA,aAA1BA,EAAyChB,SAAzCgB,EAAoDH,aAAa,CAAC7P,GAAlEgQ;AACAA,QAAAA,aAAa,GAAGP,KAAK,CAAC,EAAEE,WAAH,CAArBK;AAJF,aAKO;AACLI,QAAAA,SAAS,GAAGZ,KAAK,CAACW,QAAD,CAAjBC;;YAEI5B,OAAO,CAAC4B,SAAD,GAAa;cAClBA,SAAS,CAACnE,GAAVmE,KAAkBJ,aAAa,CAAC/D,KAAK;;AAEvC+D,YAAAA,aAAa,CAACZ,IAAdY,CAAmBnO,MAAnBmO,CAA0BA,aAA1BA;AACAA,YAAAA,aAAa,CAACZ,IAAdY,CAAmBX,MAAnBW,CAA0BA,aAA1BA,EAAyChB,SAAzCgB,EAAoDH,aAAa,CAAC7P,GAAlEgQ;AAHF,iBAIO;AACLK,YAAAA,UAAU,CAACD,SAAD,EAAYJ,aAAZ,CAAVK;AACAb,YAAAA,KAAK,CAACW,QAAD,CAALX,GAAkB1R,SAAlB0R;AACAQ,YAAAA,aAAa,CAACZ,IAAdY,CAAmBM,IAAnBN,CAAwBI,SAAxBJ,EAAmChB,SAAnCgB,EAA8CH,aAAa,CAAC7P,GAA5DgQ;;;;AAIJA,QAAAA,aAAa,GAAGP,KAAK,CAAC,EAAEE,WAAH,CAArBK;;;;;MAKFN,WAAW,IAAIE,SAAfF,IAA4BC,WAAW,IAAII,WAAW;QACpDL,WAAW,GAAGE,WAAW;YACrBY,CAAC,GAAGf,KAAK,CAACM,SAAS,GAAG,CAAb;AACfd,MAAAA,MAAM,GAAGT,OAAO,CAACgC,CAAD,CAAPhC,GAAagC,CAAC,CAACxQ,GAAfwO,GAAqB,IAA9BS;AACAF,MAAAA,SAAS,CAACC,SAAD,EAAYC,MAAZ,EAAoBQ,KAApB,EAA2BE,WAA3B,EAAwCI,SAAxC,CAAThB;AAHF,WAIO;AACLO,MAAAA,YAAY,CAACN,SAAD,EAAYQ,KAAZ,EAAmBE,WAAnB,EAAgCE,SAAhC,CAAZN;;;;;AAIN,SAASmB,oBAAT,CAA8BzB,SAA9B,EAAyCQ,KAAzC,EAAgDC,KAAhD,EAAuD;QAC/C;AACJ3S,IAAAA;AADI,MAEF2S;;MAEAD,KAAK,CAAC1S,MAAN0S,KAAiB,GAAG;;AAEtBT,IAAAA,SAAS,CAACC,SAAD,EAAY,IAAZ,EAAkBS,KAAlB,EAAyB,CAAzB,EAA4B3S,MAA5B,CAATiS;;AAPmD,GAAA;;;;MAajD2B,YAAY,GAAG;;OAEd,IAAIzP,CAAC,GAAGnE,MAAM,GAAG,GAAGmE,CAAC,IAAI,GAAGA,CAAC,IAAI,GAAG;UACjCwJ,KAAK,GAAGgF,KAAK,CAACxO,CAAD;UACb0P,QAAQ,GAAGnB,KAAK,CAACvO,CAAD;;QAElBwJ,KAAK,KAAKkG,UAAU;UAClBnC,OAAO,CAACmC,QAAD,GAAY;YACjBnC,OAAO,CAAC/D,KAAD,GAAS;;AAElB4F,UAAAA,UAAU,CAACM,QAAD,EAAWlG,KAAX,CAAV4F;AACAK,UAAAA,YAAY,GAAGjG,KAAK,CAACzK,GAArB0Q;AAHF,eAIO;;AAELC,UAAAA,QAAQ,CAACvB,IAATuB,CAAc3D,MAAd2D,CAAqBA,QAArBA,EAA+B3B,SAA/B2B;;AAPJ,aASO,IAAInC,OAAO,CAAC/D,KAAD,CAAX,EAAoB;;AAEzBA,QAAAA,KAAK,CAAC2E,IAAN3E,CAAW5I,MAAX4I,CAAkBA,KAAlBA,EAFyB;;AAIzBA,QAAAA,KAAK,CAAC2E,IAAN3E,CAAW4E,MAAX5E,CAAkBA,KAAlBA,EAAyBuE,SAAzBvE,EAAoCiG,YAApCjG;AACAiG,QAAAA,YAAY,GAAGjG,KAAK,CAACzK,GAArB0Q;;;;;;AAMR,SAASL,UAAT,CAAoBrF,QAApB,EAA8BP,KAA9B,EAAqC;MAC/BO,QAAQ,KAAKP,OAAO;AACtBA,IAAAA,KAAK,CAACzK,GAANyK,GAAYO,QAAQ,CAAChL,GAArByK;AACAA,IAAAA,KAAK,CAAC2E,IAAN3E,CAAWY,MAAXZ,CAAkBO,QAAlBP,EAA4BA,KAA5BA;;;AAIJ;;;;;;;;AAOA,SAASmG,sBAAT,CAAgCC,OAAhC,EAAyC;SAChCjP,MAAM,CAAC;AACZlB,IAAAA,YAAY,EAAE,IADF;AAEZC,IAAAA,UAAU,EAAE,IAFA;AAGZmQ,IAAAA,QAAQ,EAAE;AAHE,GAAD,EAIVD,OAJU;;;AAOf,SAASE,0BAAT,CAAoCF,OAApC,EAA6C;SACpCjP,MAAM,CAAC;AACZlB,IAAAA,YAAY,EAAE,IADF;AAEZC,IAAAA,UAAU,EAAE;AAFA,GAAD,EAGVkQ,OAHU;;;AAMf,IAAIG,oBAAoB,GAAG,KAA3B;;AACA,SAASC,iBAAT,GAA6B;;AAM3BD,EAAAA,oBAAoB,GAAG,IAAvBA;;;AAEF,SAASE,eAAT,GAA2B;;AAMzBF,EAAAA,oBAAoB,GAAG,KAAvBA;;;AAGF,SAASG,6BAAT,CAAuCxL,IAAvC,EAA6C+E,IAA7C,EAAmD;kBACjC/E,UAAU+E;;;AAG5B,SAAS0G,8BAAT,CAAwCC,IAAxC,EAA8CR,OAA9C,EAAuD;;;;QAQ/CS,6BAA6B,GAAG3M,qBAAqB,CAAC0M,IAAD,EAAO,aAAP;QACrDE,2BAA2B,GAAG5M,qBAAqB,CAAC0M,IAAD,EAAO,WAAP;QACnD;AACJG,IAAAA,WADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA;AAJI,MAKFN;SACG;AACLG,IAAAA,WAAW,EAAEZ,sBAAsB,CAAC;AAClCvQ,MAAAA,KAAK,CAACuR,MAAD,EAAS;YACR,gBAAgB7S,OAAhB,IAA2BoF,SAAS,CAAC0M,OAAO,CAACgB,QAAT,GAAoB;AAC1D1H,UAAAA,QAAQ,CAACgH,6BAA6B,CAAC,aAAD,EAAgB,QAAhB,CAA9B,CAARhH;;;eAGKqH,WAAW,CAAClT,IAAZkT,CAAiB,IAAjBA,EAAuBI,MAAvBJ;;;AANyB,KAAD,CAD9B;AAWLC,IAAAA,YAAY,EAAEb,sBAAsB,CAAC;AACnCvQ,MAAAA,KAAK,CAACyR,OAAD,EAAUC,aAAV,EAAyB;YACxB,CAACf,oBAAD,IAAyB,gBAAgBjS,OAAzC,IAAoDoF,SAAS,CAAC0M,OAAO,CAACgB,QAAT,GAAoB;AACnF1H,UAAAA,QAAQ,CAACgH,6BAA6B,CAAC,cAAD,EAAiB,QAAjB,CAA9B,CAARhH;;;eAGKsH,YAAY,CAACnT,IAAbmT,CAAkB,IAAlBA,EAAwBK,OAAxBL,EAAiCM,aAAjCN;;;AAN0B,KAAD,CAX/B;AAqBLC,IAAAA,WAAW,EAAEd,sBAAsB,CAAC;AAClCvQ,MAAAA,KAAK,CAACuR,MAAD,EAAS;YACR,CAACZ,oBAAD,IAAyB,gBAAgBjS,OAAzC,IAAoDoF,SAAS,CAAC0M,OAAO,CAACgB,QAAT,GAAoB;AACnF1H,UAAAA,QAAQ,CAACgH,6BAA6B,CAAC,aAAD,EAAgB,QAAhB,CAA9B,CAARhH;;;eAGKuH,WAAW,CAACpT,IAAZoT,CAAiB,IAAjBA,EAAuBE,MAAvBF;;;AANyB,KAAD,CArB9B;AA+BLC,IAAAA,YAAY,EAAEf,sBAAsB,CAAC;AACnCvQ,MAAAA,KAAK,CAAC2R,QAAD,EAAWC,QAAX,EAAqB;YACpB,gBAAgBlT,OAAhB,IAA2BoF,SAAS,CAAC0M,OAAO,CAACgB,QAAT,GAAoB;AAC1D1H,UAAAA,QAAQ,CAACgH,6BAA6B,CAAC,cAAD,EAAiB,QAAjB,CAA9B,CAARhH;;;eAGKwH,YAAY,CAACrT,IAAbqT,CAAkB,IAAlBA,EAAwBK,QAAxBL,EAAkCM,QAAlCN;;;AAN0B,KAAD,CA/B/B;AAyCLO,IAAAA,SAAS,EAAEnB,0BAA0B,CAAC;AACpC7Q,MAAAA,GAAG,GAAG;eACGqR,2BAA2B,CAACrR,GAA5BqR,CAAgCjT,IAAhCiT,CAAqC,IAArCA;AAF2B,OAAA;;AAKpCpR,MAAAA,GAAG,CAACE,KAAD,EAAQ;YACL,CAAC2Q,oBAAD,IAAyB,gBAAgBjS,OAAzC,IAAoDoF,SAAS,CAAC0M,OAAO,CAACgB,QAAT,GAAoB;AACnF1H,UAAAA,QAAQ,CAACgH,6BAA6B,CAAC,WAAD,EAAc,UAAd,CAA9B,CAARhH;;;AAGFoH,QAAAA,2BAA2B,CAACpR,GAA5BoR,CAAgCjT,IAAhCiT,CAAqC,IAArCA,EAA2ClR,KAA3CkR;;;AAVkC,KAAD,CAzChC;AAuDLY,IAAAA,WAAW,EAAEpB,0BAA0B,CAAC;AACtC7Q,MAAAA,GAAG,GAAG;eACGoR,6BAA6B,CAACpR,GAA9BoR,CAAkChT,IAAlCgT,CAAuC,IAAvCA;AAF6B,OAAA;;AAKtCnR,MAAAA,GAAG,CAACE,KAAD,EAAQ;YACL,gBAAgBtB,OAAhB,IAA2BoF,SAAS,CAAC0M,OAAO,CAACgB,QAAT,GAAoB;AAC1D1H,UAAAA,QAAQ,CAACgH,6BAA6B,CAAC,aAAD,EAAgB,UAAhB,CAA9B,CAARhH;;;AAGFmH,QAAAA,6BAA6B,CAACnR,GAA9BmR,CAAkChT,IAAlCgT,CAAuC,IAAvCA,EAA6CjR,KAA7CiR;;;AAVoC,KAAD;AAvDlC;;;AAwET,SAASc,iCAAT,CAA2CpS,GAA3C,EAAgD6Q,OAAhD,EAAyD;;QAMjDwB,WAAW,GAAGjB,8BAA8B,CAACpR,GAAD,EAAM6Q,OAAN;QAC5CyB,2BAA2B,GAAG3N,qBAAqB,CAAC3E,GAAD,EAAM,WAAN;QACnDuS,2BAA2B,GAAG5N,qBAAqB,CAAC3E,GAAD,EAAM,WAAN;AACzD4B,EAAAA,MAAM,CAACyQ,WAAD,EAAc;AAClBG,IAAAA,SAAS,EAAEzB,0BAA0B,CAAC;AACpC7Q,MAAAA,GAAG,GAAG;eACGoS,2BAA2B,CAACpS,GAA5BoS,CAAgChU,IAAhCgU,CAAqC,IAArCA;AAF2B,OAAA;;AAKpCnS,MAAAA,GAAG,CAACE,KAAD,EAAQ;YACL8D,SAAS,CAAC0M,OAAO,CAACgB,QAAT,GAAoB;AAC/B1H,UAAAA,QAAQ,CAACgH,6BAA6B,CAAC,WAAD,EAAc,UAAd,CAA9B,EAAyDlD,wBAAwB,CAAC,IAAD,CAAjF,CAAR9D;;;eAGKmI,2BAA2B,CAACnS,GAA5BmS,CAAgChU,IAAhCgU,CAAqC,IAArCA,EAA2CjS,KAA3CiS;;;AAV2B,KAAD,CADnB;AAelBG,IAAAA,SAAS,EAAE1B,0BAA0B,CAAC;AACpC7Q,MAAAA,GAAG,GAAG;eACGqS,2BAA2B,CAACrS,GAA5BqS,CAAgCjU,IAAhCiU,CAAqC,IAArCA;AAF2B,OAAA;;AAKpCpS,MAAAA,GAAG,CAACuS,MAAD,EAAS;cACJ,IAAInJ,SAAJ,+CAAA;;;AAN4B,KAAD;AAfnB,GAAd,CAAN3H;SA0BOyQ;;;AAGT,SAASM,oCAAT,CAA8CC,EAA9C,EAAkD/B,OAAlD,EAA2D;;;;;QASnDgC,qBAAqB,GAAGD,EAAE,CAACE;QAC3BC,wBAAwB,GAAGH,EAAE,CAACI;QAC9BC,wBAAwB,GAAGL,EAAE,CAACzH;QAC9BkH,WAAW,GAAGjB,8BAA8B,CAACwB,EAAD,EAAK/B,OAAL;QAC5CyB,2BAA2B,GAAG3N,qBAAqB,CAACiO,EAAD,EAAK,WAAL;QACnDtB,6BAA6B,GAAG3M,qBAAqB,CAACiO,EAAD,EAAK,aAAL;AAC3DhR,EAAAA,MAAM,CAACyQ,WAAD,EAAc;AAClBG,IAAAA,SAAS,EAAEzB,0BAA0B,CAAC;AACpC7Q,MAAAA,GAAG,GAAG;eACGoS,2BAA2B,CAACpS,GAA5BoS,CAAgChU,IAAhCgU,CAAqC,IAArCA;AAF2B,OAAA;;AAKpCnS,MAAAA,GAAG,CAACuS,MAAD,EAAS;cACJ,IAAInJ,SAAJ,kDAAA;;;AAN4B,KAAD,CADnB;AAWlB4I,IAAAA,WAAW,EAAEpB,0BAA0B,CAAC;AACtC7Q,MAAAA,GAAG,GAAG;eACGoR,6BAA6B,CAACpR,GAA9BoR,CAAkChT,IAAlCgT,CAAuC,IAAvCA;AAF6B,OAAA;;AAKtCnR,MAAAA,GAAG,CAACuS,MAAD,EAAS;cACJ,IAAInJ,SAAJ,oDAAA;;;AAN8B,KAAD,CAXrB;AAqBlB4B,IAAAA,gBAAgB,EAAEyF,sBAAsB,CAAC;AACvCvQ,MAAAA,KAAK,CAACqK,IAAD,EAAOO,QAAP,EAAiB4F,OAAjB,EAA0B;cACvBqC,eAAe,GAAGC,kBAAkB;AAC1C1R,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC2R,gBAAlB3R,KAAuCyR,oEAAoEzO,QAAQ,CAACmO,EAAD,sCAAyClI,QAA5JjJ;AACAA,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4R,kBAAlB5R,8BAAkEyR,oDAAoDzO,QAAQ,CAACmO,EAAD,sCAAyClI,QAAvKjJ,EAH6B;;;YAMzB,CAACsC,WAAW,CAAC8M,OAAD,GAAW;AACzB1G,UAAAA,QAAQ,CAAC,mFAAD,EAAsF8D,wBAAwB,CAAC,IAAD,CAA9G,CAAR9D;AAP2B,SAAA;;;;eAYtB8I,wBAAwB,CAACtU,KAAzBsU,CAA+B,IAA/BA,EAAqC1U,SAArC0U;;;AAb8B,KAAD,CArBtB;AAsClBH,IAAAA,aAAa,EAAElC,sBAAsB,CAAC;AACpCvQ,MAAAA,KAAK,GAAG;cACAqJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1B7R,QAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,iFAAwC,yBAAuGiI,8CAA/IjI,EAFM;;;eAKCoR,qBAAqB,CAAClU,KAAtBkU,CAA4B,IAA5BA,EAAkCtU,SAAlCsU;;;AAN2B,KAAD,CAtCnB;AAgDlBG,IAAAA,gBAAgB,EAAEpC,sBAAsB,CAAC;AACvCvQ,MAAAA,KAAK,GAAG;cACAqJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1B7R,QAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,oFAAwC,0BAA2GiI,8CAAnJjI,EAFM;;;eAKCsR,wBAAwB,CAACpU,KAAzBoU,CAA+B,IAA/BA,EAAqCxU,SAArCwU;;;AAN8B,KAAD;AAhDtB,GAAd,CAANnR;QA2DM4R,wBAAwB,GAAG;AAC/BC,IAAAA,SAAS,EAAE,CADoB;AAE/BC,IAAAA,cAAc,EAAE,CAFe;AAG/BC,IAAAA,YAAY,EAAE,CAHiB;AAI/BC,IAAAA,iBAAiB,EAAE,CAJY;AAK/BC,IAAAA,aAAa,EAAE;AALgB;AAOjCnR,EAAAA,OAAO,CAACpE,IAARoE,CAAaX,mBAAmB,CAACyR,wBAAD,CAAhC9Q,EAA4DoR,UAAU,IAAI;UAClEhT,UAAU,GAAGiQ,0BAA0B,CAAC;AAC5C7Q,MAAAA,GAAG,GAAG;cACE,IAAImB,KAAJ,uBAAgCyS,4BAAhC;;;AAFoC,KAAD;AAM7CzB,IAAAA,WAAW,CAACyB,UAAD,CAAXzB,GAA0BvR,UAA1BuR;AAPF,GAAA3P;SASO2P;;AAET;;;AAGA,SAAS0B,uCAAT,CAAiD/T,GAAjD,EAAsD6Q,OAAtD,EAA+D;;QAMvDwB,WAAW,GAAGjB,8BAA8B,CAACpR,GAAD,EAAM6Q,OAAN;QAC5CoC,wBAAwB,GAAGjT,GAAG,CAACmL;QAC/BmH,2BAA2B,GAAG3N,qBAAqB,CAAC3E,GAAD,EAAM,WAAN;QACnDuS,2BAA2B,GAAG5N,qBAAqB,CAAC3E,GAAD,EAAM,WAAN;QACnDsR,6BAA6B,GAAG3M,qBAAqB,CAAC3E,GAAD,EAAM,aAAN;SACpD4B,MAAM,CAACyQ,WAAD,EAAc;AACzBG,IAAAA,SAAS,EAAEzB,0BAA0B,CAAC;AACpC7Q,MAAAA,GAAG,GAAG;eACGoS,2BAA2B,CAACpS,GAA5BoS,CAAgChU,IAAhCgU,CAAqC,IAArCA;AAF2B,OAAA;;AAKpCnS,MAAAA,GAAG,CAACuS,MAAD,EAAS;cACJ,IAAInJ,SAAJ,mDAAA;;;AAN4B,KAAD,CADZ;AAWzBkJ,IAAAA,SAAS,EAAE1B,0BAA0B,CAAC;AACpC7Q,MAAAA,GAAG,GAAG;eACGqS,2BAA2B,CAACrS,GAA5BqS,CAAgCjU,IAAhCiU,CAAqC,IAArCA;AAF2B,OAAA;;AAKpCpS,MAAAA,GAAG,CAACuS,MAAD,EAAS;cACJ,IAAInJ,SAAJ,mDAAA;;;AAN4B,KAAD,CAXZ;AAqBzB4I,IAAAA,WAAW,EAAEpB,0BAA0B,CAAC;AACtC7Q,MAAAA,GAAG,GAAG;eACGoR,6BAA6B,CAACpR,GAA9BoR,CAAkChT,IAAlCgT,CAAuC,IAAvCA;AAF6B,OAAA;;AAKtCnR,MAAAA,GAAG,CAACuS,MAAD,EAAS;cACJ,IAAInJ,SAAJ,qDAAA;;;AAN8B,KAAD,CArBd;AA+BzB4B,IAAAA,gBAAgB,EAAEyF,sBAAsB,CAAC;AACvCvQ,MAAAA,KAAK,CAACqK,IAAD,EAAOO,QAAP,EAAiB4F,OAAjB,EAA0B;cACvBqC,eAAe,GAAGC,kBAAkB;AAC1C1R,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC2R,gBAAlB3R,KAAuCyR,oEAAoEzO,QAAQ,CAAC,IAAD,sCAA2CiG,QAA9JjJ;AACAA,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4R,kBAAlB5R,8BAAkEyR,oDAAoDzO,QAAQ,CAACzE,GAAD,sCAA0C0K,QAAxKjJ,EAH6B;;;YAMzB,CAACsC,WAAW,CAAC8M,OAAD,GAAW;AACzB1G,UAAAA,QAAQ,CAAC,mFAAD,EAAsF8D,wBAAwB,CAAC,IAAD,CAA9G,CAAR9D;AAP2B,SAAA;;;;eAYtB8I,wBAAwB,CAACtU,KAAzBsU,CAA+B,IAA/BA,EAAqC1U,SAArC0U;;;AAb8B,KAAD;AA/Bf,GAAd;;;AAmDf,SAASe,mCAAT,GAA+C;;SAMtC;AACLrK,IAAAA,OAAO,EAAEoH,0BAA0B,CAAC;AAClC7Q,MAAAA,GAAG,GAAG;cACE,IAAImB,KAAJ,gFAAW,kFAAA,oDAAX;AAF0B,OAAA;;AAKlCX,MAAAA,YAAY,EAAE,IALoB;AAMlCC,MAAAA,UAAU,EAAE;AANsB,KAAD;AAD9B;;;AAYT,SAASsT,mDAAT,CAA6DC,KAA7D,EAAoE;;QAM5DC,qBAAqB,GAAGD,KAAK,CAACL;QAC9BO,yBAAyB,GAAGtV,wBAAwB,CAACoV,KAAD,EAAQ,aAAR,CAAxBpV,CAA+CoB;QAC3EmS,WAAW,GAAG;AAClBwB,IAAAA,aAAa,EAAEjD,sBAAsB,CAAC;AACpCvQ,MAAAA,KAAK,CAACmK,KAAD,EAAQ;cACLd,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1B7R,QAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,mFAAwC,mBAAmGgI,eAAe,CAACC,EAAD,yCAA1JjI;;YAEI,CAACwC,MAAM,CAACuG,KAAD,CAAP,IAAkBnG,UAAU,CAACmG,KAAD,GAAS;gBACjC;AACJE,YAAAA;AADI,cAEFF;;cAEA,CAAC,oBAAoB6J,IAApB,CAAyB3J,IAAzB,GAAgC;AACnCP,YAAAA,QAAQ,wBAAwBO,+BAA+BjB,eAAe,CAACC,EAAD,IAApE,+EAAA,uCAAF,EAAqMA,EAArM,CAARS;;AAVO,SAAA;;;;eAgBJgK,qBAAqB,CAACxV,KAAtBwV,CAA4B,IAA5BA,EAAkC5V,SAAlC4V;;;AAjB2B,KAAD,CADnB;AAsBlBG,IAAAA,WAAW,EAAEvD,0BAA0B,CAAC;AACtC7Q,MAAAA,GAAG,GAAG;cACEwJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;cACpBiB,YAAY,GAAG9K,eAAe,CAACC,EAAD;AACpCjI,QAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,uFAAwC,eAAmG8S,wCAAnG,+EAAxC9S;AACAA,QAAAA,MAAM,CAACF,OAAPE,CAAe+S,iBAAiB,CAAC9K,EAAD,CAAhCjI,oFAAuC,eAAgG8S,8CAAvI9S;AACAA,QAAAA,MAAM,CAACF,OAAPE,CAAegT,0BAA0B,CAAC/K,EAAD,CAAzCjI,qFAAgD,eAAiG8S,8CAAjJ9S;eACO2S,yBAAyB,CAAC9V,IAA1B8V,CAA+B,IAA/BA;;;AAP6B,KAAD;AAtBrB;AAkCpB1R,EAAAA,OAAO,CAACpE,IAARoE,CAAaX,mBAAmB,CAAC6D,oBAAD,CAAhClD,EAAwD7D,QAAQ,IAAI;QAC9DA,QAAQ,IAAIqV,OAAO;aAAA;;;AAIvB7B,IAAAA,WAAW,CAACxT,QAAD,CAAXwT,GAAwBtB,0BAA0B,CAAC;AACjD7Q,MAAAA,GAAG,GAAG;cACE;AACJgG,UAAAA,KADI;AAEJJ,UAAAA;AAFI,YAGFF,oBAAoB,CAAC/G,QAAD;cAClBuC,GAAG,GAAG;AACZA,QAAAA,GAAG,CAAC4B,IAAJ5B,wCAAgDvC,wBAAhDuC;;YAEI8E,OAAO;AACT9E,UAAAA,GAAG,CAAC4B,IAAJ5B,CAAS8E,KAAT9E;AADF,eAEO,IAAI0E,SAAJ,EAAe;AACpB1E,UAAAA,GAAG,CAAC4B,IAAJ5B,+CAAuD0E,gBAAvD1E;;;AAGF+I,QAAAA,QAAQ,CAAC/I,GAAG,CAACyB,IAAJzB,CAAS,IAATA,CAAD,EAAiBkS,eAAe,CAAC,IAAD,CAAhC,CAARnJ;AAf+C,OAAA;;AAkBjDhK,MAAAA,GAAG,GAAG;cACE;AACJ6F,UAAAA;AADI,YAEFJ,oBAAoB,CAAC/G,QAAD;;YAEpBmH,UAAU;AACZmE,UAAAA,QAAQ,+BAA+BtL,0BAA/B,EAA2DyU,eAAe,CAAC,IAAD,CAA1E,CAARnJ;;;;AAxB6C,KAAD,CAAlDkI;AALF,GAAA3P;SAmCO2P;;;AAGT,SAASqC,iBAAT,CAA2BrD,IAA3B,EAAiC;;AAM/BA,EAAAA,IAAI,CAACsD,cAALtD,GAAsB,IAAtBA;;;AAEF,SAASuD,4BAAT,CAAsC5U,GAAtC,EAA2C6Q,OAA3C,EAAoD;AAClD/O,EAAAA,gBAAgB,CAAC9B,GAAD,EAAMoS,iCAAiC,CAACpS,GAAD,EAAM6Q,OAAN,CAAvC,CAAhB/O;;AAEF;;;AAEA,SAAS+S,+BAAT,CAAyCjC,EAAzC,EAA6C/B,OAA7C,EAAsD;AACpD/O,EAAAA,gBAAgB,CAAC8Q,EAAD,EAAKD,oCAAoC,CAACC,EAAD,EAAK/B,OAAL,CAAzC,CAAhB/O;;;AAEF,SAASgT,kCAAT,CAA4C9U,GAA5C,EAAiD6Q,OAAjD,EAA0D;QAClDkE,uBAAuB,GAAGhB,uCAAuC,CAAC/T,GAAD,EAAM6Q,OAAN;QACjEmE,QAAQ,GAAGhT,cAAc,CAAChC,GAAD;AAC/BoC,EAAAA,cAAc,CAACpC,GAAD,EAAM6B,MAAM,CAACmT,QAAD,EAAWD,uBAAX,CAAZ,CAAd3S;;;AAEF,SAAS6S,8BAAT,CAAwCC,GAAxC,EAA6C;AAC3CpT,EAAAA,gBAAgB,CAACoT,GAAD,EAAMlB,mCAAmC,EAAzC,CAAhBlS;;;AAEF,SAASqT,8CAAT,CAAwDjB,KAAxD,EAA+D;AAC7DpS,EAAAA,gBAAgB,CAACoS,KAAD,EAAQD,mDAAmD,CAACC,KAAD,CAA3D,CAAhBpS;;AAGF;;;;;;;;AAOA,MAAMsT,IAAI,GAAG,MAAM,KAAK,CAAxB;;AAEA,SAASC,wBAAT,CAAkCrV,GAAlC,EAAuC;AACrCA,EAAAA,GAAG,CAACsV,WAAJtV,GAAkB,IAAlBA;;;AAGF,SAASuV,qBAAT,CAA+BvV,GAA/B,EAAoCwV,KAApC,EAA2C;AACzCxV,EAAAA,GAAG,CAACyV,aAAJzV,GAAoBwV,KAApBxV;;;AAGF,SAAS0V,cAAT,CAAwB1K,QAAxB,EAAkCP,KAAlC,EAAyC;QACjC;AACJkL,IAAAA;AADI,MAEFlL;;MAEAO,QAAQ,CAAC2K,IAAT3K,KAAkB2K,MAAM;IACiB;AACzC1E,MAAAA,iBAAiB;;;;;;;AAOnBxG,IAAAA,KAAK,CAACzK,GAANyK,CAAUyH,SAAVzH,GAAsBkL,IAAtBlL;;IAE2C;AACzCyG,MAAAA,eAAe;;;;;AAIrB,SAAS0E,cAAT,CAAwBnL,KAAxB,EAA+BoL,UAA/B,EAA2C9D,aAA3C,EAA0D;EACb;AACzCd,IAAAA,iBAAiB;;;AAGnB4E,EAAAA,UAAU,CAACpE,YAAXoE,CAAwBpL,KAAK,CAACzK,GAA9B6V,EAAmC9D,aAAnC8D;;EAE2C;AACzC3E,IAAAA,eAAe;;;;AAGnB,SAAS4E,cAAT,CAAwBrL,KAAxB,EAA+BoL,UAA/B,EAA2C;EACE;AACzC5E,IAAAA,iBAAiB;;;AAGnB4E,EAAAA,UAAU,CAACnE,WAAXmE,CAAuBpL,KAAK,CAACzK,GAA7B6V;;EAE2C;AACzC3E,IAAAA,eAAe;;;;AAGnB,SAAS6E,aAAT,CAAuBtL,KAAvB,EAA8B;AAC5BW,EAAAA,SAAS,CAACvJ,MAAVuJ,CAAiBX,KAAjBW,EAD4B;;;;AAK5BW,EAAAA,QAAQ,CAAClK,MAATkK,CAAgBtB,KAAhBsB;AACAO,EAAAA,QAAQ,CAACzK,MAATyK,CAAgB7B,KAAhB6B;AACAqB,EAAAA,kBAAkB,CAAC9L,MAAnB8L,CAA0BlD,KAA1BkD;AACAG,EAAAA,cAAc,CAACjM,MAAfiM,CAAsBrD,KAAtBqD;AACAX,EAAAA,oBAAoB,CAACtL,MAArBsL,CAA4B1C,KAA5B0C;AACAK,EAAAA,gBAAgB,CAAC3L,MAAjB2L,CAAwB/C,KAAxB+C;AACAU,EAAAA,aAAa,CAACrM,MAAdqM,CAAqBzD,KAArByD;;;AAEF,IAAI8H,UAAJ;;AAEA,CAAC,UAAUA,UAAV,EAAsB;AACrBA,EAAAA,UAAU,CAAC,QAAD,CAAVA,GAAuB,QAAvBA;AADF,CAAA,EAEGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAFb;;AAIA,SAASC,eAAT,CAAyBxL,KAAzB,EAAgC;QACxB;AACJV,IAAAA;AADI,MAEFU;QACEzK,GAAG,GAAGyK,KAAK,CAACzK;;MAEdkE,QAAQ,CAACsF,kBAAD,GAAsB;UAC1B;AACJmB,MAAAA,IAAI,EAAE;AACJqD,QAAAA;AADI;AADF,QAIFvD;UACE;AACJyL,MAAAA;AADI,QAEFnM,KAAK,CAACiE;;QAEN,CAACjK,WAAW,CAACiK,OAAD,CAAZ,IAAyB,CAACjK,WAAW,CAACiK,OAAO,CAACmI,GAAT,CAArC,IAAsDnI,OAAO,CAACmI,GAARnI,CAAYoI,GAAZpI,KAAoBgI,UAAU,CAACK,QAAQ;;AAE/FhB,MAAAA,wBAAwB,CAACrV,GAAD,CAAxBqV;AAZ8B,KAAA;;;;AAiBhCE,IAAAA,qBAAqB,CAACvV,GAAD,EAAMkW,eAAN,CAArBX;;;EAGyC;UACnC;AACJ5K,MAAAA,IAAI,EAAE;AACJqD,QAAAA;AADI;AADF,QAIFvD;UACEoH,QAAQ,GAAG,CAAC9N,WAAW,CAACiK,OAAD,CAAZ,IAAyB,CAACjK,WAAW,CAACiK,OAAO,CAACmI,GAAT,CAArC,IAAsDnI,OAAO,CAACmI,GAARnI,CAAYoI,GAAZpI,KAAoBgI,UAAU,CAACK;AACtGzB,IAAAA,4BAA4B,CAAC5U,GAAD,EAAM;AAChC6R,MAAAA;AADgC,KAAN,CAA5B+C;;;;AAKJ,SAAS0B,aAAT,CAAuBtL,QAAvB,EAAiCP,KAAjC,EAAwC;;;;AAItCsB,EAAAA,QAAQ,CAACV,MAATU,CAAgBf,QAAhBe,EAA0BtB,KAA1BsB;AACAO,EAAAA,QAAQ,CAACjB,MAATiB,CAAgBtB,QAAhBsB,EAA0B7B,KAA1B6B;AACAa,EAAAA,oBAAoB,CAAC9B,MAArB8B,CAA4BnC,QAA5BmC,EAAsC1C,KAAtC0C;AACAK,EAAAA,gBAAgB,CAACnC,MAAjBmC,CAAwBxC,QAAxBwC,EAAkC/C,KAAlC+C;;;AAEF,SAAS+I,mBAAT,CAA6B9L,KAA7B,EAAoC;QAC5Bf,EAAE,GAAG4J,eAAe,CAAC7I,KAAK,CAACzK,GAAP;AAC1BwW,EAAAA,QAAQ,CAAC9M,EAAD,CAAR8M;;;AAEF,SAASC,kBAAT,CAA4BzL,QAA5B,EAAsCP,KAAtC,EAA6C;QACrC;AACJiE,IAAAA,QADI;AAEJ3E,IAAAA;AAFI,MAGFU;QACEnB,EAAE,GAAGoN,kBAAkB,CAAChI,QAAD,CAAlBgI,GAA+BnH,qBAA/BmH,GAAuDjG;AAClEkG,EAAAA,yBAAyB,CAAC5M,KAAD,EAAQA,KAAK,CAACA,KAAd,EAAqBqL,IAArB,EAA2B,MAAM;AACxD9L,IAAAA,EAAE,CAACmB,KAAK,CAACzK,GAAP,EAAYgL,QAAQ,CAAC0D,QAArB,EAA+BA,QAA/B,CAAFpF;AADuB,GAAA,EAEtB8L,IAFsB,CAAzBuB;;;AAIF,SAASC,oBAAT,CAA8BnM,KAA9B,EAAqC;QAC7Bf,EAAE,GAAG4J,eAAe,CAAC7I,KAAK,CAACzK,GAAP;QACpB;AACJ0O,IAAAA;AADI,MAEFjE;AACJf,EAAAA,EAAE,CAACmN,SAAHnN,GAAegF,QAAfhF;;MAEIxF,QAAQ,CAACsF,kBAAD,GAAsB;;AAEhCsN,IAAAA,cAAc,CAACpN,EAAD,EAAKgF,QAAL,CAAdoI,CAFgC;;AAIhCrM,IAAAA,KAAK,CAACiE,QAANjE,GAAiB7B,UAAjB6B;;;;AAGJ,SAASsM,mBAAT,CAA6BtM,KAA7B,EAAoC;QAC5BzK,GAAG,GAAGyK,KAAK,CAACzK;;MAEd,CAAC+D,WAAW,CAACkK,wBAAwB,CAACjO,GAAD,CAAzB,GAAiC;;;;;;;QAO3C;AACJgX,IAAAA,IADI;AAEJC,IAAAA,IAFI;AAGJlN,IAAAA;AAHI,MAIFU;QACEyM,GAAG,GAAGC,eAAe,CAACF,IAAD;AAC3BG,EAAAA,eAAe,CAACpX,GAAD,EAAMkX,GAAN,CAAfE;;MAEIlT,QAAQ,CAACsF,kBAAD,GAAsB;UAC1B;AACJ0M,MAAAA;AADI,QAEFnM,KAAK,CAACiE,QAHsB;;;AAMhCuH,IAAAA,qBAAqB,CAACvV,GAAD,EAAMkW,eAAN,CAArBX;;;AAGF8B,EAAAA,QAAQ,CAACrX,GAAD,EAAMiX,IAAN,EAAY;AAClBD,IAAAA,IADkB;AAElBjN,IAAAA;AAFkB,GAAZ,CAARsN;;EAK2C;AACzC5V,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAACoI,KAAK,CAACiE,QAAP,CAAvBjN,sEAAAA;;;EAGyC;AACzCqT,IAAAA,kCAAkC,CAAC9U,GAAD,EAAM2I,WAAN,CAAlCmM;;;;AAGJ,SAASwC,mBAAT,CAA6B7M,KAA7B,EAAoC;AAClCW,EAAAA,SAAS,CAACvJ,MAAVuJ,CAAiBX,KAAjBW,EADkC;;;;AAKlCW,EAAAA,QAAQ,CAAClK,MAATkK,CAAgBtB,KAAhBsB;AACAO,EAAAA,QAAQ,CAACzK,MAATyK,CAAgB7B,KAAhB6B;AACAqB,EAAAA,kBAAkB,CAAC9L,MAAnB8L,CAA0BlD,KAA1BkD;AACAG,EAAAA,cAAc,CAACjM,MAAfiM,CAAsBrD,KAAtBqD;AACAX,EAAAA,oBAAoB,CAACtL,MAArBsL,CAA4B1C,KAA5B0C;AACAK,EAAAA,gBAAgB,CAAC3L,MAAjB2L,CAAwB/C,KAAxB+C;AACAU,EAAAA,aAAa,CAACrM,MAAdqM,CAAqBzD,KAArByD;;;AAEF,SAASqJ,kBAAT,CAA4B9M,KAA5B,EAAmC;QAC3B;AACJzK,IAAAA,GADI;AAEJ0O,IAAAA;AAFI,MAGFjE;;OAEC,IAAIoE,CAAC,GAAG,GAAGA,CAAC,GAAGH,QAAQ,CAAC5R,QAAQ,EAAE+R,GAAG;UAClCC,EAAE,GAAGJ,QAAQ,CAACG,CAAD;;QAEfC,EAAE,IAAI,MAAM;AACdA,MAAAA,EAAE,CAACM,IAAHN,CAAQjN,MAARiN,CAAeA,EAAfA;AACAA,MAAAA,EAAE,CAACM,IAAHN,CAAQO,MAARP,CAAeA,EAAfA,EAAmB9O,GAAnB8O,EAAwB,IAAxBA;;;;;AAIN,SAAS0I,qBAAT,CAA+B/M,KAA/B,EAAsC;QAC9Bf,EAAE,GAAG4J,eAAe,CAAC7I,KAAK,CAACzK,GAAP;;EAEiB;AACzCyB,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAACoI,KAAK,CAACiE,QAAP,CAAvBjN,sEAAAA;;;AAGFgW,EAAAA,UAAU,CAAC/N,EAAD,CAAV+N;;;AAEF,SAASC,mBAAT,CAA6B1M,QAA7B,EAAuCP,KAAvC,EAA8C;;;;AAI5CsB,EAAAA,QAAQ,CAACV,MAATU,CAAgBf,QAAhBe,EAA0BtB,KAA1BsB;AACAO,EAAAA,QAAQ,CAACjB,MAATiB,CAAgBtB,QAAhBsB,EAA0B7B,KAA1B6B;AACAa,EAAAA,oBAAoB,CAAC9B,MAArB8B,CAA4BnC,QAA5BmC,EAAsC1C,KAAtC0C;AACAK,EAAAA,gBAAgB,CAACnC,MAAjBmC,CAAwBxC,QAAxBwC,EAAkC/C,KAAlC+C;;;AAEF,SAASmK,aAAT,CAAuBlN,KAAvB,EAA8B;;;;QAItB;AACJiE,IAAAA,QADI;AAEJ1O,IAAAA;AAFI,MAGFyK;;OAEC,IAAIoE,CAAC,GAAG,CAAR,EAAW3N,GAAG,GAAGwN,QAAQ,CAAC5R,QAAQ+R,CAAC,GAAG3N,KAAK,EAAE2N,GAAG;UAC7CC,EAAE,GAAGJ,QAAQ,CAACG,CAAD;;QAEf,CAAC5K,MAAM,CAAC6K,EAAD,GAAM;AACfA,MAAAA,EAAE,CAACM,IAAHN,CAAQ9B,MAAR8B,CAAeA,EAAfA,EAAmB9O,GAAnB8O;;;;;AAIN,SAAS8I,mBAAT,CAA6BnN,KAA7B,EAAoC;;;AAGlCoN,EAAAA,QAAQ,CAACvE,eAAe,CAAC7I,KAAK,CAACzK,GAAP,CAAhB,CAAR6X;;;;AAGF,MAAMC,aAAa,GAAG,IAAItY,OAAJ,EAAtB;AACA;;AAEA,SAASuY,qBAAT,CAA+BrJ,QAA/B,EAAyC;AACvCoJ,EAAAA,aAAa,CAAC3X,GAAd2X,CAAkBpJ,QAAlBoJ,EAA4B,CAA5BA;;;AAEF,SAASpB,kBAAT,CAA4BhI,QAA5B,EAAsC;SAC7BoJ,aAAa,CAACE,GAAdF,CAAkBpJ,QAAlBoJ;;AAGT;;;;;;;;AAMA,MAAMG,QAAQ,GAAGpW,MAAM,CAAC,IAAD,CAAvB;;AA2BA,SAASqW,iBAAT,CAA2BxO,EAA3B,EAA+ByO,GAA/B,EAAoC;EACS;AACzC1W,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAAC8V,GAAD,CAAT9V,IAAkB8V,GAAG,CAACrb,MAAJqb,GAAa,CAA7C1W,+DAAAA;;;QAGI;AACJ2W,IAAAA,SADI;AAEJzN,IAAAA,IAFI;AAGJuM,IAAAA,GAHI;AAIJlJ,IAAAA;AAJI,MAKFtE;;OAEC,IAAIzI,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGiX,GAAG,CAACrb,QAAQmE,CAAC,GAAGC,KAAK,EAAED,GAAG;AAC9CkX,IAAAA,GAAG,CAAClX,CAAD,CAAHkX,CAAO7Z,IAAP6Z,CAAYra,SAAZqa,EAAuBC,SAAvBD,EAAkCxN,IAAlCwN,EAAwCjB,GAAxCiB,EAA6CnK,OAA7CmK;;;AAIJ;;;;;;;;AAMA,MAAME,MAAM,GAAG,GAAf;AACA,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,wBAAwB,GAAG,4BAAjC;AACA,MAAMC,cAAc,GAAGzb,MAAM,CAAC0b,QAA9B;AACA,MAAMC,QAAQ,GAAG;AACf9W,EAAAA,MAAM,EAAE4I,KAAK,IAAI;AACfA,IAAAA,KAAK,CAACzK,GAANyK,GAAYmO,QAAQ,CAACC,cAATD,CAAwBnO,KAAK,CAACkL,IAA9BiD,CAAZnO;AACAqO,IAAAA,gBAAgB,CAACrO,KAAD,CAAhBqO;;IAE2C;AACzCpE,MAAAA,iBAAiB,CAACjK,KAAK,CAACzK,GAAP,CAAjB0U;;AANW,GAAA;AASfrJ,EAAAA,MAAM,EAAEqK,cATO;AAUfrG,EAAAA,MAAM,EAAEuG,cAVO;AAWftF,EAAAA,IAAI,EAAEsF,cAXS;AAYf5I,EAAAA,MAAM,EAAE8I;AAZO,CAAjB;AAcA,MAAMiD,WAAW,GAAG;AAClBlX,EAAAA,MAAM,EAAE4I,KAAK,IAAI;AACfA,IAAAA,KAAK,CAACzK,GAANyK,GAAYmO,QAAQ,CAACI,aAATJ,CAAuBnO,KAAK,CAACkL,IAA7BiD,CAAZnO;AACAqO,IAAAA,gBAAgB,CAACrO,KAAD,CAAhBqO;;IAE2C;AACzCpE,MAAAA,iBAAiB,CAACjK,KAAK,CAACzK,GAAP,CAAjB0U;;AANc,GAAA;AASlBrJ,EAAAA,MAAM,EAAEqK,cATU;AAUlBrG,EAAAA,MAAM,EAAEuG,cAVU;AAWlBtF,EAAAA,IAAI,EAAEsF,cAXY;AAYlB5I,EAAAA,MAAM,EAAE8I;AAZU,CAApB;AAcA;AACA;AACA;AACA;;AAEA,MAAMmD,WAAW,GAAG;AAClBpX,EAAAA,MAAM,EAAE4I,KAAK,IAAI;UACT;AACJE,MAAAA,IADI;AAEJsB,MAAAA,GAFI;AAGJiN,MAAAA;AAHI,QAIFzO;UACE;AACJ0O,MAAAA;AADI,QAEFxO,KARW;;;QAWX5G,WAAW,CAACmV,aAAD,GAAiB;AAC9BzO,MAAAA,KAAK,CAACzK,GAANyK,GAAY1G,WAAW,CAACoV,EAAD,CAAXpV,GAAkB6U,QAAQ,CAACQ,aAATR,CAAuB3M,GAAvB2M,CAAlB7U,GAAgD6U,QAAQ,CAACS,eAATT,CAAyBO,EAAzBP,EAA6B3M,GAA7B2M,CAA5DnO;AADF,WAEO;AACLA,MAAAA,KAAK,CAACzK,GAANyK,GAAYyO,aAAZzO;;;AAGFqO,IAAAA,gBAAgB,CAACrO,KAAD,CAAhBqO;;IAE2C;AACzCpE,MAAAA,iBAAiB,CAACjK,KAAK,CAACzK,GAAP,CAAjB0U;;;AAGFuB,IAAAA,eAAe,CAACxL,KAAD,CAAfwL;AACAF,IAAAA,aAAa,CAACtL,KAAD,CAAbsL;AAzBgB,GAAA;AA2BlB1K,EAAAA,MAAM,EAAE,CAACL,QAAD,EAAWP,KAAX,KAAqB;AAC3B6L,IAAAA,aAAa,CAACtL,QAAD,EAAWP,KAAX,CAAb6L;AACAG,IAAAA,kBAAkB,CAACzL,QAAD,EAAWP,KAAX,CAAlBgM;AA7BgB,GAAA;AA+BlBpH,EAAAA,MAAM,EAAE,CAAC5E,KAAD,EAAQoL,UAAR,EAAoB9D,aAApB,KAAsC;AAC5C6D,IAAAA,cAAc,CAACnL,KAAD,EAAQoL,UAAR,EAAoB9D,aAApB,CAAd6D;AACA2B,IAAAA,kBAAkB,CAAC9M,KAAD,CAAlB8M;AAjCgB,GAAA;AAmClBjH,EAAAA,IAAI,EAAE,CAAC7F,KAAD,EAAQoL,UAAR,EAAoB9D,aAApB,KAAsC;AAC1C6D,IAAAA,cAAc,CAACnL,KAAD,EAAQoL,UAAR,EAAoB9D,aAApB,CAAd6D;AApCgB,GAAA;AAsClB5I,EAAAA,MAAM,EAAE,CAACvC,KAAD,EAAQoL,UAAR,KAAuB;AAC7BC,IAAAA,cAAc,CAACrL,KAAD,EAAQoL,UAAR,CAAdC;AACA6B,IAAAA,aAAa,CAAClN,KAAD,CAAbkN;;AAxCgB,CAApB;AA2CA,MAAM2B,iBAAiB,GAAG;AACxBzX,EAAAA,MAAM,EAAE4I,KAAK,IAAI;UACT;AACJwB,MAAAA;AADI,QAEFxB;AACJA,IAAAA,KAAK,CAACzK,GAANyK,GAAYmO,QAAQ,CAACQ,aAATR,CAAuB3M,GAAvB2M,CAAZnO;AACAqO,IAAAA,gBAAgB,CAACrO,KAAD,CAAhBqO;;IAE2C;AACzCpE,MAAAA,iBAAiB,CAACjK,KAAK,CAACzK,GAAP,CAAjB0U;;;AAGFqC,IAAAA,mBAAmB,CAACtM,KAAD,CAAnBsM;AACAH,IAAAA,oBAAoB,CAACnM,KAAD,CAApBmM;AACAU,IAAAA,mBAAmB,CAAC7M,KAAD,CAAnB6M;AAdsB,GAAA;AAgBxBjM,EAAAA,MAAM,EAAE,CAACL,QAAD,EAAWP,KAAX,KAAqB;AAC3BiN,IAAAA,mBAAmB,CAAC1M,QAAD,EAAWP,KAAX,CAAnBiN,CAD2B;;;AAI3Bd,IAAAA,oBAAoB,CAACnM,KAAD,CAApBmM,CAJ2B;;;AAO3BH,IAAAA,kBAAkB,CAACzL,QAAD,EAAWP,KAAX,CAAlBgM,CAP2B;;AAS3Be,IAAAA,qBAAqB,CAAC/M,KAAD,CAArB+M;AAzBsB,GAAA;AA2BxBnI,EAAAA,MAAM,EAAE,CAAC5E,KAAD,EAAQoL,UAAR,EAAoB9D,aAApB,KAAsC;AAC5C6D,IAAAA,cAAc,CAACnL,KAAD,EAAQoL,UAAR,EAAoB9D,aAApB,CAAd6D;UACMlM,EAAE,GAAG4J,eAAe,CAAC7I,KAAK,CAACzK,GAAP;;IAEiB;AACzCyB,MAAAA,MAAM,CAACH,MAAPG,CAAciI,EAAE,CAAC6P,KAAH7P,KAAa8P,OAAO,CAACC,OAAnChY,KAA+CiI,wBAA/CjI;;;AAGFiY,IAAAA,oBAAoB,CAAChQ,EAAD,CAApBgQ;AACAnC,IAAAA,kBAAkB,CAAC9M,KAAD,CAAlB8M;AACAhB,IAAAA,mBAAmB,CAAC9L,KAAD,CAAnB8L;AArCsB,GAAA;AAuCxBjG,EAAAA,IAAI,EAAE,CAAC7F,KAAD,EAAQoL,UAAR,EAAoB9D,aAApB,KAAsC;AAC1C6D,IAAAA,cAAc,CAACnL,KAAD,EAAQoL,UAAR,EAAoB9D,aAApB,CAAd6D;AAxCsB,GAAA;AA0CxB5I,EAAAA,MAAM,EAAE,CAACvC,KAAD,EAAQoL,UAAR,KAAuB;AAC7BC,IAAAA,cAAc,CAACrL,KAAD,EAAQoL,UAAR,CAAdC;AACA8B,IAAAA,mBAAmB,CAACnN,KAAD,CAAnBmN;;AA5CsB,CAA1B;;AAgDA,SAASkB,gBAAT,CAA0BrO,KAA1B,EAAiC;;AAE/BA,EAAAA,KAAK,CAACzK,GAANyK,CAAUkP,gBAAVlP,GAA6BA,KAAK,CAACV,KAANU,CAAYmP,OAAZnP,CAAoBkP,gBAAjDlP;;;;AAIF,SAASoP,KAAT,CAAepP,KAAf,EAAsB;QACd;AACJE,IAAAA,IADI;AAEJ+D,IAAAA,QAFI;AAGJzC,IAAAA;AAHI,MAIFxB;AACJE,EAAAA,IAAI,CAACwO,EAALxO,GAAU6N,wBAAV7N,CANoB;;MAQhBtI,SAAS,CAACqM,QAAD,CAATrM,IAAuB4J,GAAG,KAAK,iBAAiB;SAC7C,IAAI4C,CAAC,GAAG,CAAR,EAAW2B,CAAC,GAAG9B,QAAQ,CAAC5R,QAAQ+R,CAAC,GAAG2B,GAAG,EAAE3B,GAAG;YACzCiL,SAAS,GAAGpL,QAAQ,CAACG,CAAD;;UAEtBiL,SAAS,IAAI,IAAbA,IAAqBA,SAAS,CAAC1K,IAAV0K,KAAmBb,aAAa;AACvDY,QAAAA,KAAK,CAACC,SAAD,CAALD;;;;;;AAMR,SAASE,kBAAT,CAA4BtP,KAA5B,EAAmC;AACjCxH,EAAAA,SAAS,CAAC3E,IAAV2E,CAAekQ,kBAAkB,GAAG6G,SAApC/W,EAA+CwH,KAA/CxH;;;;AAIF,SAASgX,CAAT,CAAWhO,GAAX,EAAgBtB,IAAhB,EAAsB+D,QAAtB,EAAgC;QACxBwE,eAAe,GAAGC,kBAAkB;;EAEC;AACzC1R,IAAAA,MAAM,CAACH,MAAPG,CAAc6C,QAAQ,CAAC2H,GAAD,CAAtBxK,0CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAc4C,UAAU,CAACsG,IAAD,CAAxBlJ,4CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAACqM,QAAD,CAAvBjN,+CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAc,SAASkJ,IAAvBlJ,OAAkCwK,kDAAkDiH,mEAApFzR,EAJyC;;AAMzCA,IAAAA,MAAM,CAACF,OAAPE,CAAekJ,IAAI,CAAC1E,SAAL0E,IAAkBA,IAAI,CAAC+C,QAAtCjM,uEAAAA;AACAA,IAAAA,MAAM,CAACF,OAAPE,CAAekJ,IAAI,CAACkD,QAALlD,IAAiBA,IAAI,CAAC7D,KAArCrF,mEAAAA;;QAEIkJ,IAAI,CAAC7D,KAAL6D,IAAc,CAACrG,QAAQ,CAACqG,IAAI,CAAC7D,KAAN,GAAc;AACvCqD,MAAAA,QAAQ,yCAAyC8B,yDAAzC,EAAoGiH,eAApG,CAAR/I;;;AAGFzH,IAAAA,OAAO,CAACpE,IAARoE,CAAagM,QAAbhM,EAAuBwX,UAAU,IAAI;UAC/BA,UAAU,IAAI,MAAM;AACtBzY,QAAAA,MAAM,CAACH,MAAPG,CAAcyY,UAAU,IAAI,SAASA,UAAvBA,IAAqC,UAAUA,UAA/CA,IAA6D,cAAcA,UAA3EA,IAAyF,UAAUA,UAAnGA,IAAiH,SAASA,UAA1HA,IAAwI,SAASA,UAA/JzY,KAA8KyY,4BAA9KzY;;AAFJ,KAAAiB;;;QAOI;AACJuC,IAAAA;AADI,MAEF0F;MACAgL,MAAM3V;QACJyK,KAAK,GAAG;AACZwB,IAAAA,GADY;AAEZtB,IAAAA,IAFY;AAGZ+D,IAAAA,QAHY;AAIZiH,IAAAA,IAJY;AAKZ3V,IAAAA,GALY;AAMZiF,IAAAA,GANY;AAOZmK,IAAAA,IAAI,EAAE6J,WAPM;AAQZlP,IAAAA,KAAK,EAAEmJ;AARK;;MAWVjH,GAAG,CAACnP,MAAJmP,KAAe,CAAfA,IAAoBtI,gBAAgB,CAACrF,IAAjBqF,CAAsBsI,GAAtBtI,EAA2B,CAA3BA,MAAkC0U,MAAtDpM,IAAgEtI,gBAAgB,CAACrF,IAAjBqF,CAAsBsI,GAAtBtI,EAA2B,CAA3BA,MAAkC2U,MAAlGrM,IAA4GtI,gBAAgB,CAACrF,IAAjBqF,CAAsBsI,GAAtBtI,EAA2B,CAA3BA,MAAkC4U,QAAQ;AACxJsB,IAAAA,KAAK,CAACpP,KAAD,CAALoP;;;SAGKpP;;;;AAGT,SAAS0P,EAAT,CAAY9Z,KAAZ,EAAmB;;;;QAIX+Z,eAAe,GAAG/Z,KAAK,GAAG,CAARA,IAAa,EAAE6D,QAAQ,CAAC7D,KAAD,CAAR6D,IAAmBC,SAAS,CAAC9D,KAAD,CAA9B;;EAEM;UACnC6S,eAAe,GAAGC,kBAAkB;;QAEtCiH,iBAAiB;AACnBjQ,MAAAA,QAAQ,6BAA6B1F,QAAQ,CAACpE,KAAD,uBAA6B6S,yDAAlE,EAA6HA,eAA7H,CAAR/I;;;;SAIGiQ,eAAe,GAAG,CAAH,GAAO/Z;;;;AAG/B,SAAS+N,CAAT,CAAWiM,QAAX,EAAqB1P,IAArB,EAA2B+D,QAA3B,EAAqC4L,OAArC,EAA8C;EACD;AACzC7Y,IAAAA,MAAM,CAACH,MAAPG,CAAc6C,QAAQ,CAAC+V,QAAD,CAAtB5Y,+CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAc4C,UAAU,CAACsG,IAAD,CAAxBlJ,4CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAACqM,QAAD,CAAvBjN,+CAAAA;;;MAGE,CAACsC,WAAW,CAACuW,OAAD,CAAZ,IAAyB,CAACvW,WAAW,CAACuW,OAAO,CAACD,QAAD,CAAR,CAArC,IAA4DC,OAAO,CAACD,QAAD,CAAPC,CAAkBxd,MAAlBwd,KAA6B,GAAG;AAC9F5L,IAAAA,QAAQ,GAAG4L,OAAO,CAACD,QAAD,CAAlB3L;;;QAGIjE,KAAK,GAAGwP,CAAC,CAAC,MAAD,EAAStP,IAAT,EAAe+D,QAAf;;MAEXlF,oBAAoB;;AAEtB+Q,IAAAA,EAAE,CAAC7L,QAAD,CAAF6L;;;SAGK9P;;;;AAGT,SAAS+P,CAAT,CAAWvO,GAAX,EAAgBwO,IAAhB,EAAsB9P,IAAtB,EAA4B+D,QAAQ,GAAG9F,UAAvC,EAAmD;MAC7CQ,0BAA0B,CAACqR,IAAD,GAAQ;AACpCA,IAAAA,IAAI,GAAGpR,+BAA+B,CAACoR,IAAD,CAAtCA;;;QAGIvH,eAAe,GAAGC,kBAAkB;;EAEC;AACzC1R,IAAAA,MAAM,CAACH,MAAPG,CAAc6C,QAAQ,CAAC2H,GAAD,CAAtBxK,0CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAc2C,UAAU,CAACqW,IAAD,CAAxBhZ,6CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAc4C,UAAU,CAACsG,IAAD,CAAxBlJ,4CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAclD,SAAS,CAACzB,MAAVyB,KAAqB,CAArBA,IAA0B8D,SAAS,CAACqM,QAAD,CAAjDjN,2CAAAA,EAJyC;;AAMzCA,IAAAA,MAAM,CAACF,OAAPE,CAAekJ,IAAI,CAAC1E,SAAL0E,IAAkBA,IAAI,CAAC+C,QAAtCjM,uEAAAA;AACAA,IAAAA,MAAM,CAACF,OAAPE,CAAekJ,IAAI,CAACkD,QAALlD,IAAiBA,IAAI,CAAC7D,KAArCrF,mEAAAA;;QAEIkJ,IAAI,CAAC7D,KAAL6D,IAAc,CAACrG,QAAQ,CAACqG,IAAI,CAAC7D,KAAN,GAAc;AACvCqD,MAAAA,QAAQ,yCAAyC8B,yDAAzC,EAAoGiH,eAApG,CAAR/I;;;QAGE5L,SAAS,CAACzB,MAAVyB,KAAqB,GAAG;AAC1BmE,MAAAA,OAAO,CAACpE,IAARoE,CAAagM,QAAbhM,EAAuBwX,UAAU,IAAI;YAC/BA,UAAU,IAAI,MAAM;AACtBzY,UAAAA,MAAM,CAACH,MAAPG,CAAcyY,UAAU,IAAI,SAASA,UAAvBA,IAAqC,UAAUA,UAA/CA,IAA6D,cAAcA,UAA3EA,IAAyF,UAAUA,UAAnGA,IAAiH,SAASA,UAA1HA,IAAwI,SAASA,UAA/JzY,KAA8KyY,4BAA9KzY;;AAFJ,OAAAiB;;;;QAQE;AACJuC,IAAAA;AADI,MAEF0F;MACAgL,MAAM3V;QACJyK,KAAK,GAAG;AACZwB,IAAAA,GADY;AAEZtB,IAAAA,IAFY;AAGZ+D,IAAAA,QAHY;AAIZiH,IAAAA,IAJY;AAKZ3V,IAAAA,GALY;AAMZiF,IAAAA,GANY;AAOZmK,IAAAA,IAAI,EAAEkK,iBAPM;AAQZrC,IAAAA,IAAI,EAAEwD,IARM;AASZ1Q,IAAAA,KAAK,EAAEmJ,eATK;AAUZ8D,IAAAA,IAAI,EAAE;AAVM;AAYd+C,EAAAA,kBAAkB,CAACtP,KAAD,CAAlBsP;SACOtP;;;;AAGT,SAASxJ,CAAT,CAAWyZ,QAAX,EAAqBC,OAArB,EAA8B;QACtBC,IAAI,GAAG,GADe;;AAG5BL,EAAAA,EAAE,CAACK,IAAD,CAAFL;QACMrH,eAAe,GAAGC,kBAAkB;;MAEtCpP,WAAW,CAAC2W,QAAD,CAAX3W,IAAyB2W,QAAQ,KAAK,MAAM;IACH;AACzCvQ,MAAAA,QAAQ,0CAA0C1F,QAAQ,CAACiW,QAAD,SAAkBxH,6DAApE,EAAmIA,eAAnI,CAAR/I;;;WAGKyQ;;;EAGkC;AACzCnZ,IAAAA,MAAM,CAACF,OAAPE,CAAesC,WAAW,CAAC2W,QAAQ,CAACjC,cAAD,CAAT,CAA1BhX,4CAAgGgD,QAAQ,CAACiW,QAAD,UAAmBxH,sFAA3HzR;;;QAGIiX,QAAQ,GAAGgC,QAAQ,CAACjC,cAAD,CAARiC;;EAE0B;AACzCjZ,IAAAA,MAAM,CAACH,MAAPG,CAAciX,QAAQ,IAAItU,UAAU,CAACsU,QAAQ,CAACmC,IAAV,CAApCpZ,oCAAuFgD,QAAQ,CAACiW,QAAD,SAAkBxH,kBAAjHzR;;;MAGEoZ,IAAI,GAAGnC,QAAQ,CAACmC,IAATnC;MACP7J,CAAC,GAAG;MACJ;AACFxO,IAAAA,KADE;AAEFya,IAAAA,IAAI,EAAEC;AAFJ,MAGAF;MACAG;MACAC;;EAEuC;AACzCD,IAAAA,MAAM,GAAGnZ,MAAM,CAAC,IAAD,CAAfmZ;;;SAGKD,IAAI,KAAK,OAAO;;AAErBF,IAAAA,IAAI,GAAGnC,QAAQ,CAACmC,IAATnC,EAAPmC;AACAE,IAAAA,IAAI,GAAGF,IAAI,CAACC,IAAZC,CAHqB;;UAKftQ,KAAK,GAAGkQ,OAAO,CAACta,KAAD,EAAQwO,CAAR,EAAWA,CAAC,KAAK,CAAjB,EAAoBkM,IAApB;;QAEjB1Y,SAAS,CAACoI,KAAD,GAAS;AACpBxH,MAAAA,SAAS,CAACtE,KAAVsE,CAAgB2X,IAAhB3X,EAAsBwH,KAAtBxH;AADF,WAEO;AACLA,MAAAA,SAAS,CAAC3E,IAAV2E,CAAe2X,IAAf3X,EAAqBwH,KAArBxH;;;IAGyC;YACnCiM,MAAM,GAAG7M,SAAS,CAACoI,KAAD,CAATpI,GAAmBoI,KAAnBpI,GAA2B,CAACoI,KAAD;AAC1C/H,MAAAA,OAAO,CAACpE,IAARoE,CAAawM,MAAbxM,EAAqBwX,UAAU,IAAI;YAC7B,CAACjW,MAAM,CAACiW,UAAD,CAAP,IAAuB7V,UAAU,CAAC6V,UAAD,CAAjC,IAAiD,CAACnW,WAAW,CAACmW,UAAU,CAACjO,GAAZ,GAAkB;gBAC3E;AACJhH,YAAAA;AADI,cAEFiV;;cAEA5V,QAAQ,CAACW,GAAD,CAARX,IAAiBC,QAAQ,CAACU,GAAD,GAAO;gBAC9B+V,MAAM,CAAC/V,GAAD,CAAN+V,KAAgB,CAAhBA,IAAqBjX,WAAW,CAACkX,cAAD,GAAkB;AACpDA,cAAAA,cAAc,6CAA6Cf,UAAU,CAACjO,YAAYiH,mCAAmCrE,wBAAwBqL,UAAU,CAACjV,6FAAxJgW;;;AAGFD,YAAAA,MAAM,CAAC/V,GAAD,CAAN+V,GAAc,CAAdA;AALF,iBAMO,IAAIjX,WAAW,CAACkX,cAAD,CAAf,EAAiC;AACtCA,YAAAA,cAAc,yCAAyCf,UAAU,CAACjO,YAAYiH,mCAAmCrE,6DAAjHoM;;;AAbN,OAAAvY;AAfmB,KAAA;;;AAmCrBmM,IAAAA,CAAC,IAAI,CAALA;AACAxO,IAAAA,KAAK,GAAGwa,IAAI,CAACxa,KAAbA;;;EAGyC;QACrC,CAAC0D,WAAW,CAACkX,cAAD,GAAkB;AAChC9Q,MAAAA,QAAQ,CAAC8Q,cAAD,EAAiB/H,eAAjB,CAAR/I;;;;SAIGyQ;;AAET;;;;;AAIA,SAASM,CAAT,CAAW7c,KAAX,EAAkB;EAC2B;AACzCoD,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAAChE,KAAD,CAAvBoD,EAAgC,2CAAhCA;;;QAGIP,GAAG,GAAG7C,KAAK,CAACvB;QACZqe,SAAS,GAAG,GANF;;AAQhBZ,EAAAA,EAAE,CAACY,SAAD,CAAFZ;;OAEK,IAAI1L,CAAC,GAAG,GAAGA,CAAC,GAAG3N,KAAK2N,CAAC,IAAI,GAAG;UACzBuM,IAAI,GAAG/c,KAAK,CAACwQ,CAAD;;QAEdxM,SAAS,CAAC+Y,IAAD,GAAQ;AACnBnY,MAAAA,SAAS,CAACtE,KAAVsE,CAAgBkY,SAAhBlY,EAA2BmY,IAA3BnY;AADF,WAEO;AACLA,MAAAA,SAAS,CAAC3E,IAAV2E,CAAekY,SAAflY,EAA0BmY,IAA1BnY;;;;SAIGkY;;;;AAGT,SAASE,CAAT,CAAW1F,IAAX,EAAiB;QACThL,IAAI,GAAGhC;MACTsD,KAAKyC,UAAUzJ,KAAKjF;SACjB;AACLiM,IAAAA,GADK;AAELtB,IAAAA,IAFK;AAGL+D,IAAAA,QAHK;AAILiH,IAAAA,IAJK;AAKL3V,IAAAA,GALK;AAMLiF,IAAAA,GANK;AAOLmK,IAAAA,IAAI,EAAEuJ,QAPD;AAQL5O,IAAAA,KAAK,EAAEoJ,kBAAkB;AARpB;;;;AAYT,SAAStO,CAAT,CAAW8Q,IAAX,EAAiB;QACThL,IAAI,GAAGhC;QACPsD,GAAG,GAAG;MACRyC,UAAUzJ,KAAKjF;SACZ;AACLiM,IAAAA,GADK;AAELtB,IAAAA,IAFK;AAGL+D,IAAAA,QAHK;AAILiH,IAAAA,IAJK;AAKL3V,IAAAA,GALK;AAMLiF,IAAAA,GANK;AAOLmK,IAAAA,IAAI,EAAE2J,WAPD;AAQLhP,IAAAA,KAAK,EAAEoJ,kBAAkB;AARpB;;;;AAYT,SAASrO,CAAT,CAAWzE,KAAX,EAAkB;MACZA,KAAK,IAAI,MAAM;WACV;;;SAGFgb,CAAC,CAAChb,KAAD;;;;AAGV,SAASib,CAAT,CAAWhS,EAAX,EAAe;QACP4J,eAAe,GAAGC,kBAAkB;;MAEtClP,MAAM,CAACiP,eAAD,GAAmB;UACrB,IAAI7R,KAAJ;;;QAGFqI,EAAE,GAAGwJ;SACJ,UAAU1I,KAAV,EAAiB;AACtB+Q,IAAAA,mBAAmB,CAAC7R,EAAD,EAAKJ,EAAL,EAASI,EAAE,CAAC0O,SAAZ,EAAuB5N,KAAvB,CAAnB+Q;AADF;;;;AAKF,SAASC,EAAT,CAAYlS,EAAZ,EAAgB;QACR4J,eAAe,GAAGC,kBAAkB;;MAEtClP,MAAM,CAACiP,eAAD,GAAmB;UACrB,IAAI7R,KAAJ;;;QAGFqI,EAAE,GAAGwJ;SACJ,YAAY;WACVuI,uBAAuB,CAAC/R,EAAD,EAAKJ,EAAL,EAAShG,YAAY,CAAChF,IAAbgF,CAAkB/E,SAAlB+E,CAAT;AADhC;;;;AAKF,SAASoY,EAAT,CAAYC,eAAZ,EAA6BlV,EAA7B,EAAiCuH,OAAjC,EAA0C;QAClCtE,EAAE,GAAGyJ,kBAAkB;;MAEzBlP,MAAM,CAACyF,EAAD,GAAM;UACR,IAAIrI,KAAJ;AAJgC,GAAA;;;;QASlCua,aAAa,GAAGN,CAAC,CAACK,eAAD,EATiB;;;SAYjC,UAAUnR,KAAV,EAAiB;;UAEhB;AACJwD,MAAAA,OAAO,EAAE;AACP6N,QAAAA;AADO;AADL,QAIFnS;;QAEA,CAAC3F,WAAW,CAAC8X,OAAD,GAAW;YACnB;AACJA,QAAAA,OAAO,EAAEC;AADL,UAEF7D;;UAEA6D,gBAAgB;AAClBD,QAAAA,OAAO,CAACE,QAARF,GAAmB;AACjBG,UAAAA,MAAM,EAAEvV,EADS;AAEjBwV,UAAAA,IAAI,EAAEJ,OAAO,CAACpV,EAFG;AAGjByV,UAAAA,aAAa,EAAE9X,UAAU,CAAC4J,OAAD,CAAV5J,IAAuB4J,OAAO,EAH5B;AAIjBmO,UAAAA,WAAW,EAAE/X,UAAU,CAACyX,OAAO,CAAC7N,OAAT,CAAV5J,IAA+ByX,OAAO,CAAC7N,OAAR6N;AAJ3B,SAAnBA,CADkB;;;;AAUlB3D,QAAAA,iBAAiB,CAACxO,EAAD,EAAKoS,cAAL,CAAjB5D;;AAvBkB,KAAA;;;AA4BtB0D,IAAAA,aAAa,CAACpR,KAAD,CAAboR;AA5BF;;;;AAgCF,SAASnd,CAAT,CAAW2d,WAAX,EAAwBpY,GAAxB,EAA6B;UACnB,OAAOA;SACR;SACA;aACIoY,WAAW,GAAG,GAAdA,GAAoBpY;;SAExB;MACwC;AACzCvC,QAAAA,MAAM,CAACD,IAAPC,uBAAkCuC,WAAWmP,kBAAkB,qCAA/D1R;;;;;;;AAMR,SAAS4a,GAAT,CAAa5V,EAAb,EAAiB;QACTyM,eAAe,GAAGC,kBAAkB;;MAEtCpP,WAAW,CAAC0C,EAAD,CAAX1C,IAAmB0C,EAAE,KAAK,IAAI;IACW;AACzC0D,MAAAA,QAAQ,sBAAsB1D,wDAAtB,EAAgFyM,eAAhF,CAAR/I;;;WAGK1D;AARM,GAAA;;;MAYXxC,MAAM,CAACwC,EAAD,GAAM;WACP;;;YAGCA,MAAMyM,eAAe,CAACoJ;;;;AAGlC,SAASC,GAAT,CAAaC,GAAb,EAAkB;QACVtJ,eAAe,GAAGC,kBAAkB;;MAEtCpP,WAAW,CAACyY,GAAD,CAAXzY,IAAoByY,GAAG,KAAK,IAAI;IACS;UACrCzY,WAAW,CAACyY,GAAD,GAAO;AACpBrS,QAAAA,QAAQ,yFAAA,EAA2F+I,eAA3F,CAAR/I;;;;WAIGqS;AAVO,GAAA;;;MAcZvY,MAAM,CAACuY,GAAD,GAAO;WACR;AAfO,GAAA;;;MAmBZ,KAAKnI,IAAL,CAAUmI,GAAV,GAAgB;cACRA,OAAOtJ,eAAe,CAACoJ;;;SAG5BE;;AAET;;;;;;;AAMA,MAAMC,2BAA2B,GAAG,IAAIC,GAAJ,EAApC;AACA,IAAIC,+BAA+B,GAAG,CAAtC;AACA;;;;AAIA,SAASC,EAAT,CAAY3Q,GAAZ,EAAiBwO,IAAjB,EAAuB9P,IAAvB,EAA6B+D,QAA7B,EAAuC;EACM;AACzCjN,IAAAA,MAAM,CAACH,MAAPG,CAAc6C,QAAQ,CAAC2H,GAAD,CAAtBxK,2CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAc4C,UAAU,CAACsG,IAAD,CAAxBlJ,6CAAAA;AACAA,IAAAA,MAAM,CAACH,MAAPG,CAAclD,SAAS,CAACzB,MAAVyB,KAAqB,CAArBA,IAA0B8D,SAAS,CAACqM,QAAD,CAAjDjN,4CAAAA;AAJmC,GAAA;;;MAQjCgZ,IAAI,IAAI,MAAM;WACT;;;MAGL,CAACoC,sBAAsB,CAACpC,IAAD,GAAQ;UAC3B,IAAIpZ,KAAJ,4BAAqCoD,QAAQ,CAACgW,IAAD,yBAA8BxO,OAA3E;;;MAGJqQ,GAAG,GAAGG,2BAA2B,CAACvc,GAA5Buc,CAAgChC,IAAhCgC;;MAEN1Y,WAAW,CAACuY,GAAD,GAAO;AACpBA,IAAAA,GAAG,GAAGK,+BAA+B,EAArCL;AACAG,IAAAA,2BAA2B,CAACtc,GAA5Bsc,CAAgChC,IAAhCgC,EAAsCH,GAAtCG;AApBmC,GAAA;;;;;AA0BrC9R,EAAAA,IAAI,CAAC1F,GAAL0F,SAAiB2R,OAAO3R,IAAI,CAAC1F,KAA7B0F;SACO6P,CAAC,CAACvO,GAAD,EAAMwO,IAAN,EAAY9P,IAAZ,EAAkB+D,QAAlB;;AAEV;;;;;;;;;;;;;;;AAcA,SAAS6L,EAAT,CAAYrL,MAAZ,EAAoB;EACyB;AACzCzN,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAAC6M,MAAD,CAAvBzN,EAAiC,qCAAjCA;AAFgB,GAAA;;;;;AAQlBsW,EAAAA,qBAAqB,CAAC7I,MAAD,CAArB6I;SACO7I;;;AAGT,IAAI4N,GAAG,gBAAgB5e,MAAM,CAACwD,MAAPxD,CAAc;AACjCyD,EAAAA,SAAS,EAAE,IADsB;AAEjCsY,EAAAA,CAAC,EAAEA,CAF8B;AAGjCE,EAAAA,EAAE,EAAEA,EAH6B;AAIjC/L,EAAAA,CAAC,EAAEA,CAJ8B;AAKjCoM,EAAAA,CAAC,EAAEA,CAL8B;AAMjCvZ,EAAAA,CAAC,EAAEA,CAN8B;AAOjCia,EAAAA,CAAC,EAAEA,CAP8B;AAQjCG,EAAAA,CAAC,EAAEA,CAR8B;AASjCxW,EAAAA,CAAC,EAAEA,CAT8B;AAUjCC,EAAAA,CAAC,EAAEA,CAV8B;AAWjCwW,EAAAA,CAAC,EAAEA,CAX8B;AAYjCE,EAAAA,EAAE,EAAEA,EAZ6B;AAajCE,EAAAA,EAAE,EAAEA,EAb6B;AAcjCjd,EAAAA,CAAC,EAAEA,CAd8B;AAejC4d,EAAAA,GAAG,EAAEA,GAf4B;AAgBjCE,EAAAA,GAAG,EAAEA,GAhB4B;AAiBjCK,EAAAA,EAAE,EAAEA,EAjB6B;AAkBjCrC,EAAAA,EAAE,EAAEA;AAlB6B,CAAdrc,CAAvB;AAqBA,MAAM6e,iBAAiB,GAAG,IAAIC,GAAJ,EAA1B;;AACA,SAASC,oBAAT,GAAgC;SACvB;;;AAETF,iBAAiB,CAAC9P,GAAlB8P,CAAsBE,oBAAtBF;;AACA,SAASG,oBAAT,CAA8BC,GAA9B,EAAmC;SAC1BJ,iBAAiB,CAAC/E,GAAlB+E,CAAsBI,GAAtBJ;;AAET;;;;;;AAKA,SAASK,gBAAT,CAA0BD,GAA1B,EAA+B;AAC7BJ,EAAAA,iBAAiB,CAAC9P,GAAlB8P,CAAsBI,GAAtBJ,EAD6B;;;SAItBI;;AAcT;;;;;;;;AAMA,MAAME,oBAAoB,GAAGxb,MAAM,CAAC,IAAD,CAAnC;;AAEA,SAASyb,kBAAT,CAA4BC,YAA5B,EAA0C;QAClCvd,GAAG,GAAG4Y,QAAQ,CAACQ,aAATR,CAAuB,OAAvBA;AACZ5Y,EAAAA,GAAG,CAAC0K,IAAJ1K,GAAW,UAAXA;AACAA,EAAAA,GAAG,CAACmS,WAAJnS,GAAkBud,YAAlBvd;SACOA;;;AAGT,SAASwd,qBAAT,CAA+BD,YAA/B,EAA6C;MACvCE,QAAQ,GAAGJ,oBAAoB,CAACE,YAAD;;MAE/BxZ,WAAW,CAAC0Z,QAAD,GAAY;AACzBA,IAAAA,QAAQ,GAAG7E,QAAQ,CAAC8E,sBAAT9E,EAAX6E;UACME,QAAQ,GAAGL,kBAAkB,CAACC,YAAD;AACnCE,IAAAA,QAAQ,CAACjM,WAATiM,CAAqBE,QAArBF;AACAJ,IAAAA,oBAAoB,CAACE,YAAD,CAApBF,GAAqCI,QAArCJ;;;SAGKI,QAAQ,CAAChK,SAATgK,CAAmB,IAAnBA,EAAyBG;;;AAGlC,MAAMC,iBAAiB,GAAGjF,QAAQ,CAACkF,IAATlF,IAAiBA,QAAQ,CAACmF,IAA1BnF,IAAkCA,QAA5D;AACA,MAAMoF,0BAA0B,GAAGnc,MAAM,CAAC,IAAD,CAAzC;;AAEA,SAASoc,iBAAT,CAA2BV,YAA3B,EAAyC;;MAEnCxZ,WAAW,CAACia,0BAA0B,CAACT,YAAD,CAA3B,GAA4C;AACzDS,IAAAA,0BAA0B,CAACT,YAAD,CAA1BS,GAA2C,IAA3CA;UACMhe,GAAG,GAAGsd,kBAAkB,CAACC,YAAD;AAC9BM,IAAAA,iBAAiB,CAACrM,WAAlBqM,CAA8B7d,GAA9B6d;;;;AAIJ,SAASK,gBAAT,CAA0Ble,GAA1B,EAA+B;QACvByK,KAAK,GAAGwP,CAAC,CAAC,OAAD,EAAU;AACvBhV,IAAAA,GAAG,EAAE;AADkB,GAAV,EAEZ2D,UAFY,EADc;;;AAM7B6B,EAAAA,KAAK,CAACyO,aAANzO,GAAsBzK,GAAtByK;SACOA;;AAET;;;;;AAKA,SAAS0T,oBAAT,CAA8BzU,EAA9B,EAAkC;QAC1B;AACJsE,IAAAA,OADI;AAEJhO,IAAAA;AAFI,MAGF0J,GAJ4B;;QAM1B0U,gBAAgB,GAAGpQ,OAAO,CAACqQ;;MAE7B,CAACta,WAAW,CAACqa,gBAAD,GAAoB;AAClChf,IAAAA,eAAe,CAACd,IAAhBc,CAAqBY,GAArBZ,EAA0Bgf,gBAA1Bhf;AAT8B,GAAA;;;AAahC4O,EAAAA,OAAO,CAACqQ,aAARrQ,GAAwBA,OAAO,CAACkI,eAARlI,GAA0BlQ,SAAlDkQ;;AAEF;;;;;AAIA,SAASsQ,oBAAT,CAA8B5U,EAA9B,EAAkC2U,aAAlC,EAAiDnI,eAAjD,EAAkE;QAC1D;AACJlI,IAAAA,OADI;AAEJhO,IAAAA;AAFI,MAGF0J,GAJ4D;;AAMhExK,EAAAA,YAAY,CAACZ,IAAbY,CAAkBc,GAAlBd,EAAuBmf,aAAvBnf,EAAsC,EAAtCA;AACA8O,EAAAA,OAAO,CAACqQ,aAARrQ,GAAwBqQ,aAAxBrQ;AACAA,EAAAA,OAAO,CAACkI,eAARlI,GAA0BkI,eAA1BlI;;;AAGF,SAASuQ,kBAAT,CAA4BC,WAA5B,EAAyCC,YAAzC,EAAuDC,cAAvD,EAAuEC,QAAvE,EAAiFC,YAAjF,EAA+F;AAC7Flc,EAAAA,OAAO,CAACpE,IAARoE,CAAa8b,WAAb9b,EAA0Bmc,KAAK,IAAI;QAC7Bxc,SAAS,CAACwc,KAAD,GAAS;AACpBN,MAAAA,kBAAkB,CAACM,KAAD,EAAQJ,YAAR,EAAsBC,cAAtB,EAAsCC,QAAtC,EAAgDC,YAAhD,CAAlBL;AADF,WAEO;AACLK,MAAAA,YAAY,CAACC,KAAK,CAACJ,YAAD,EAAeC,cAAf,EAA+BC,QAA/B,CAAN,CAAZC;;AAJJ,GAAAlc;;;AASF,SAASoc,WAAT,CAAqBN,WAArB,EAAkCH,aAAlC,EAAiDnI,eAAjD,EAAkE;EACrB;AACzCzU,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAACmc,WAAD,CAAvB/c,wBAAAA;;;MAGE+H,oBAAoB;UAChBiV,YAAY,OAAOJ;UACnBK,cAAc,OAAOxI;AAC3BqI,IAAAA,kBAAkB,CAACC,WAAD,EAAcC,YAAd,EAA4BC,cAA5B,EAA4C,KAA5C,EAAmDvM,WAAW,IAAI;AAClF8L,MAAAA,iBAAiB,CAAC9L,WAAD,CAAjB8L;AADgB,KAAA,CAAlBM;WAGO;AANT,SAOO;;;QAGDQ,MAAM,GAAG;AACbR,IAAAA,kBAAkB,CAACC,WAAD,EAAc9Z,WAAd,EAA2BA,WAA3B,EAAwC,IAAxC,EAA8CyN,WAAW,IAAI;AAC7E4M,MAAAA,MAAM,IAAI5M,WAAV4M;AADgB,KAAA,CAAlBR;WAGOL,gBAAgB,CAACV,qBAAqB,CAACuB,MAAD,CAAtB;;;AAI3B;;;;;;;;AAMA,IAAIC,sBAAJ;;AAEA,CAAC,UAAUA,sBAAV,EAAkC;AACjCA,EAAAA,sBAAsB,CAAC,WAAD,CAAtBA,GAAsC,eAAtCA;AACAA,EAAAA,sBAAsB,CAAC,SAAD,CAAtBA,GAAoC,aAApCA;AAFF,CAAA,EAGGA,sBAAsB,KAAKA,sBAAsB,GAAG,EAA9B,CAHzB;AAIA;;;AAGA,MAAMC,qBAAqB,GAAG,OAAOC,WAAP,KAAuB,WAAvB,IAAsC,OAAOA,WAAW,CAACC,IAAnB,KAA4B,UAAlE,IAAgF,OAAOD,WAAW,CAACE,UAAnB,KAAkC,UAAlH,IAAgI,OAAOF,WAAW,CAACG,OAAnB,KAA+B,UAA/J,IAA6K,OAAOH,WAAW,CAACI,aAAnB,KAAqC,UAAhP;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B9V,EAA5B,EAAgC;;;YAGpBD,eAAe,CAACC,EAAD,OAAU8V,WAAW9V,EAAE,CAAC4S;;;AAGnD,SAASmD,cAAT,CAAwBD,KAAxB,EAA+B9V,EAA/B,EAAmC;YACvBD,eAAe,CAACC,EAAD,OAAU8V;;;AAGrC,SAAS/S,KAAT,CAAeiT,QAAf,EAAyB;AACvBR,EAAAA,WAAW,CAACC,IAAZD,CAAiBQ,QAAjBR;;;AAGF,SAASS,GAAT,CAAaC,WAAb,EAA0BF,QAA1B,EAAoC;AAClCR,EAAAA,WAAW,CAACG,OAAZH,CAAoBU,WAApBV,EAAiCQ,QAAjCR,EADkC;;;AAIlCA,EAAAA,WAAW,CAACE,UAAZF,CAAuBQ,QAAvBR;AACAA,EAAAA,WAAW,CAACE,UAAZF,CAAuBU,WAAvBV;;;AAGF,SAASW,MAAT,GAAkB;;;;AAIlB,MAAMC,YAAY,GAAG,CAACb,qBAAD,GAAyBY,MAAzB,GAAkC,UAAUL,KAAV,EAAiB9V,EAAjB,EAAqB;QACpEgW,QAAQ,GAAGH,WAAW,CAACC,KAAD,EAAQ9V,EAAR;AAC5B+C,EAAAA,KAAK,CAACiT,QAAD,CAALjT;AAFF,CAAA;AAIA,MAAMsT,UAAU,GAAG,CAACd,qBAAD,GAAyBY,MAAzB,GAAkC,UAAUL,KAAV,EAAiB9V,EAAjB,EAAqB;QAClEgW,QAAQ,GAAGH,WAAW,CAACC,KAAD,EAAQ9V,EAAR;QACtBkW,WAAW,GAAGH,cAAc,CAACD,KAAD,EAAQ9V,EAAR;AAClCiW,EAAAA,GAAG,CAACC,WAAD,EAAcF,QAAd,CAAHC;AAHF,CAAA;AAKA,MAAMK,kBAAkB,GAAG,CAACf,qBAAD,GAAyBY,MAAzB,GAAkC,UAAUL,KAAV,EAAiB9V,EAAjB,EAAqB;QAC1EgW,QAAQ,GAAG3b,WAAW,CAAC2F,EAAD,CAAX3F,GAAkByb,KAAlBzb,GAA0Bwb,WAAW,CAACC,KAAD,EAAQ9V,EAAR;AACtD+C,EAAAA,KAAK,CAACiT,QAAD,CAALjT;AAFF,CAAA;AAIA,MAAMwT,gBAAgB,GAAG,CAAChB,qBAAD,GAAyBY,MAAzB,GAAkC,UAAUL,KAAV,EAAiB9V,EAAjB,EAAqB;QACxEgW,QAAQ,GAAG3b,WAAW,CAAC2F,EAAD,CAAX3F,GAAkByb,KAAlBzb,GAA0Bwb,WAAW,CAACC,KAAD,EAAQ9V,EAAR;AACtDiW,EAAAA,GAAG,CAACH,KAAD,EAAQE,QAAR,CAAHC;AAFF,CAAA;AAKA;;;;;;;AAMA,IAAItM,kBAAkB,GAAG,KAAzB;AACA,IAAIH,eAAe,GAAG,IAAtB;;AACA,SAASC,kBAAT,GAA8B;SACrBD;;;AAET,SAASgN,kBAAT,CAA4BxW,EAA5B,EAAgC;AAC9BwJ,EAAAA,eAAe,GAAGxJ,EAAlBwJ;;;AAEF,SAASsB,iBAAT,CAA2B9K,EAA3B,EAA+B;SACtBA,EAAE,KAAKwJ;;;AAEhB,MAAMiN,UAAU,GAAGte,MAAM,CAAC,IAAD,CAAzB;;AAEA,SAASue,aAAT,CAAuB1W,EAAvB,EAA2B2W,IAA3B,EAAiC;;QAMzB;AACJC,IAAAA,QAAQ,GAAGH;AADP,MAEFzW;QACE;AACJ6W,IAAAA,KAAK,GAAG3X;AADJ,MAEFyX;;OAEC,MAAMhG,YAAYiG,UAAU;;AAE/B7e,IAAAA,MAAM,CAACH,MAAPG,CAAcY,SAAS,CAACie,QAAQ,CAACjG,QAAD,CAAT,CAAvB5Y,yDAAoGgD,QAAQ,CAAC6b,QAAQ,CAACjG,QAAD,CAAT,eAAkCA,gBAAgB3Q,KAA9JjI;;QAEI4Y,QAAQ,KAAK,EAAbA,IAAmBzX,YAAY,CAACtE,IAAbsE,CAAkB2d,KAAlB3d,EAAyByX,QAAzBzX,MAAuC,CAAC,GAAG;;;AAGhEuH,MAAAA,QAAQ,yCAAyCkQ,gBAAgB3Q,6CAAzD,EAAwGA,EAAxG,CAARS;;;;;AAKN,SAASqW,cAAT,CAAwB9W,EAAxB,EAA4B2W,IAA5B,EAAkC;;QAM1B;AACJjI,IAAAA;AADI,MAEF1O,GAR4B;;QAU1B;AACJ+W,IAAAA,GAAG,GAAG;AADF,MAEFJ;AACJ3d,EAAAA,OAAO,CAACpE,IAARoE,CAAa+d,GAAb/d,EAAkB7D,QAAQ,IAAI;QACxB,EAAEA,QAAQ,IAAIuZ,SAAd,GAA0B;;AAE5BjO,MAAAA,QAAQ,6BAA6BT,wBAAwB7K,sEAArD,EAA6H6K,EAA7H,CAARS;;AAHJ,GAAAzH;;;AAQF,SAASge,gBAAT,CAA0BhX,EAA1B,EAA8B2W,IAA9B,EAAoC;EACS;AACzC5e,IAAAA,MAAM,CAACH,MAAPG,CAAc2C,UAAU,CAACic,IAAD,CAAxB5e,gFAA8GgD,QAAQ,CAAC4b,IAAD,GAAtH5e;;;QAGIkf,2BAA2B,GAAGtN;QAC9BuN,iCAAiC,GAAG1N;MACtChE,MAAM,GAAG;AACbyH,EAAAA,yBAAyB,CAACjN,EAAD,EAAKA,EAAE,CAACK,KAAR,EAAe,MAAM;;AAE5CmJ,IAAAA,eAAe,GAAGxJ,EAAlBwJ;;IAE2C;AACzC4M,MAAAA,YAAY,CAAC,QAAD,EAAWpW,EAAX,CAAZoW;;AALqB,GAAA,EAOtB,MAAM;;UAED;AACJ1H,MAAAA,SADI;AAEJpK,MAAAA,OAFI;AAGJsS,MAAAA,QAHI;AAIJO,MAAAA,WAJI;AAKJC,MAAAA;AALI,QAMFpX;AACJoX,IAAAA,GAAG,CAACC,OAAJD,CAAY,MAAM;;UAEZT,IAAI,KAAKQ,aAAa;;YAEpB,CAAC9c,WAAW,CAAC8c,WAAD,GAAe;;;AAG7BG,UAAAA,eAAe,CAACtX,EAAD,CAAfsX;AALsB,SAAA;;;YASpBjd,WAAW,CAACsc,IAAD,CAAXtc,IAAqB,CAACmZ,oBAAoB,CAACmD,IAAD,GAAQ;gBAC9C,IAAI9W,SAAJ,wDAAqEG,wEAAwEA,EAAE,CAACwN,GAAHxN,CAAO/D,4CAA4ClB,QAAQ,CAAC4b,IAAD,IAAxM;;;AAGR3W,QAAAA,EAAE,CAACmX,WAAHnX,GAAiB2W,IAAjB3W,CAbwB;;AAexBsE,QAAAA,OAAO,CAACiT,QAARjT,GAAmBnM,MAAM,CAAC,IAAD,CAAzBmM;AACAmQ,QAAAA,oBAAoB,CAACzU,EAAD,CAApByU;cACM;AACJK,UAAAA,WADI;AAEJ0C,UAAAA;AAFI,YAGFb;;YAEAtc,WAAW,CAACya,WAAD,CAAXza,IAA4Bya,WAAW,CAAC1hB,MAAZ0hB,KAAuB,GAAG;AACxDxQ,UAAAA,OAAO,CAACmT,UAARnT,GAAqB,IAArBA;AADF,eAEO,IAAI,CAACjK,WAAW,CAACmd,gBAAD,CAAhB,EAAoC;gBACnC;AACJ7C,YAAAA,aADI;AAEJnI,YAAAA;AAFI,cAGFgL;AACJ5C,UAAAA,oBAAoB,CAAC5U,EAAD,EAAK2U,aAAL,EAAoBnI,eAApB,CAApBoI,CALyC;;AAOzCtQ,UAAAA,OAAO,CAACmT,UAARnT,GAAqB8Q,WAAW,CAACN,WAAD,EAAcH,aAAd,EAA6BnI,eAA7B,CAAhClI;;;YAGEoT,kBAAyB,cAAc;;;;AAIzCZ,UAAAA,cAAc,CAAC9W,EAAD,EAAK2W,IAAL,CAAdG;;;;UAIAY,kBAAyB,cAAc;AACzC3f,QAAAA,MAAM,CAACH,MAAPG,CAAc4C,UAAU,CAAC2J,OAAO,CAACiT,QAAT,CAAxBxf,yDAAmGof,cAAnGpf,EADyC;;AAGzC2e,QAAAA,aAAa,CAAC1W,EAAD,EAAK2W,IAAL,CAAbD;AA/Cc,OAAA;;;;AAoDhB1W,MAAAA,EAAE,CAACsQ,SAAHtQ,GAAe,EAAfA,CApDgB;;AAsDhB2J,MAAAA,kBAAkB,GAAG,IAArBA;AACAnE,MAAAA,MAAM,GAAGmR,IAAI,CAAC/hB,IAAL+hB,CAAUviB,SAAVuiB,EAAqBvD,GAArBuD,EAA0BjI,SAA1BiI,EAAqCC,QAArCD,EAA+CrS,OAAO,CAACiT,QAAvDZ,CAATnR;YACM;AACJiS,QAAAA;AADI,UAEFnT;;UAEA,CAAC/J,MAAM,CAACkd,UAAD,GAAc;AACvB1d,QAAAA,cAAc,CAACnF,IAAfmF,CAAoByL,MAApBzL,EAA4B0d,UAA5B1d;;AA7DJ,KAAAqd;AAhBuB,GAAA,EAgFtB,MAAM;;AAEPzN,IAAAA,kBAAkB,GAAGsN,2BAArBtN;AACAH,IAAAA,eAAe,GAAG0N,iCAAlB1N;;IAE2C;AACzC6M,MAAAA,UAAU,CAAC,QAAD,EAAWrW,EAAX,CAAVqW;;AAtFqB,GAAA,CAAzBpJ;;EA0F2C;AACzClV,IAAAA,MAAM,CAACN,SAAPM,CAAiBY,SAAS,CAAC6M,MAAD,CAA1BzN,uEAAAA;;;SAGKyN;;AAGT;;;;;;;;AAMA,IAAIkE,gBAAgB,GAAG,KAAvB;AACA,IAAIiO,kBAAkB,GAAG,IAAzB;;AACA,SAAS9N,kBAAT,CAA4B7J,EAA5B,EAAgC;SACvB2X,kBAAkB,KAAK3X;;;AAEhC,IAAI4X,0BAA0B,GAAG,IAAjC;;AACA,SAAS7M,0BAAT,CAAoC/K,EAApC,EAAwC;SAC/B4X,0BAA0B,KAAK5X;;;AAGxC,MAAM6X,MAAM,GAAG,MAAM,KAAK,CAA1B;;AAEA,SAAS9F,uBAAT,CAAiC/R,EAAjC,EAAqCJ,EAArC,EAAyCkY,IAAzC,EAA+C;QACvC;AACJpJ,IAAAA,SADI;AAEJqJ,IAAAA,QAFI;AAGJ1X,IAAAA;AAHI,MAIFL;MACAgY;AACJ/K,EAAAA,yBAAyB,CAACjN,EAAD,EAAKK,KAAL,EAAYwX,MAAZ,EAAoB,MAAM;;AAEjDG,IAAAA,MAAM,GAAGD,QAAQ,CAACrJ,SAAD,EAAY9O,EAAZ,EAAgBkY,IAAhB,CAAjBE;AAFuB,GAAA,EAGtBH,MAHsB,CAAzB5K;SAIO+K;;;AAET,SAASC,0BAAT,CAAoCjY,EAApC,EAAwC+Q,IAAxC,EAA8C;QACtCmH,2BAA2B,GAAGP;MAChCnb;;EAEuC;AACzC4Z,IAAAA,YAAY,CAAC,aAAD,EAAgBpW,EAAhB,CAAZoW;;;AAGFuB,EAAAA,kBAAkB,GAAG3X,EAArB2X;;;;;;;MAOI;;UAEIK,MAAM,GAAG,IAAIjH,IAAJ,GAFb;;;;;QAOE4G,kBAAkB,CAACjJ,SAAnBiJ,KAAiCK,QAAQ;YACrC,IAAInY,SAAJ,CAAc,0EAAd;;AARV,IAUE,OAAOc,CAAP,EAAU;AACVnE,IAAAA,KAAK,GAAGhI,MAAM,CAACmM,CAAD,CAAdnE;AAXF,YAYU;IACmC;AACzC6Z,MAAAA,UAAU,CAAC,aAAD,EAAgBrW,EAAhB,CAAVqW;;;AAGFsB,IAAAA,kBAAkB,GAAGO,2BAArBP;;QAEI,CAACtd,WAAW,CAACmC,KAAD,GAAS;AACvBA,MAAAA,KAAK,CAAC+D,OAAN/D,GAAgB8D,sBAAsB,CAACN,EAAD,CAAtCxD,CADuB;;YAGjBA,MAHiB;;;;;AAO7B,SAAS2b,2BAAT,CAAqCnY,EAArC,EAAyC;QACjC;AACJwN,IAAAA,GAAG,EAAE;AACH4K,MAAAA;AADG,KADD;AAIJL,IAAAA,QAJI;AAKJrJ,IAAAA,SALI;AAMJrO,IAAAA;AANI,MAOFL;QACEqY,6BAA6B,GAAG3O;QAChC4O,wBAAwB,GAAG7O,kBAAkB;MAC/CkN;MACA4B,0BAA0B,GAAG;AACjCtL,EAAAA,yBAAyB,CAACjN,EAAD,EAAKK,KAAL,EAAY,MAAM;;AAEzCqJ,IAAAA,gBAAgB,GAAG,IAAnBA;AACA8M,IAAAA,kBAAkB,CAACxW,EAAD,CAAlBwW;AAHuB,GAAA,EAItB,MAAM;;AAEPxW,IAAAA,EAAE,CAACoX,GAAHpX,CAAOqX,OAAPrX,CAAe,MAAM;AACnB2W,MAAAA,IAAI,GAAGoB,QAAQ,CAACrJ,SAAD,EAAY0J,MAAZ,CAAfzB;AACA4B,MAAAA,0BAA0B,GAAG,IAA7BA;AAFF,KAAAvY;AANuB,GAAA,EAUtB,MAAM;;AAEP0J,IAAAA,gBAAgB,GAAG2O,6BAAnB3O;AACA8M,IAAAA,kBAAkB,CAAC8B,wBAAD,CAAlB9B;AAbuB,GAAA,CAAzBvJ,CAbuC;;SA6BhCsL,0BAA0B,GAAGvB,gBAAgB,CAAChX,EAAD,EAAK2W,IAAL,CAAnB,GAAgC;;;AAEnE,SAAS6B,+BAAT,CAAyCxY,EAAzC,EAA6C;QACrC;AACJwN,IAAAA,GAAG,EAAE;AACHiL,MAAAA;AADG,KADD;AAIJ/J,IAAAA,SAJI;AAKJqJ,IAAAA,QALI;AAMJ1X,IAAAA;AANI,MAOFL;;MAEA,CAAC3F,WAAW,CAACoe,gBAAD,GAAoB;UAC5BC,mCAAmC,GAAGd;AAC5C3K,IAAAA,yBAAyB,CAACjN,EAAD,EAAKK,KAAL,EAAY,MAAM;AACzCuX,MAAAA,0BAA0B,GAAG5X,EAA7B4X,CADyC;;MAGE;AACzCxB,QAAAA,YAAY,CAAC,kBAAD,EAAqBpW,EAArB,CAAZoW;;AAJqB,KAAA,EAMtB,MAAM;;AAEP2B,MAAAA,QAAQ,CAACrJ,SAAD,EAAY+J,gBAAZ,CAARV;AARuB,KAAA,EAStB,MAAM;;MAEoC;AACzC1B,QAAAA,UAAU,CAAC,kBAAD,EAAqBrW,EAArB,CAAVqW;;;AAGFuB,MAAAA,0BAA0B,GAAGc,mCAA7Bd;AAfuB,KAAA,CAAzB3K;;;;AAmBJ,SAAS4E,mBAAT,CAA6B7R,EAA7B,EAAiCJ,EAAjC,EAAqC+Y,SAArC,EAAgD7X,KAAhD,EAAuD;QAC/C;AACJiX,IAAAA,QADI;AAEJ1X,IAAAA;AAFI,MAGFL;AACJiN,EAAAA,yBAAyB,CAACjN,EAAD,EAAKK,KAAL,EAAYwX,MAAZ,EAAoB,MAAM;;QAE7CH,kBAAyB,cAAc;AACzC3f,MAAAA,MAAM,CAACH,MAAPG,CAAc2C,UAAU,CAACkF,EAAD,CAAxB7H,sCAAkE+I,KAAK,CAACE,YAAYhB,KAApFjI;;;AAGFggB,IAAAA,QAAQ,CAACY,SAAD,EAAY/Y,EAAZ,EAAgB,CAACkB,KAAD,CAAhB,CAARiX;AANuB,GAAA,EAOtBF,MAPsB,CAAzB5K;;AAUF;;;;;;;;AAMA,MAAM;AACJ9U,EAAAA,MAAM,EAAEygB;AADJ,IAEFpkB,MAFJ;AAGA,MAAM;AACJqF,EAAAA,MAAM,EAAEgf,aADJ;AAEJ5f,EAAAA,OAAO,EAAE6f,cAFL;AAGJxf,EAAAA,IAAI,EAAEyf;AAHF,IAIFvlB,KAAK,CAACO,SAJV;AAKA,MAAMilB,yBAAyB,GAAG,IAAIljB,OAAJ,EAAlC;;AAEA,SAASmjB,aAAT,CAAuB3e,GAAvB,EAA4B;SACnBA,GAAG,KAAKlG;;;AAGjB,SAAS8kB,iBAAT,CAA2B5G,MAA3B,EAAmC;MAC7B6G,cAAc,GAAGH,yBAAyB,CAACxiB,GAA1BwiB,CAA8B1G,MAA9B0G;;MAEjBC,aAAa,CAACE,cAAD,GAAkB;UAC3BC,SAAS,GAAGR,QAAQ,CAAC,IAAD;AAC1BO,IAAAA,cAAc,GAAGC,SAAjBD;AACAH,IAAAA,yBAAyB,CAACviB,GAA1BuiB,CAA8B1G,MAA9B0G,EAAsCI,SAAtCJ;;;SAGKG;;;AAGT,IAAIE,uBAAuB,GAAG,IAA9B;;AACA,SAASC,YAAT,CAAsBhH,MAAtB,EAA8B/W,GAA9B,EAAmC;QAC3B4d,cAAc,GAAGH,yBAAyB,CAACxiB,GAA1BwiB,CAA8B1G,MAA9B0G;;MAEnB,CAACC,aAAa,CAACE,cAAD,GAAkB;UAC5BI,iBAAiB,GAAGJ,cAAc,CAAC5d,GAAD;;QAEpC,CAAC0d,aAAa,CAACM,iBAAD,GAAqB;WAChC,IAAIhiB,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG+hB,iBAAiB,CAACnmB,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;cACzDiiB,EAAE,GAAGD,iBAAiB,CAAChiB,CAAD;AAC5BiiB,QAAAA,EAAE,CAACC,MAAHD;;;;;;AAKR,SAASE,aAAT,CAAuBpH,MAAvB,EAA+B/W,GAA/B,EAAoC;;MAE9B8d,uBAAuB,KAAK,MAAM;;;;QAIhCG,EAAE,GAAGH;QACLF,cAAc,GAAGD,iBAAiB,CAAC5G,MAAD;MACpCiH,iBAAiB,GAAGJ,cAAc,CAAC5d,GAAD;;MAElC0d,aAAa,CAACM,iBAAD,GAAqB;AACpCA,IAAAA,iBAAiB,GAAG,EAApBA;AACAJ,IAAAA,cAAc,CAAC5d,GAAD,CAAd4d,GAAsBI,iBAAtBJ;AAFF,SAGO,IAAII,iBAAiB,CAAC,CAAD,CAAjBA,KAAyBC,EAA7B,EAAiC;WAAA;;;MAIpCV,cAAc,CAAClkB,IAAfkkB,CAAoBS,iBAApBT,EAAuCU,EAAvCV,MAA+C,CAAC,GAAG;AACrDU,IAAAA,EAAE,CAACG,IAAHH,CAAQD,iBAARC;;;;AAGJ,MAAMI,gBAAN,CAAuB;AACrBC,EAAAA,WAAW,CAACva,QAAD,EAAW;SACfwa,YAAY;SACZxa,WAAWA;;;AAGlB+X,EAAAA,OAAO,CAAC0C,GAAD,EAAM;UACLC,uBAAuB,GAAGX;AAChCA,IAAAA,uBAAuB,GAAG,IAA1BA;QACI7c;;QAEA;AACFud,MAAAA,GAAG;AADL,MAEE,OAAOpZ,CAAP,EAAU;AACVnE,MAAAA,KAAK,GAAGhI,MAAM,CAACmM,CAAD,CAAdnE;AAHF,cAIU;AACR6c,MAAAA,uBAAuB,GAAGW,uBAA1BX;;UAEI7c,KAAK,KAAKpI,WAAW;cACjBoI,MADiB;;;;;;;;;;;AAY7Byd,EAAAA,KAAK,GAAG;UACA;AACJH,MAAAA;AADI,QAEF;UACEtiB,GAAG,GAAGsiB,SAAS,CAAC1mB;;QAElBoE,GAAG,GAAG,GAAG;WACN,IAAID,CAAC,GAAG,GAAGA,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;cACzBd,GAAG,GAAGqjB,SAAS,CAACviB,CAAD;cACf2iB,GAAG,GAAGpB,cAAc,CAAClkB,IAAfkkB,CAAoBgB,SAAS,CAACviB,CAAD,CAA7BuhB,EAAkC,IAAlCA;AACZD,QAAAA,aAAa,CAACjkB,IAAdikB,CAAmBpiB,GAAnBoiB,EAAwBqB,GAAxBrB,EAA6B,CAA7BA;;;AAGFiB,MAAAA,SAAS,CAAC1mB,MAAV0mB,GAAmB,CAAnBA;;AA3CiB,GAAA;;;AAgDrBL,EAAAA,MAAM,GAAG;SACFna,SAAS1K,KAAKR,WAAW;;;AAGhCulB,EAAAA,IAAI,CAACJ,iBAAD,EAAoB;AACtBR,IAAAA,WAAW,CAACnkB,IAAZmkB,CAAiBQ,iBAAjBR,EAAoC,IAApCA,EADsB;;AAGtBA,IAAAA,WAAW,CAACnkB,IAAZmkB,CAAiB,KAAKe,SAAtBf,EAAiCQ,iBAAjCR;;;AAvDmB;AA4DvB;;;;;;;;AAMA,MAAMoB,wBAAwB,GAAG,IAAInH,GAAJ,EAAjC;AACA;;;;;AAKA,SAASoH,iBAAT,CAA2BrJ,IAA3B,EAAiC;AAC/B9U,EAAAA,IAD+B;AAE/Boe,EAAAA,IAAI,EAAEC;AAFyB,CAAjC,EAGG;AACDH,EAAAA,wBAAwB,CAAC1jB,GAAzB0jB,CAA6BpJ,IAA7BoJ,EAAmC;AACjCle,IAAAA,IADiC;AAEjCqe,IAAAA;AAFiC,GAAnCH,EADC;;;SAOMpJ;;;AAET,SAASwJ,0BAAT,CAAoCxJ,IAApC,EAA0C;SACjCoJ,wBAAwB,CAAC3jB,GAAzB2jB,CAA6BpJ,IAA7BoJ;;;AAET,SAASK,eAAT,CAAyBC,eAAzB,EAA0C1J,IAA1C,EAAgD;;AAE9CkH,EAAAA,0BAA0B,CAACwC,eAAD,EAAkB1J,IAAlB,CAA1BkH;QACMyC,aAAa,GAAGD;;MAElBpgB,WAAW,CAACqgB,aAAa,CAAChM,SAAf,GAA2B;UAClC,IAAIiM,cAAJ,6BAA+C5J,yCAA/C;;;;AAGV,SAAS6J,aAAT,CAAuB5a,EAAvB,EAA2B;QACnB;AACJwN,IAAAA,GAAG,EAAE;AACHqN,MAAAA;AADG;AADD,MAIF7a;;MAEA,CAAC3F,WAAW,CAACwgB,IAAD,GAAQ;UAChB;AACJC,MAAAA;AADI,QAEFvM;;QAEAuM,QAAQ;AACVtM,MAAAA,iBAAiB,CAACxO,EAAD,EAAK8a,MAAL,CAAjBtM;;;;;AAIN,SAASuM,2BAAT,CAAqC/a,EAArC,EAAyC;SAChC,IAAI4Z,gBAAJ,CAAqB,MAAM;IACW;AACzC7hB,MAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC2R,gBAAlB3R,yEAA2G0R,kBAAkB,KAA7H1R;AACAA,MAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4R,kBAAlB5R,iEAAqG0R,kBAAkB,KAAvH1R;;;UAGI;AACJijB,MAAAA;AADI,QAEFhb;;QAEAvF,SAAS,CAACugB,OAAD,GAAW;AACtBC,MAAAA,oBAAoB,CAACjb,EAAD,CAApBib;AACAC,MAAAA,mBAAmB,CAAClb,EAAD,CAAnBkb;;AAZG,GAAA;;;AAgBT,SAASC,eAAT,CAAyBnb,EAAzB,EAA6B;EACgB;AACzCjI,IAAAA,MAAM,CAACN,SAAPM,CAAiBiI,EAAE,CAACgb,OAApBjjB,KAAgCiI,kBAAhCjI;;;AAGFiI,EAAAA,EAAE,CAACoX,GAAHpX,CAAOia,KAAPja;QACMwF,MAAM,GAAG2S,2BAA2B,CAACnY,EAAD;AAC1CA,EAAAA,EAAE,CAACgb,OAAHhb,GAAa,KAAbA;AACAA,EAAAA,EAAE,CAACob,WAAHpb,GAAiB,KAAjBA;;EAE2C;AACzCjI,IAAAA,MAAM,CAACN,SAAPM,CAAiBY,SAAS,CAAC6M,MAAD,CAA1BzN,KAAuCiI,kEAAkEwF,QAAzGzN;;;SAGKyN;;;AAET,SAASyV,oBAAT,CAA8Bjb,EAA9B,EAAkC;EACW;UACnCwJ,eAAe,GAAGC,kBAAkB;AAC1C1R,IAAAA,MAAM,CAACF,OAAPE,CAAeiI,EAAE,CAACgb,OAAlBjjB,gCAAyDiI,8DAAzDjI;AACAA,IAAAA,MAAM,CAACF,OAAPE,CAAe2R,gBAAf3R,gCAA+DiI,2CAA2CwJ,kBAA1GzR;AACAA,IAAAA,MAAM,CAACF,OAAPE,CAAe4R,kBAAf5R,gCAAiEiI,kDAAkDwJ,kBAAnHzR;;;AAGFiI,EAAAA,EAAE,CAACgb,OAAHhb,GAAa,IAAbA;;;AAEF,MAAMqb,mBAAmB,GAAG,IAAIvlB,OAAJ,EAA5B;;AACA,SAASwlB,4BAAT,CAAsCtb,EAAtC,EAA0CuB,QAA1C,EAAoD;MAC9C,CAAC7G,UAAU,CAAC6G,QAAD,GAAY;UACnB,IAAI1B,SAAJ,GADmB;;;MAIvB0b,eAAe,GAAGF,mBAAmB,CAAC7kB,GAApB6kB,CAAwB9Z,QAAxB8Z;;MAElBhhB,WAAW,CAACkhB,eAAD,GAAmB;AAChCA,IAAAA,eAAe,GAAG,UAAUza,KAAV,EAAiB;AACjC+Q,MAAAA,mBAAmB,CAAC7R,EAAD,EAAKuB,QAAL,EAAenN,SAAf,EAA0B0M,KAA1B,CAAnB+Q;AADF,KAAA0J;;AAIAF,IAAAA,mBAAmB,CAAC5kB,GAApB4kB,CAAwB9Z,QAAxB8Z,EAAkCE,eAAlCF;;;SAGKE;;AAGT;;;;;;;;AAMA,SAASC,iCAAT,CAA2CC,MAA3C,EAAmD;SAC1ChiB,WAAW,CAAC7E,IAAZ6E,CAAiBgiB,MAAjBhiB,EAAyB,CAACiiB,GAAD,EAAM/f,KAAN,KAAgB;AAC9C+f,IAAAA,GAAG,CAAC/f,KAAD,CAAH+f,GAAaC,qCAAqC,CAAChgB,KAAD,CAAlD+f;WACOA;AAFF,GAAAjiB,EAGJ,EAHIA;;;AAMT,SAASkiB,qCAAT,CAA+CpgB,GAA/C,EAAoD;SAC3C;AACL/E,IAAAA,GAAG,GAAG;YACEwJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1B8P,MAAAA,aAAa,CAAC,IAAD,EAAOne,GAAP,CAAbme;aACO1Z,EAAE,CAAC4b,QAAH5b,CAAYzE,GAAZyE;AAJJ,KAAA;;AAOLvJ,IAAAA,GAAG,CAACK,QAAD,EAAW;YACNkJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;;UAEtB9S,QAAQ,KAAKkJ,EAAE,CAAC4b,QAAH5b,CAAYzE,GAAZyE,GAAkB;AACjCA,QAAAA,EAAE,CAAC4b,QAAH5b,CAAYzE,GAAZyE,IAAmBlJ,QAAnBkJ;;YAEIvF,SAAS,CAACuF,EAAE,CAACgb,OAAJ,GAAc;AACzB1B,UAAAA,YAAY,CAAC,IAAD,EAAO/d,GAAP,CAAZ+d;;;AAdD,KAAA;;AAmBLriB,IAAAA,UAAU,EAAE,IAnBP;AAoBLD,IAAAA,YAAY,EAAE;AApBT;;AAwBT;;;;;;;AAMA;;;;;;;;AAOA,MAAM6kB,8BAA8B,GAAG1jB,MAAM,CAAC,IAAD,CAA7C;AACAa,OAAO,CAACpE,IAARoE,CAAa1B,iCAAb0B,EAAgD7D,QAAQ,IAAI;;;QAGpDiC,UAAU,GAAG6D,qBAAqB,CAAC6gB,WAAW,CAAC/nB,SAAb,EAAwBoB,QAAxB;;MAEpC,CAACkF,WAAW,CAACjD,UAAD,GAAc;AAC5BykB,IAAAA,8BAA8B,CAAC1mB,QAAD,CAA9B0mB,GAA2CzkB,UAA3CykB;;AANJ,CAAA7iB;AASAA,OAAO,CAACpE,IAARoE,CAAa8C,2BAAb9C,EAA0C7D,QAAQ,IAAI;;;;QAI9CiC,UAAU,GAAG6D,qBAAqB,CAAC6gB,WAAW,CAAC/nB,SAAb,EAAwBoB,QAAxB;;MAEpC,CAACkF,WAAW,CAACjD,UAAD,GAAc;AAC5BykB,IAAAA,8BAA8B,CAAC1mB,QAAD,CAA9B0mB,GAA2CzkB,UAA3CykB;;AAPJ,CAAA7iB;AAWA;;;;;;;AAMA,MAAM+iB,yBAAyB,GAAG3mB,wBAAwB,CAAC4mB,UAAU,CAACjoB,SAAZ,EAAuB,WAAvB,CAAxBqB,CAA4DqB,GAA9F;AACA,MAAM0T,aAAa,GAAG,iBAAiB8R,MAAjB,GAA0BC,WAAW,CAACnoB,SAAZmoB,CAAsB/R,aAAhD,GAAgEgS,IAAI,CAACpoB,SAALooB,CAAehS,aAArG;;AAEA;;;;;;;AAMA;;;;;;;AAOA,SAASiS,+BAAT,CAAyCjnB,QAAzC,EAAmDiC,UAAnD,EAA+D;QACvD;AACJZ,IAAAA,GADI;AAEJC,IAAAA,GAFI;AAGJQ,IAAAA,UAHI;AAIJD,IAAAA;AAJI,MAKFI;;MAEA,CAACsD,UAAU,CAAClE,GAAD,GAAO;IACuB;AACzCuB,MAAAA,MAAM,CAACD,IAAPC,0EAAqF5C,mDAArF4C;;;UAGI,IAAI8H,SAAJ;;;MAGJ,CAACnF,UAAU,CAACjE,GAAD,GAAO;IACuB;AACzCsB,MAAAA,MAAM,CAACD,IAAPC,0EAAqF5C,mDAArF4C;;;UAGI,IAAI8H,SAAJ;;;SAGD;AACL5I,IAAAA,UADK;AAELD,IAAAA,YAFK;;AAILR,IAAAA,GAAG,GAAG;YACEwJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;;UAEtBC,kBAAkB,CAAC7J,EAAD,GAAM;QACiB;gBACnC/D,IAAI,GAAG+D,EAAE,CAAC1J,GAAH0J,CAAO6Z,WAAP7Z,CAAmB/D;AAChCwE,UAAAA,QAAQ,MAAMxE,yDAAyD9G,uFAAuF8G,6DAAtJ,EAAqN+D,EAArN,CAARS;;;;;;AAMJiZ,MAAAA,aAAa,CAAC,IAAD,EAAOvkB,QAAP,CAAbukB;aACOljB,GAAG,CAAC5B,IAAJ4B,CAASwJ,EAAE,CAAC1J,GAAZE;AAjBJ,KAAA;;AAoBLC,IAAAA,GAAG,CAACK,QAAD,EAAW;YACNkJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;;MAEiB;cACnCJ,eAAe,GAAGC,kBAAkB;AAC1C1R,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC2R,gBAAlB3R,KAAuCyR,oEAAoExJ,MAAM7K,UAAjH4C;AACAA,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4R,kBAAlB5R,mCAAuEyR,+FAA+FxJ,MAAM7K,UAA5K4C;AACAA,QAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,0BAA+DgI,eAAe,CAACC,EAAD,0CAA9EjI;AACAA,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4C,UAAU,CAAC7D,QAAD,CAAX,IAAyByD,MAAM,CAACzD,QAAD,CAAhDiB,oBAA8EjB,kBAAkB3B,gBAAgB6K,2DAAhHjI;;;UAGEjB,QAAQ,KAAKkJ,EAAE,CAACqc,QAAHrc,CAAY7K,QAAZ6K,GAAuB;AACtCA,QAAAA,EAAE,CAACqc,QAAHrc,CAAY7K,QAAZ6K,IAAwBlJ,QAAxBkJ;;YAEIvF,SAAS,CAACuF,EAAE,CAACgb,OAAJ,GAAc;;AAEzB1B,UAAAA,YAAY,CAAC,IAAD,EAAOnkB,QAAP,CAAZmkB;;;;aAIG7iB,GAAG,CAAC7B,IAAJ6B,CAASuJ,EAAE,CAAC1J,GAAZG,EAAiBK,QAAjBL;;;AAxCJ;;;AA8CT,SAAS6lB,gBAAT,CAA0B9Q,GAA1B,EAA+B;SACtB5B,eAAe,CAAC4B,GAAD,CAAf5B,CAAqBtT;;AAE9B;;;;;;AAMA,SAASimB,+BAAT,GAA2C;;MAErChiB,MAAM,CAACod,kBAAD,GAAsB;UACxB,IAAIgD,cAAJ,CAAmB,qBAAnB;;;EAGmC;AACzC5iB,IAAAA,MAAM,CAACN,SAAPM,CAAiB4f,kBAAkB,CAACrhB,GAAnBqhB,YAAkCmE,WAAnD/jB,mEAAiI4f,qBAAjI5f;;;QAGIiI,EAAE,GAAG2X;QACL;AACJrhB,IAAAA,GADI;AAEJgX,IAAAA,IAFI;AAGJE,IAAAA,GAAG,EAAE;AACHD,MAAAA;AADG;AAHD,MAMFvN;QACE0O,SAAS,GAAG;AAClB1O,EAAAA,EAAE,CAAC0O,SAAH1O,GAAe0O,SAAf1O;AACAA,EAAAA,EAAE,CAACoX,GAAHpX,GAAS+a,2BAA2B,CAAC/a,EAAD,CAApCA;AACAA,EAAAA,EAAE,CAACwc,GAAHxc,GAAS7H,MAAM,CAAC,IAAD,CAAf6H,CArByC;;;;MAyBrCnL,SAAS,CAACzB,MAAVyB,KAAqB,GAAG;UACpB;AACJkjB,MAAAA,QADI;AAEJ0E,MAAAA,OAFI;AAGJC,MAAAA;AAHI,QAIF7nB,SAAS,CAAC,CAAD;AACbmL,IAAAA,EAAE,CAAC+X,QAAH/X,GAAc+X,QAAd/X;AACAA,IAAAA,EAAE,CAACyc,OAAHzc,GAAayc,OAAbzc;AACAA,IAAAA,EAAE,CAAC0c,OAAH1c,GAAa0c,OAAb1c;AAjCuC,GAAA;;;QAqCnC2c,iBAAiB,GAAG;AACxBrP,IAAAA,IADwB;AAExBsP,IAAAA,cAAc,EAAE,CAAC,CAACrP,IAAI,CAACqP,cAFC;8BAGE;AAHF;QAKpB1M,OAAO,GAAG5Z,GAAG,CAACumB,YAAJvmB,CAAiBqmB,iBAAjBrmB,EA1CyB;;AA4CzCwmB,EAAAA,WAAW,CAACpO,SAAD,EAAY1O,EAAZ,CAAX8c;AACAA,EAAAA,WAAW,CAAC5M,OAAD,EAAUlQ,EAAV,CAAX8c;AACAA,EAAAA,WAAW,CAACxmB,GAAD,EAAM0J,EAAN,CAAX8c,CA9CyC;;AAgDzC9c,EAAAA,EAAE,CAACkQ,OAAHlQ,GAAakQ,OAAblQ;;EAE2C;AACzCuL,IAAAA,8BAA8B,CAACmD,SAAD,CAA9BnD;AACAJ,IAAAA,+BAA+B,CAAC+E,OAAD,EAAUjR,WAAV,CAA/BkM;;;SAGK;;;;AAIToR,+BAA+B,CAACxoB,SAAhCwoB,GAA4C;AAC1C1C,EAAAA,WAAW,EAAE0C,+BAD6B;;AAG1CpS,EAAAA,aAAa,CAAC4S,MAAD,EAAS;UACdzmB,GAAG,GAAGgmB,gBAAgB,CAAC,IAAD,EADR;;;WAIbnS,aAAa,CAAClV,KAAdkV,CAAoB7T,GAApB6T,EAAyBtV,SAAzBsV;AAPiC,GAAA;;AAU1C1I,EAAAA,gBAAgB,CAACT,IAAD,EAAOO,QAAP,EAAiB4F,OAAjB,EAA0B;UAClCnH,EAAE,GAAG4J,eAAe,CAAC,IAAD;;IAEiB;YACnCJ,eAAe,GAAGC,kBAAkB;AAC1C1R,MAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC2R,gBAAlB3R,KAAuCyR,oEAAoExJ,uCAAuCgB,QAAlJjJ;AACAA,MAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4R,kBAAlB5R,8BAAkEyR,oDAAoDxJ,uCAAuCgB,QAA7JjJ;AACAA,MAAAA,MAAM,CAACN,SAAPM,CAAiB2C,UAAU,CAAC6G,QAAD,CAA3BxJ,4DAAiGiI,iBAAiBgB,iDAAiDO,WAAnKxJ;;;UAGIwjB,eAAe,GAAGD,4BAA4B,CAACtb,EAAD,EAAKuB,QAAL;AACpDvB,IAAAA,EAAE,CAAC1J,GAAH0J,CAAOyB,gBAAPzB,CAAwBgB,IAAxBhB,EAA8Bub,eAA9Bvb,EAA+CmH,OAA/CnH;AArBwC,GAAA;;AAwB1Cgd,EAAAA,mBAAmB,CAAChc,IAAD,EAAOO,QAAP,EAAiB4F,OAAjB,EAA0B;UACrCnH,EAAE,GAAG4J,eAAe,CAAC,IAAD;UACpB2R,eAAe,GAAGD,4BAA4B,CAACtb,EAAD,EAAKuB,QAAL;AACpDvB,IAAAA,EAAE,CAAC1J,GAAH0J,CAAOgd,mBAAPhd,CAA2BgB,IAA3BhB,EAAiCub,eAAjCvb,EAAkDmH,OAAlDnH;AA3BwC,GAAA;;AA8B1CvK,EAAAA,cAAc,CAACga,EAAD,EAAK5Y,QAAL,EAAemS,MAAf,EAAuB;UAC7B1S,GAAG,GAAGgmB,gBAAgB,CAAC,IAAD;;IAEe;YACnCtc,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1B7R,MAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,0BAA+DgI,eAAe,CAACC,EAAD,0CAA9EjI;;;AAGF+G,IAAAA,eAAe,CAACxI,GAAD,EAAMO,QAAN,CAAfiI,CARmC;;;AAWnCxI,IAAAA,GAAG,CAACb,cAAJa,CAAmBrB,KAAnBqB,CAAyBA,GAAzBA,EAA8BzB,SAA9ByB;AACAqI,IAAAA,aAAa;AA1C2B,GAAA;;AA6C1ChJ,EAAAA,iBAAiB,CAAC8Z,EAAD,EAAK5Y,QAAL,EAAe;UACxBP,GAAG,GAAGgmB,gBAAgB,CAAC,IAAD;AAC5Bxd,IAAAA,eAAe,CAACxI,GAAD,EAAMO,QAAN,CAAfiI,CAF8B;;;AAK9BxI,IAAAA,GAAG,CAACX,iBAAJW,CAAsBrB,KAAtBqB,CAA4BA,GAA5BA,EAAiCzB,SAAjCyB;AACAqI,IAAAA,aAAa;AAnD2B,GAAA;;AAsD1CjJ,EAAAA,eAAe,CAACmB,QAAD,EAAW;UAClBP,GAAG,GAAGgmB,gBAAgB,CAAC,IAAD;AAC5Bxd,IAAAA,eAAe,CAACxI,GAAD,EAAMO,QAAN,CAAfiI,CAFwB;;;AAKxBxI,IAAAA,GAAG,CAACZ,eAAJY,CAAoBrB,KAApBqB,CAA0BA,GAA1BA,EAA+BzB,SAA/ByB;AACAqI,IAAAA,aAAa;AA5D2B,GAAA;;AA+D1CnJ,EAAAA,YAAY,CAACqB,QAAD,EAAWmS,MAAX,EAAmB;UACvB1S,GAAG,GAAGgmB,gBAAgB,CAAC,IAAD;;IAEe;YACnCtc,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1B7R,MAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,0BAA+DgI,eAAe,CAACC,EAAD,0CAA9EjI;;;AAGF+G,IAAAA,eAAe,CAACxI,GAAD,EAAMO,QAAN,CAAfiI,CAR6B;;;AAW7BxI,IAAAA,GAAG,CAACd,YAAJc,CAAiBrB,KAAjBqB,CAAuBA,GAAvBA,EAA4BzB,SAA5ByB;AACAqI,IAAAA,aAAa;AA3E2B,GAAA;;AA8E1CpJ,EAAAA,YAAY,CAACsB,QAAD,EAAW;UACfP,GAAG,GAAGgmB,gBAAgB,CAAC,IAAD;AAC5Bxd,IAAAA,eAAe,CAACxI,GAAD,EAAMO,QAAN,CAAfiI,CAFqB;;;UAKfnI,KAAK,GAAGL,GAAG,CAACf,YAAJe,CAAiBrB,KAAjBqB,CAAuBA,GAAvBA,EAA4BzB,SAA5ByB;AACdqI,IAAAA,aAAa;WACNhI;AArFiC,GAAA;;AAwF1CsmB,EAAAA,cAAc,CAACxN,EAAD,EAAK5Y,QAAL,EAAe;UACrBP,GAAG,GAAGgmB,gBAAgB,CAAC,IAAD;AAC5Bxd,IAAAA,eAAe,CAACxI,GAAD,EAAMO,QAAN,CAAfiI,CAF2B;;;UAKrBnI,KAAK,GAAGL,GAAG,CAAC2mB,cAAJ3mB,CAAmBrB,KAAnBqB,CAAyBA,GAAzBA,EAA8BzB,SAA9ByB;AACdqI,IAAAA,aAAa;WACNhI;AA/FiC,GAAA;;AAkG1CumB,EAAAA,qBAAqB,GAAG;UAChB5mB,GAAG,GAAGgmB,gBAAgB,CAAC,IAAD;;IAEe;YACnCtc,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1B7R,MAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,yGAA8IgI,eAAe,CAACC,EAAD,gHAA7JjI;;;WAGKzB,GAAG,CAAC4mB,qBAAJ5mB;AA1GiC,GAAA;;;;;;;;AAmH1C8S,EAAAA,aAAa,CAAC+T,SAAD,EAAY;UACjBnd,EAAE,GAAG4J,eAAe,CAAC,IAAD;;IAEiB;AACzC7R,MAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,6FAAkIgI,eAAe,CAACC,EAAD,2DAAjJjI;;;UAGI;AACJzB,MAAAA;AADI,QAEF0J;WACG1J,GAAG,CAAC8S,aAAJ9S,CAAkB6mB,SAAlB7mB;AA7HiC,GAAA;;;;;;;;AAsI1CgT,EAAAA,gBAAgB,CAAC6T,SAAD,EAAY;UACpBnd,EAAE,GAAG4J,eAAe,CAAC,IAAD;;IAEiB;AACzC7R,MAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,gGAAqIgI,eAAe,CAACC,EAAD,2DAApJjI;;;UAGI;AACJzB,MAAAA;AADI,QAEF0J;WACG1J,GAAG,CAACgT,gBAAJhT,CAAqB6mB,SAArB7mB;AAhJiC,GAAA;;;;;;AAuJ1C8mB,EAAAA,oBAAoB,CAACC,iBAAD,EAAoB;UAChCrd,EAAE,GAAG4J,eAAe,CAAC,IAAD;;IAEiB;AACzC7R,MAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,oGAAyIgI,eAAe,CAACC,EAAD,2DAAxJjI;;;UAGI;AACJzB,MAAAA;AADI,QAEF0J;WACG1J,GAAG,CAAC8mB,oBAAJ9mB,CAAyB+mB,iBAAzB/mB;AAjKiC,GAAA;;;;;;AAwK1CgnB,EAAAA,sBAAsB,CAACC,KAAD,EAAQ;UACtBvd,EAAE,GAAG4J,eAAe,CAAC,IAAD;;IAEiB;AACzC7R,MAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,sGAA2IgI,eAAe,CAACC,EAAD,2DAA1JjI;;;UAGI;AACJzB,MAAAA;AADI,QAEF0J;WACG1J,GAAG,CAACgnB,sBAAJhnB,CAA2BinB,KAA3BjnB;AAlLiC,GAAA;;MAqLtCsU,cAAc;UACV5K,EAAE,GAAG4J,eAAe,CAAC,IAAD;UACpB;AACJtT,MAAAA;AADI,QAEF0J;WACG1J,GAAG,CAACsU;AA1L6B,GAAA;;MA6LtCzH,YAAY;IAC6B;YACnCnD,EAAE,GAAG4J,eAAe,CAAC,IAAD,EADe;;AAGzC7R,MAAAA,MAAM,CAACF,OAAPE,CAAe8R,kBAAkB,CAAC7J,EAAD,CAAjCjI,yBAA8DiI,gKAA9DjI;;;WAGKukB,gBAAgB,CAAC,IAAD,CAAhBA,CAAuBnZ;AApMU,GAAA;;MAuMtCmX,WAAW;UACPta,EAAE,GAAG4J,eAAe,CAAC,IAAD;WACnB5J,EAAE,CAACkQ;AAzM8B,GAAA;;MA4MtCsN,aAAa;;;WAGR;AA/MiC,GAAA;;AAkN1CpF,EAAAA,MAAM,GAAG;UACDpY,EAAE,GAAG4J,eAAe,CAAC,IAAD;WACnB5J,EAAE,CAACwN,GAAHxN,CAAOsa;AApN0B,GAAA;;AAuN1Cvf,EAAAA,QAAQ,GAAG;UACHiF,EAAE,GAAG4J,eAAe,CAAC,IAAD;sBACR5J,EAAE,CAACwN,GAAHxN,CAAO/D;;;AAzNe,CAA5CsgB;AA6NA;AACA;;AAEA,MAAMkB,eAAe,GAAGhkB,WAAW,CAAC7E,IAAZ6E,CAAiBpB,mBAAmB,CAACwjB,8BAAD,CAApCpiB,EAAsE,CAACkP,WAAD,EAAcxT,QAAd,KAA2B;AACvHwT,EAAAA,WAAW,CAACxT,QAAD,CAAXwT,GAAwByT,+BAA+B,CAACjnB,QAAD,EAAW0mB,8BAA8B,CAAC1mB,QAAD,CAAzC,CAAvDwT;SACOA;AAFe,CAAAlP,EAGrBtB,MAAM,CAAC,IAAD,CAHesB,CAAxB;AAIArB,gBAAgB,CAACmkB,+BAA+B,CAACxoB,SAAjC,EAA4C0pB,eAA5C,CAAhBrlB;;AAE2C;AACzCqT,EAAAA,8CAA8C,CAAC8Q,+BAA+B,CAACxoB,SAAjC,CAA9C0X;;;AAGFzT,MAAM,CAACukB,+BAAD,CAANvkB;AACAS,IAAI,CAAC8jB,+BAA+B,CAACxoB,SAAjC,CAAJ0E;;MAEMilB,oBAAoB,GAAGnB;AAE7B;;;;AAGA,MAAM;AACJhpB,EAAAA,OAAO,EAAEoqB;AADL,IAEFnqB,KAFJ;AAGA,MAAM;AACJ8E,EAAAA,cAAc,EAAEslB,gBADZ;AAEJzlB,EAAAA,MAAM,EAAE0lB,YAFJ;AAGJxmB,EAAAA,cAAc,EAAEymB,oBAHZ;AAIJ1lB,EAAAA,gBAAgB,EAAE2lB,sBAJd;AAKJC,EAAAA,YALI;AAMJ5oB,EAAAA,wBAAwB,EAAE6oB,0BANtB;AAOJ5lB,EAAAA,mBAAmB,EAAE6lB,qBAPjB;AAQJC,EAAAA,qBARI;AASJC,EAAAA,iBATI;AAUJroB,EAAAA,cAAc,EAAEsoB;AAVZ,IAWF7pB,MAXJ;AAYA,MAAM;AACJ8E,EAAAA,IAAI,EAAEglB,WADF;AAEJnrB,EAAAA,MAAM,EAAEorB,WAFJ;AAGJhoB,EAAAA,GAAG,EAAEioB;AAHD,IAIFhrB,KAAK,CAACO,SAJV;AAKA,MAAM0qB,KAAK,GAAG,GAAG1jB,QAAjB;;AAEA,SAAS2jB,UAAT,CAAoBpkB,GAApB,EAAyB;MACnBA,GAAG,IAAIA,GAAG,CAACS,UAAU;WAChBT,GAAG,CAACS,QAAJT;AADT,SAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;WAC3BmkB,KAAK,CAAC7pB,IAAN6pB,CAAWnkB,GAAXmkB;AADF,GAAA,MAEA;WACEnkB,GAAG,GAAG;;;;AAIjB,SAASqkB,aAAT,CAAuBrkB,GAAvB,EAA4B;SACnBA,GAAG,KAAKlG;;;AAGjB,SAASwqB,YAAT,CAAsBtkB,GAAtB,EAA2B;SAClB,OAAOA,GAAP,KAAe;;;AAGxB,SAASukB,UAAT,CAAoBvkB,GAApB,EAAyB;SAChB,OAAOA,GAAP,KAAe;;;AAGxB,MAAMwkB,eAAe,GAAG,IAAIhpB,OAAJ,EAAxB;;AAEA,SAASipB,aAAT,CAAuB9rB,KAAvB,EAA8B0D,KAA9B,EAAqC;AACnCmoB,EAAAA,eAAe,CAACroB,GAAhBqoB,CAAoB7rB,KAApB6rB,EAA2BnoB,KAA3BmoB;;;AAGF,MAAME,MAAM,GAAGC,YAAY,IAAIH,eAAe,CAACtoB,GAAhBsoB,CAAoBG,YAApBH,KAAqCG,YAApE;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BxoB,KAA7B,EAAoC;SAC3BwoB,QAAQ,CAACC,iBAATD,CAA2BxoB,KAA3BwoB,IAAoCA,QAAQ,CAACE,QAATF,CAAkBxoB,KAAlBwoB,CAApCA,GAA+DxoB;;AAExE;;;;;;;AAOA,SAAS2oB,gBAAT,CAA0BloB,UAA1B,EAAsC;MAChCinB,gBAAgB,CAACzpB,IAAjBypB,CAAsBjnB,UAAtBinB,EAAkC,OAAlCA,GAA4C;AAC9CjnB,IAAAA,UAAU,CAACT,KAAXS,GAAmB4nB,MAAM,CAAC5nB,UAAU,CAACT,KAAZ,CAAzBS;;;SAGKA;;;AAGT,SAASmoB,gBAAT,CAA0BJ,QAA1B,EAAoCK,YAApC,EAAkDC,cAAlD,EAAkE;QAC1DC,UAAU,GAAGnB,WAAW,CAAC3pB,IAAZ2pB,CAAiBL,qBAAqB,CAACuB,cAAD,CAAtClB,EAAwDJ,qBAAqB,CAACsB,cAAD,CAA7ElB;AACnBmB,EAAAA,UAAU,CAAC1mB,OAAX0mB,CAAmBnkB,GAAG,IAAI;QACpBnE,UAAU,GAAG6mB,0BAA0B,CAACwB,cAAD,EAAiBlkB,GAAjB,EADnB;;;;;;QAOpB,CAACnE,UAAU,CAACJ,cAAc;AAC5BI,MAAAA,UAAU,GAAGuoB,cAAc,CAACR,QAAD,EAAW/nB,UAAX,EAAuB8nB,SAAvB,CAA3B9nB;;;AAGF0mB,IAAAA,oBAAoB,CAAC0B,YAAD,EAAejkB,GAAf,EAAoBnE,UAApB,CAApB0mB;AAXF,GAAA4B;AAaAtB,EAAAA,iBAAiB,CAACoB,YAAD,CAAjBpB;;;AAGF,MAAMwB,oBAAN,CAA2B;AACzB/F,EAAAA,WAAW,CAACsF,QAAD,EAAWxoB,KAAX,EAAkB;SACtB8oB,iBAAiB9oB;SACjBwoB,WAAWA;;;AAGlB3oB,EAAAA,GAAG,CAACgpB,YAAD,EAAejkB,GAAf,EAAoB;UACf;AACJkkB,MAAAA,cADI;AAEJN,MAAAA;AAFI,QAGF;UACExoB,KAAK,GAAG8oB,cAAc,CAAClkB,GAAD;UACtB;AACJme,MAAAA;AADI,QAEFyF;AACJzF,IAAAA,aAAa,CAAC+F,cAAD,EAAiBlkB,GAAjB,CAAbme;WACOyF,QAAQ,CAACE,QAATF,CAAkBxoB,KAAlBwoB;;;AAGT1oB,EAAAA,GAAG,CAAC+oB,YAAD,EAAejkB,GAAf,EAAoB5E,KAApB,EAA2B;UACtB;AACJ8oB,MAAAA,cADI;AAEJN,MAAAA,QAAQ,EAAE;AACR7F,QAAAA;AADQ;AAFN,QAKF;UACEuG,QAAQ,GAAGJ,cAAc,CAAClkB,GAAD;;QAE3BskB,QAAQ,KAAKlpB,OAAO;AACtB8oB,MAAAA,cAAc,CAAClkB,GAAD,CAAdkkB,GAAsB9oB,KAAtB8oB;AACAnG,MAAAA,YAAY,CAACmG,cAAD,EAAiBlkB,GAAjB,CAAZ+d;AAFF,WAGO,IAAI/d,GAAG,KAAK,QAARA,IAAoBoiB,SAAS,CAAC8B,cAAD,CAAjC,EAAmD;;;;;AAKxDnG,MAAAA,YAAY,CAACmG,cAAD,EAAiBlkB,GAAjB,CAAZ+d;;;WAGK;;;AAGTwG,EAAAA,cAAc,CAACN,YAAD,EAAejkB,GAAf,EAAoB;UAC1B;AACJkkB,MAAAA,cADI;AAEJN,MAAAA,QAAQ,EAAE;AACR7F,QAAAA;AADQ;AAFN,QAKF;WACGmG,cAAc,CAAClkB,GAAD;AACrB+d,IAAAA,YAAY,CAACmG,cAAD,EAAiBlkB,GAAjB,CAAZ+d;WACO;;;AAGTrkB,EAAAA,KAAK,CAACuqB,YAAD,EAAeO,OAAf,EAAwBC,QAAxB,EAAkC;;;;AAIvCC,EAAAA,SAAS,CAAC3N,MAAD,EAAS0N,QAAT,EAAmBE,SAAnB,EAA8B;;;;AAIvC5R,EAAAA,GAAG,CAACkR,YAAD,EAAejkB,GAAf,EAAoB;UACf;AACJkkB,MAAAA,cADI;AAEJN,MAAAA,QAAQ,EAAE;AACRzF,QAAAA;AADQ;AAFN,QAKF;AACJA,IAAAA,aAAa,CAAC+F,cAAD,EAAiBlkB,GAAjB,CAAbme;WACOne,GAAG,IAAIkkB;;;AAGhBU,EAAAA,OAAO,CAACX,YAAD,EAAe;UACd;AACJC,MAAAA;AADI,QAEF;WACGlB,WAAW,CAAC3pB,IAAZ2pB,CAAiBL,qBAAqB,CAACuB,cAAD,CAAtClB,EAAwDJ,qBAAqB,CAACsB,cAAD,CAA7ElB;;;AAGTP,EAAAA,YAAY,CAACwB,YAAD,EAAe;UACnBY,kBAAkB,GAAGpC,YAAY,CAACwB,YAAD;;QAEnC,CAACY,oBAAoB;aAChBA;;;UAGH;AACJX,MAAAA,cADI;AAEJN,MAAAA;AAFI,QAGF;UACEkB,kBAAkB,GAAGrC,YAAY,CAACyB,cAAD;;QAEnC,CAACY,oBAAoB;AACvBd,MAAAA,gBAAgB,CAACJ,QAAD,EAAWK,YAAX,EAAyBC,cAAzB,CAAhBF;;;WAGKc;;;AAGT3nB,EAAAA,cAAc,CAAC8mB,YAAD,EAAezrB,SAAf,EAA0B;IACK;YACnC,IAAI4D,KAAJ,yDAAkE+mB,UAAU,CAAC,KAAKe,cAAN,qDAA5E;;;;AAIVnnB,EAAAA,cAAc,CAACknB,YAAD,EAAe;UACrB;AACJC,MAAAA;AADI,QAEF;WACG7B,gBAAgB,CAAC6B,cAAD;;;AAGzBrqB,EAAAA,wBAAwB,CAACoqB,YAAD,EAAejkB,GAAf,EAAoB;UACpC;AACJkkB,MAAAA,cADI;AAEJN,MAAAA;AAFI,QAGF;UACE;AACJzF,MAAAA;AADI,QAEF,KAAKyF,SAPiC;;AAS1CzF,IAAAA,aAAa,CAAC+F,cAAD,EAAiBlkB,GAAjB,CAAbme;QACI4G,IAAI,GAAGrC,0BAA0B,CAACwB,cAAD,EAAiBlkB,GAAjB;;QAEjCojB,aAAa,CAAC2B,IAAD,GAAQ;aAChBA;;;UAGHC,gBAAgB,GAAGtC,0BAA0B,CAACuB,YAAD,EAAejkB,GAAf;;QAE/C,CAACojB,aAAa,CAAC4B,gBAAD,GAAoB;aAC7BA;AAnBiC,KAAA;;;;;AAyB1CD,IAAAA,IAAI,GAAGX,cAAc,CAACR,QAAD,EAAWmB,IAAX,EAAiBpB,SAAjB,CAArBoB;;QAEI,CAACA,IAAI,CAACtpB,cAAc;;;;;;AAMtB8mB,MAAAA,oBAAoB,CAAC0B,YAAD,EAAejkB,GAAf,EAAoB+kB,IAApB,CAApBxC;;;WAGKwC;;;AAGTlC,EAAAA,iBAAiB,CAACoB,YAAD,EAAe;UACxB;AACJC,MAAAA,cADI;AAEJN,MAAAA;AAFI,QAGF;AACJI,IAAAA,gBAAgB,CAACJ,QAAD,EAAWK,YAAX,EAAyBC,cAAzB,CAAhBF;AACAnB,IAAAA,iBAAiB,CAACqB,cAAD,CAAjBrB;WACO;;;AAGT/mB,EAAAA,cAAc,CAACmoB,YAAD,EAAejkB,GAAf,EAAoBnE,UAApB,EAAgC;UACtC;AACJqoB,MAAAA,cADI;AAEJN,MAAAA;AAFI,QAGF;UACE;AACJ7F,MAAAA;AADI,QAEF6F;UACE;AACJnoB,MAAAA;AADI,QAEFI,WAVwC;;;;;;;;QAkBxCinB,gBAAgB,CAACzpB,IAAjBypB,CAAsBjnB,UAAtBinB,EAAkC,UAAlCA,KAAiD,CAACA,gBAAgB,CAACzpB,IAAjBypB,CAAsBjnB,UAAtBinB,EAAkC,OAAlCA,GAA4C;YAC1FmC,kBAAkB,GAAGvC,0BAA0B,CAACwB,cAAD,EAAiBlkB,GAAjB;AACrDnE,MAAAA,UAAU,CAACT,KAAXS,GAAmBopB,kBAAkB,CAAC7pB,KAAtCS;;;AAGF0mB,IAAAA,oBAAoB,CAAC2B,cAAD,EAAiBlkB,GAAjB,EAAsB+jB,gBAAgB,CAACloB,UAAD,CAAtC,CAApB0mB;;QAEI9mB,YAAY,KAAK,OAAO;AAC1B8mB,MAAAA,oBAAoB,CAAC0B,YAAD,EAAejkB,GAAf,EAAoBokB,cAAc,CAACR,QAAD,EAAW/nB,UAAX,EAAuB8nB,SAAvB,CAAlC,CAApBpB;;;AAGFxE,IAAAA,YAAY,CAACmG,cAAD,EAAiBlkB,GAAjB,CAAZ+d;WACO;;;AAhMgB;;AAqM3B,SAASmH,iBAAT,CAA2BtB,QAA3B,EAAqCxoB,KAArC,EAA4C;SACnCwoB,QAAQ,CAACC,iBAATD,CAA2BxoB,KAA3BwoB,IAAoCA,QAAQ,CAACuB,gBAATvB,CAA0BxoB,KAA1BwoB,CAApCA,GAAuExoB;;;AAGhF,MAAMgqB,eAAN,CAAsB;AACpB9G,EAAAA,WAAW,CAACsF,QAAD,EAAWxoB,KAAX,EAAkB;SACtB8oB,iBAAiB9oB;SACjBwoB,WAAWA;;;AAGlB3oB,EAAAA,GAAG,CAACgpB,YAAD,EAAejkB,GAAf,EAAoB;UACf;AACJ4jB,MAAAA,QADI;AAEJM,MAAAA;AAFI,QAGF;UACE9oB,KAAK,GAAG8oB,cAAc,CAAClkB,GAAD;UACtB;AACJme,MAAAA;AADI,QAEFyF;AACJzF,IAAAA,aAAa,CAAC+F,cAAD,EAAiBlkB,GAAjB,CAAbme;WACOyF,QAAQ,CAACuB,gBAATvB,CAA0BxoB,KAA1BwoB;;;AAGT1oB,EAAAA,GAAG,CAAC+oB,YAAD,EAAejkB,GAAf,EAAoB5E,KAApB,EAA2B;IACe;YACnC;AACJ8oB,QAAAA;AADI,UAEF;YACE,IAAI9nB,KAAJ,kCAA2C4D,GAAG,CAACR,QAAJQ,WAAuBkkB,qBAAqBA,+BAAvF;;;;AAMVK,EAAAA,cAAc,CAACN,YAAD,EAAejkB,GAAf,EAAoB;IACW;YACnC;AACJkkB,QAAAA;AADI,UAEF;YACE,IAAI9nB,KAAJ,qCAA8C4D,GAAG,CAACR,QAAJQ,WAAuBkkB,qBAAqBA,+BAA1F;;;;AAMVxqB,EAAAA,KAAK,CAACuqB,YAAD,EAAeO,OAAf,EAAwBC,QAAxB,EAAkC;;;;AAIvCC,EAAAA,SAAS,CAAC3N,MAAD,EAAS0N,QAAT,EAAmBE,SAAnB,EAA8B;;;;AAIvC5R,EAAAA,GAAG,CAACkR,YAAD,EAAejkB,GAAf,EAAoB;UACf;AACJkkB,MAAAA,cADI;AAEJN,MAAAA,QAAQ,EAAE;AACRzF,QAAAA;AADQ;AAFN,QAKF;AACJA,IAAAA,aAAa,CAAC+F,cAAD,EAAiBlkB,GAAjB,CAAbme;WACOne,GAAG,IAAIkkB;;;AAGhBU,EAAAA,OAAO,CAACX,YAAD,EAAe;UACd;AACJC,MAAAA;AADI,QAEF;WACGlB,WAAW,CAAC3pB,IAAZ2pB,CAAiBL,qBAAqB,CAACuB,cAAD,CAAtClB,EAAwDJ,qBAAqB,CAACsB,cAAD,CAA7ElB;;;AAGT7lB,EAAAA,cAAc,CAAC8mB,YAAD,EAAezrB,SAAf,EAA0B;IACK;YACnC;AACJ0rB,QAAAA;AADI,UAEF;YACE,IAAI9nB,KAAJ,yDAAkE8nB,qBAAqBA,yCAAvF;;;;AAIVrqB,EAAAA,wBAAwB,CAACoqB,YAAD,EAAejkB,GAAf,EAAoB;UACpC;AACJkkB,MAAAA,cADI;AAEJN,MAAAA;AAFI,QAGF;UACE;AACJzF,MAAAA;AADI,QAEFyF,SAPsC;;AAS1CzF,IAAAA,aAAa,CAAC+F,cAAD,EAAiBlkB,GAAjB,CAAbme;QACI4G,IAAI,GAAGrC,0BAA0B,CAACwB,cAAD,EAAiBlkB,GAAjB;;QAEjCojB,aAAa,CAAC2B,IAAD,GAAQ;aAChBA;;;UAGHC,gBAAgB,GAAGtC,0BAA0B,CAACuB,YAAD,EAAejkB,GAAf;;QAE/C,CAACojB,aAAa,CAAC4B,gBAAD,GAAoB;aAC7BA;AAnBiC,KAAA;;;;;AAyB1CD,IAAAA,IAAI,GAAGX,cAAc,CAACR,QAAD,EAAWmB,IAAX,EAAiBG,iBAAjB,CAArBH;;QAEIjC,gBAAgB,CAACzpB,IAAjBypB,CAAsBiC,IAAtBjC,EAA4B,KAA5BA,GAAoC;AACtCiC,MAAAA,IAAI,CAAC7pB,GAAL6pB,GAAWlsB,SAAXksB,CADsC;;;QAIpC,CAACA,IAAI,CAACtpB,cAAc;;;;;;AAMtB8mB,MAAAA,oBAAoB,CAAC0B,YAAD,EAAejkB,GAAf,EAAoB+kB,IAApB,CAApBxC;;;WAGKwC;;;AAGTlC,EAAAA,iBAAiB,CAACoB,YAAD,EAAe;IACa;YACnC;AACJC,QAAAA;AADI,UAEF;YACE,IAAI9nB,KAAJ,kDAA2D8nB,qBAAqBA,8BAAhF;;;;AAMVpoB,EAAAA,cAAc,CAACmoB,YAAD,EAAejkB,GAAf,EAAoBnE,UAApB,EAAgC;IACD;YACnC;AACJqoB,QAAAA;AADI,UAEF;YACE,IAAI9nB,KAAJ,6CAAsD4D,GAAG,CAACR,QAAJQ,WAAuBkkB,qBAAqBA,+BAAlG;;;;AAvIU;;AA+ItB,SAASmB,OAAT,CAAiBC,aAAjB,EAAgC;MAC1BlD,SAAS,CAACkD,aAAD,GAAiB;WACrBA,aAAa,CAACtqB,GAAdsqB,CAAkBnP,IAAI,IAAI;YACzBoP,QAAQ,GAAG9B,MAAM,CAACtN,IAAD;;UAEnBoP,QAAQ,KAAKpP,MAAM;eACdkP,OAAO,CAACE,QAAD;;;aAGTpP;AAPF,KAAAmP;;;QAWHvmB,GAAG,GAAGujB,YAAY,CAACD,gBAAgB,CAACiD,aAAD,CAAjB;QAClBtD,KAAK,GAAGW,qBAAqB,CAAC2C,aAAD;SAC5BtC,WAAW,CAAC3pB,IAAZ2pB,CAAiBhB,KAAjBgB,EAAwBJ,qBAAqB,CAAC0C,aAAD,CAA7CtC,EAA8D/kB,MAA9D+kB,CAAqE,CAACwC,IAAD,EAAOxlB,GAAP,KAAe;UACnFmW,IAAI,GAAGmP,aAAa,CAACtlB,GAAD;UACpBulB,QAAQ,GAAG9B,MAAM,CAACtN,IAAD;;QAEnBoP,QAAQ,KAAKpP,MAAM;AACrBqP,MAAAA,IAAI,CAACxlB,GAAD,CAAJwlB,GAAYH,OAAO,CAACE,QAAD,CAAnBC;AADF,WAEO;AACLA,MAAAA,IAAI,CAACxlB,GAAD,CAAJwlB,GAAYrP,IAAZqP;;;WAGKA;AAVF,GAAAxC,EAWJjkB,GAXIikB;;;AAcT,MAAMyC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAEC,YAAY,IAAI;UAChBzB,cAAc,GAAGT,MAAM,CAACkC,YAAD,EADP;;QAGlB,CAACzB,cAAD,IAAmBA,cAAc,KAAKyB,cAAc;aAC/C;;;UAGH5mB,GAAG,GAAGsmB,OAAO,CAACM,YAAD;WACZ,CAAC,QAAD,EAAW;AAChBC,MAAAA,MAAM,EAAE7mB;AADQ,KAAX;AATO,GAAA;AAahB8mB,EAAAA,OAAO,EAAE,MAAM;WACN;AAdO,GAAA;AAgBhB/M,EAAAA,IAAI,EAAE,MAAM;WACH;;AAjBO,CAAlB;AAoBA;;AAEA,SAASgN,SAAT,GAAqB;;;MAGf,OAAOC,UAAP,KAAsB,aAAa;WAC9BA;;;MAGL,OAAOC,IAAP,KAAgB,aAAa;WACxBA;;;MAGL,OAAOtF,MAAP,KAAkB,aAAa;WAC1BA;;;MAGL,OAAOuF,MAAP,KAAkB,aAAa;WAC1BA;AAhBU,GAAA;;;SAoBZ;;;AAGT,SAASC,IAAT,GAAgB;;QAMRD,MAAM,GAAGH,SAAS,GANV;;;;;QAWRK,kBAAkB,GAAGF,MAAM,CAACE,kBAAPF,IAA6B;AACxDlD,EAAAA,WAAW,CAAC1pB,IAAZ0pB,CAAiBoD,kBAAjBpD,EAAqC0C,SAArC1C;AACAkD,EAAAA,MAAM,CAACE,kBAAPF,GAA4BE,kBAA5BF;;;AAGyC;AACzCC,EAAAA,IAAI;;;AAGN,SAASE,kBAAT,CAA4BhrB,KAA5B,EAAmC;MAC7B6oB,YAAY,GAAGprB;;MAEfupB,SAAS,CAAChnB,KAAD,GAAS;AACpB6oB,IAAAA,YAAY,GAAG,EAAfA;AADF,SAEO,IAAIX,UAAU,CAACloB,KAAD,CAAd,EAAuB;AAC5B6oB,IAAAA,YAAY,GAAG,EAAfA;;;SAGKA;;;AAGT,MAAMoC,kBAAkB,GAAGptB,MAAM,CAACT,SAAlC;;AAEA,SAAS8tB,wBAAT,CAAkClrB,KAAlC,EAAyC;;MAEnCA,KAAK,KAAK,MAAM;WACX;AAH8B,GAAA;;;MAOnC,OAAOA,KAAP,KAAiB,UAAU;WACtB;;;MAGLgnB,SAAS,CAAChnB,KAAD,GAAS;WACb;;;QAGH6T,KAAK,GAAGoT,gBAAgB,CAACjnB,KAAD;SACvB6T,KAAK,KAAKoX,kBAAVpX,IAAgCA,KAAK,KAAK,IAA1CA,IAAkDoT,gBAAgB,CAACpT,KAAD,CAAhBoT,KAA4B;;;AAGvF,MAAMkE,oBAAoB,GAAG,CAACxnB,GAAD,EAAMiB,GAAN,KAAc;;AAA3C,CAAA;;AAIA,MAAMwmB,mBAAmB,GAAG,CAACznB,GAAD,EAAMiB,GAAN,KAAc;;AAA1C,CAAA;;AAIA,MAAMymB,sBAAsB,GAAGrrB,KAAK,IAAIA,KAAxC;;AAEA,SAASgpB,cAAT,CAAwBR,QAAxB,EAAkC/nB,UAAlC,EAA8C6qB,QAA9C,EAAwD;QAChD;AACJxrB,IAAAA,GADI;AAEJD,IAAAA;AAFI,MAGFY;;MAEAinB,gBAAgB,CAACzpB,IAAjBypB,CAAsBjnB,UAAtBinB,EAAkC,OAAlCA,GAA4C;AAC9CjnB,IAAAA,UAAU,CAACT,KAAXS,GAAmB6qB,QAAQ,CAAC9C,QAAD,EAAW/nB,UAAU,CAACT,KAAtB,CAA3BS;AADF,SAEO;QACD,CAACunB,aAAa,CAACnoB,GAAD,GAAO;AACvBY,MAAAA,UAAU,CAACZ,GAAXY,GAAiB,YAAY;;eAEpB6qB,QAAQ,CAAC9C,QAAD,EAAW3oB,GAAG,CAAC5B,IAAJ4B,CAASwoB,MAAM,CAAC,IAAD,CAAfxoB,CAAX;AAFjB,OAAAY;;;QAME,CAACunB,aAAa,CAACloB,GAAD,GAAO;AACvBW,MAAAA,UAAU,CAACX,GAAXW,GAAiB,UAAUT,KAAV,EAAiB;;;;;;AAMhCF,QAAAA,GAAG,CAAC7B,IAAJ6B,CAASuoB,MAAM,CAAC,IAAD,CAAfvoB,EAAuB0oB,QAAQ,CAAC+C,WAAT/C,CAAqBxoB,KAArBwoB,CAAvB1oB;AANF,OAAAW;;;;SAWGA;;;AAGT,MAAM+qB,gBAAN,CAAuB;AACrBtI,EAAAA,WAAW,CAAC1S,OAAD,EAAU;SACdib,kBAAkBJ;SAClB1I,eAAeyI;SACfrI,gBAAgBoI;SAChB1C,oBAAoByC;SACpBQ,cAAc,IAAIvsB,OAAJ;;QAEf,CAAC6oB,aAAa,CAACxX,OAAD,GAAW;YACrB;AACJib,QAAAA,eADI;AAEJ9I,QAAAA,YAFI;AAGJI,QAAAA,aAHI;AAIJ0F,QAAAA;AAJI,UAKFjY;WACCib,kBAAkBxD,YAAY,CAACwD,eAAD,CAAZxD,GAAgCwD,eAAhCxD,GAAkDoD;WACpE1I,eAAesF,YAAY,CAACtF,YAAD,CAAZsF,GAA6BtF,YAA7BsF,GAA4CmD;WAC3DrI,gBAAgBkF,YAAY,CAAClF,aAAD,CAAZkF,GAA8BlF,aAA9BkF,GAA8CkD;WAC9D1C,oBAAoBR,YAAY,CAACQ,iBAAD,CAAZR,GAAkCQ,iBAAlCR,GAAsDiD;;;;AAInFxC,EAAAA,QAAQ,CAAC1oB,KAAD,EAAQ;UACR2rB,cAAc,GAAGtD,MAAM,CAACroB,KAAD;UACvB4rB,SAAS,GAAG,KAAKH,eAAL,CAAqBE,cAArB;;QAEd,KAAKlD,iBAAL,CAAuBmD,SAAvB,GAAmC;YAC/BrnB,CAAC,GAAG,KAAKsnB,gBAAL,CAAsBF,cAAtB,EAAsCC,SAAtC,EAD2B;;;aAI9BrnB,CAAC,CAACoB,QAAFpB,KAAevE,KAAfuE,GAAuBvE,KAAvBuE,GAA+BA,CAAC,CAACunB;;;WAGnCF;;;AAGT7B,EAAAA,gBAAgB,CAAC/pB,KAAD,EAAQ;AACtBA,IAAAA,KAAK,GAAGqoB,MAAM,CAACroB,KAAD,CAAdA;UACM4rB,SAAS,GAAG,KAAKH,eAAL,CAAqBzrB,KAArB;;QAEd,KAAKyoB,iBAAL,CAAuBmD,SAAvB,GAAmC;aAC9B,KAAKC,gBAAL,CAAsB7rB,KAAtB,EAA6B4rB,SAA7B,EAAwCjmB;;;WAG1CimB;;;AAGTL,EAAAA,WAAW,CAAC/mB,CAAD,EAAI;WACN6jB,MAAM,CAAC7jB,CAAD;;;AAGfqnB,EAAAA,gBAAgB,CAAC7rB,KAAD,EAAQ+rB,cAAR,EAAwB;UAChC;AACJL,MAAAA;AADI,QAEF;QACAM,aAAa,GAAGN,WAAW,CAAC7rB,GAAZ6rB,CAAgBK,cAAhBL;;QAEhBM,eAAe;aACVA;;;UAGHxD,QAAQ,GAAG;AACjBwD,IAAAA,aAAa,GAAG;UACVF,WAAW;cACPG,eAAe,GAAG,IAAIhD,oBAAJ,CAAyBT,QAAzB,EAAmCuD,cAAnC,EADX;;cAGPzvB,KAAK,GAAG,IAAID,KAAJ,CAAU2uB,kBAAkB,CAACe,cAAD,CAA5B,EAA8CE,eAA9C;AACd7D,QAAAA,aAAa,CAAC9rB,KAAD,EAAQ0D,KAAR,CAAbooB;AACAjB,QAAAA,oBAAoB,CAAC,IAAD,EAAO,UAAP,EAAmB;AACrCnnB,UAAAA,KAAK,EAAE1D;AAD8B,SAAnB,CAApB6qB;eAGO7qB;AATK,OAAA;;UAYVqJ,WAAW;cACPumB,eAAe,GAAG,IAAIlC,eAAJ,CAAoBxB,QAApB,EAA8BuD,cAA9B,EADX;;cAGPzvB,KAAK,GAAG,IAAID,KAAJ,CAAU2uB,kBAAkB,CAACe,cAAD,CAA5B,EAA8CG,eAA9C;AACd9D,QAAAA,aAAa,CAAC9rB,KAAD,EAAQ0D,KAAR,CAAbooB;AACAjB,QAAAA,oBAAoB,CAAC,IAAD,EAAO,UAAP,EAAmB;AACrCnnB,UAAAA,KAAK,EAAE1D;AAD8B,SAAnB,CAApB6qB;eAGO7qB;;;AApBK,KAAhB0vB;AAwBAN,IAAAA,WAAW,CAAC5rB,GAAZ4rB,CAAgBK,cAAhBL,EAAgCM,aAAhCN;WACOM;;;AAvFY;AA2FvB;;AAEA;;;;;;;;AAOA,SAASP,eAAT,CAAyBzrB,KAAzB,EAAgC;SACvBA;;;AAGT,MAAMmsB,gBAAgB,GAAG,IAAIX,gBAAJ,CAAqB;AAC5CzI,EAAAA,aAD4C;AAE5CJ,EAAAA,YAF4C;AAG5C8I,EAAAA;AAH4C,CAArB,CAAzB;AAsBA;;;;;;AAMA;AACA;AACA;;;AAEA,MAAMW,iBAAiB,GAAG5qB,MAAM,CAAC,IAAD,CAAhC;AACA,MAAM6qB,iBAAiB,GAAG7qB,MAAM,CAAC,IAAD,CAAhC;;AAEA,SAAS8qB,YAAT,CAAsB1nB,GAAtB,EAA2B;MACrBqE,EAAE,GAAGmjB,iBAAiB,CAACxnB,GAAD;;MAEtBlB,WAAW,CAACuF,EAAD,GAAM;AACnBA,IAAAA,EAAE,GAAGmjB,iBAAiB,CAACxnB,GAAD,CAAjBwnB,GAAyB,YAAY;YAClC/iB,EAAE,GAAG4J,eAAe,CAAC,IAAD;YACpB;AACJ8S,QAAAA;AADI,UAEF1c;aACG0c,OAAO,CAAC1c,EAAE,CAAC0O,SAAJ,EAAenT,GAAf;AALhB,KAAAqE;;;SASKA;;;AAGT,SAASsjB,YAAT,CAAsB3nB,GAAtB,EAA2B;MACrBqE,EAAE,GAAGojB,iBAAiB,CAACznB,GAAD;;MAEtBlB,WAAW,CAACuF,EAAD,GAAM;AACnBA,IAAAA,EAAE,GAAGojB,iBAAiB,CAACznB,GAAD,CAAjBynB,GAAyB,UAAUlsB,QAAV,EAAoB;YAC1CkJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;YACpB;AACJ6S,QAAAA;AADI,UAEFzc;AACJlJ,MAAAA,QAAQ,GAAGgsB,gBAAgB,CAACpC,gBAAjBoC,CAAkChsB,QAAlCgsB,CAAXhsB;AACA2lB,MAAAA,OAAO,CAACzc,EAAE,CAAC0O,SAAJ,EAAenT,GAAf,EAAoBzE,QAApB,CAAP2lB;AANF,KAAA7c;;;SAUKA;;;AAGT,SAASujB,kBAAT,CAA4B/Y,UAA5B,EAAwC;SAC/B,YAAY;UACXpK,EAAE,GAAG4J,eAAe,CAAC,IAAD;UACpB;AACJmO,MAAAA,QADI;AAEJrJ,MAAAA;AAFI,QAGF1O;UACEJ,EAAE,GAAG8O,SAAS,CAACtE,UAAD;WACb2N,QAAQ,CAAC/X,EAAE,CAAC0O,SAAJ,EAAe9O,EAAf,EAAmBhG,YAAY,CAAChF,IAAbgF,CAAkB/E,SAAlB+E,CAAnB;AAPjB;;;AAWF,SAASwpB,wBAAT,CAAkCC,UAAlC,EAA8C7gB,KAA9C,EAAqD8gB,OAArD,EAA8D;MACxDC;;;;;;;;;;;MAWA7oB,UAAU,CAAC2oB,UAAD,GAAc;AAC1BE,IAAAA,iBAAiB,GAAG,cAAcF,UAAd,CAAyB,EAA7CE;AADF,SAEO;AACLA,IAAAA,iBAAiB,GAAG,YAAY;;;YAGxB,IAAI1jB,SAAJ,CAAc,qBAAd;AAHR,KAAA0jB,CADK;;;AAQL7qB,IAAAA,cAAc,CAAC6qB,iBAAD,EAAoBF,UAApB,CAAd3qB;AACAA,IAAAA,cAAc,CAAC6qB,iBAAiB,CAACxvB,SAAnB,EAA8BsvB,UAAU,CAACtvB,SAAzC,CAAd2E;AACArB,IAAAA,cAAc,CAACksB,iBAAiB,CAACxvB,SAAnB,EAA8B,aAA9B,EAA6C;AACzDqT,MAAAA,QAAQ,EAAE,IAD+C;AAEzDpQ,MAAAA,YAAY,EAAE,IAF2C;AAGzDL,MAAAA,KAAK,EAAE4sB;AAHkD,KAA7C,CAAdlsB;;;QAOIsR,WAAW,GAAGxQ,MAAM,CAAC,IAAD,EA/BkC;;OAiCvD,IAAIZ,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGgL,KAAK,CAACpP,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;UAC7CpC,QAAQ,GAAGqN,KAAK,CAACjL,CAAD;AACtBoR,IAAAA,WAAW,CAACxT,QAAD,CAAXwT,GAAwB;AACtBnS,MAAAA,GAAG,EAAEysB,YAAY,CAAC9tB,QAAD,CADK;AAEtBsB,MAAAA,GAAG,EAAEysB,YAAY,CAAC/tB,QAAD,CAFK;AAGtB8B,MAAAA,UAAU,EAAE,IAHU;AAItBD,MAAAA,YAAY,EAAE;AAJQ,KAAxB2R;AAnC0D,GAAA;;;OA4CvD,IAAIpR,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG8rB,OAAO,CAAClwB,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;UAC/C6S,UAAU,GAAGkZ,OAAO,CAAC/rB,CAAD;AAC1BoR,IAAAA,WAAW,CAACyB,UAAD,CAAXzB,GAA0B;AACxBhS,MAAAA,KAAK,EAAEwsB,kBAAkB,CAAC/Y,UAAD,CADD;AAExBhD,MAAAA,QAAQ,EAAE,IAFc;AAGxBpQ,MAAAA,YAAY,EAAE;AAHU,KAA1B2R;;;AAOFvQ,EAAAA,gBAAgB,CAACmrB,iBAAiB,CAACxvB,SAAnB,EAA8B4U,WAA9B,CAAhBvQ;SACOmrB;;;AAET,MAAMC,iBAAiB,GAAGJ,wBAAwB,CAACtH,WAAD,EAAczjB,mBAAmB,CAACwjB,8BAAD,CAAjC,EAAmE,EAAnE,CAAlD;AACA7jB,MAAM,CAACwrB,iBAAD,CAANxrB;AACAS,IAAI,CAAC+qB,iBAAiB,CAACzvB,SAAnB,CAAJ0E;AAEA;;;;;;;AAMA,SAASgrB,KAAT,CAAenR,MAAf,EAAuBoR,IAAvB,EAA6BtsB,UAA7B,EAAyC;MACnCvC,SAAS,CAACzB,MAAVyB,KAAqB,GAAG;WACnBiuB,gBAAgB,CAACzD,QAAjByD,CAA0BxQ,MAA1BwQ;;;EAGkC;QACrCjuB,SAAS,CAACzB,MAAVyB,KAAqB,GAAG;AAC1BkD,MAAAA,MAAM,CAACD,IAAPC,gHAAAA;;;QAGE,CAACsC,WAAW,CAACjD,UAAD,GAAc;YACtB;AACJZ,QAAAA,GADI;AAEJC,QAAAA,GAFI;AAGJO,QAAAA,YAHI;AAIJoQ,QAAAA;AAJI,UAKFhQ;AACJW,MAAAA,MAAM,CAACH,MAAPG,CAAc,CAACvB,GAAD,IAAQ,CAACC,GAAvBsB,6EAAAA;AACAA,MAAAA,MAAM,CAACH,MAAPG,CAAcf,YAAY,KAAK,KAA/Be,sFAAAA;AACAA,MAAAA,MAAM,CAACH,MAAPG,CAAcqP,QAAQ,KAAK,KAA3BrP,kFAAAA;;;;SAIG4rB,+BAA+B,CAACrR,MAAD,EAASoR,IAAT,EAAerpB,WAAW,CAACjD,UAAD,CAAXiD,GAA0B,IAA1BA,GAAiCjD,UAAU,CAACH,UAAXG,KAA0B,IAA1E;;;AAExC,SAASusB,+BAAT,CAAyC5S,IAAzC,EAA+CxV,GAA/C,EAAoDtE,UAApD,EAAgE;SACvD;AACLT,IAAAA,GAAG,GAAG;YACEwJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1B8P,MAAAA,aAAa,CAAC,IAAD,EAAOne,GAAP,CAAbme;aACO1Z,EAAE,CAAC4b,QAAH5b,CAAYzE,GAAZyE;AAJJ,KAAA;;AAOLvJ,IAAAA,GAAG,CAACK,QAAD,EAAW;YACNkJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;;MAEiB;cACnCJ,eAAe,GAAGC,kBAAkB;AAC1C1R,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC2R,gBAAlB3R,KAAuCyR,oEAAoExJ,MAAMjF,QAAQ,CAACQ,GAAD,GAAzHxD;AACAA,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4R,kBAAlB5R,8BAAkEyR,oDAAoDxJ,MAAMjF,QAAQ,CAACQ,GAAD,GAApIxD;;;YAGI6rB,kBAAkB,GAAGd,gBAAgB,CAACzD,QAAjByD,CAA0BhsB,QAA1BgsB;;UAEvBc,kBAAkB,KAAK5jB,EAAE,CAAC4b,QAAH5b,CAAYzE,GAAZyE,GAAkB;AAC3CA,QAAAA,EAAE,CAAC4b,QAAH5b,CAAYzE,GAAZyE,IAAmB4jB,kBAAnB5jB;;YAEIvF,SAAS,CAACuF,EAAE,CAACgb,OAAJ,GAAc;;AAEzB1B,UAAAA,YAAY,CAAC,IAAD,EAAO/d,GAAP,CAAZ+d;;;AAvBD,KAAA;;AA4BLriB,IAAAA,UA5BK;AA6BLD,IAAAA,YAAY,EAAE;AA7BT;;AAiCT;;;;;;;;AAOA,SAAS6sB,aAAT,CAAuBvR,MAAvB,EAA+BoR,IAA/B,EAAqCtsB,UAArC,EAAiD;EACJ;QACrC,CAACiD,WAAW,CAACjD,UAAD,GAAc;YACtB;AACJZ,QAAAA,GADI;AAEJC,QAAAA,GAFI;AAGJO,QAAAA,YAHI;AAIJoQ,QAAAA;AAJI,UAKFhQ;AACJW,MAAAA,MAAM,CAACH,MAAPG,CAAc,CAACvB,GAAD,IAAQ,CAACC,GAAvBsB,4EAAAA;AACAA,MAAAA,MAAM,CAACH,MAAPG,CAAcf,YAAY,KAAK,KAA/Be,qFAAAA;AACAA,MAAAA,MAAM,CAACH,MAAPG,CAAcqP,QAAQ,KAAK,KAA3BrP,iFAAAA;;;;SAIG4rB,+BAA+B,CAACrR,MAAD,EAASoR,IAAT,EAAe/oB,UAAU,CAACvD,UAAD,CAAVuD,GAAyBvD,UAAU,CAACH,UAAXG,KAA0B,IAAnDuD,GAA0D,IAAzE;;AAExC;;;;;;;AAOA,SAASkgB,IAAT,CAAciJ,QAAd,EAAwBC,OAAxB,EAAiC;QACzBvsB,GAAG,GAAG3C,SAAS,CAACzB;;MAElBoE,GAAG,GAAG,CAANA,IAAWA,GAAG,GAAG,GAAG;WACfqsB;AADT,SAEO;IACsC;AACzC9rB,MAAAA,MAAM,CAACD,IAAPC,CAAY,0DAAZA;;;UAGI,IAAI8H,SAAJ;;;AAIV;;;;AAIA;;;;AAIA;;;;;;;;AAMA,MAAM;AACJ3H,EAAAA,MAAM,EAAE8rB,QADJ;AAEJ7rB,EAAAA,MAAM,EAAE8rB,QAFJ;AAGJ7rB,EAAAA,gBAAgB,EAAE8rB,kBAHd;AAIJ7sB,EAAAA,cAAc,EAAE8sB,gBAJZ;AAKJnsB,EAAAA,MAAM,EAAEosB,QALJ;AAMJhvB,EAAAA,wBAAwB,EAAEivB,0BANtB;AAOJhsB,EAAAA,mBAAmB,EAAEisB,qBAPjB;AAQJhsB,EAAAA,cAAc,EAAEisB,gBARZ;AASJxuB,EAAAA,cAAc,EAAEyuB,gBATZ;AAUJhsB,EAAAA,IAAI,EAAEisB,MAVF;AAWJhsB,EAAAA,IAAI,EAAEisB,MAXF;AAYJhsB,EAAAA,cAAc,EAAEisB;AAZZ,IAaFnwB,MAbJ;AA0BA;;;;;;;AAOA;;;;;;;;AAQA,MAAMowB,yBAAyB,GAAGtxB,MAAM,CAAC,GAAD,CAANA,CAAYyH,QAAZzH,OAA2B,WAA7D;AACA;;AAEA;;;;;;AAMA;;AAEA,IAAIuxB,WAAJ;;AAEA,IAAI,OAAOvD,UAAP,KAAsB,QAA1B,EAAoC;AAClCuD,EAAAA,WAAW,GAAGvD,UAAduD;;;AAGF,SAASC,aAAT,GAAyB;MACnB,OAAOD,WAAP,KAAuB,UAAU;WAC5BA;;;MAGL;;AAEFrwB,IAAAA,MAAM,CAAC6C,cAAP7C,CAAsBA,MAAM,CAACT,SAA7BS,EAAwC,WAAxCA,EAAqD;AACnDgC,MAAAA,GAAG,EAAE,YAAY;eACR;AAF0C,OAAA;AAInDQ,MAAAA,YAAY,EAAE;AAJqC,KAArDxC,EAFE;;;;AAWFqwB,IAAAA,WAAW,GAAGE,SAAdF,CAXE;;WAaKrwB,MAAM,CAACT,SAAPS,CAAiBuwB;AAb1B,IAcE,OAAOC,EAAP,EAAW;AAdb,YAeU;;;QAGJ,OAAOH,WAAP,KAAuB,aAAa;AACtCA,MAAAA,WAAW,GAAG5I,MAAd4I;;;;SAIGA;;AAET;;;;;;;;AAQA,MAAMI,aAAa,GAAGH,aAAa,EAAnC;;AAEA,IAAI,CAACG,aAAa,CAACC,eAAnB,EAAoC;AAClC1wB,EAAAA,MAAM,CAAC6C,cAAP7C,CAAsBywB,aAAtBzwB,EAAqC,iBAArCA,EAAwD;AACtDmC,IAAAA,KAAK,EAAEstB,QAAQ,CAAC,IAAD;AADuC,GAAxDzvB;;;AAKF,MAAM2wB,YAAY,GAAGF,aAAa,CAACC,eAAnC;AA2DA;;AAEA;;;;;;;AAMA;;;;;;AAMA,SAASE,KAAT,CAAe9S,MAAf,EAAuBnd,QAAvB,EAAiCiC,UAAjC,EAA6C;EACA;QACrCvC,SAAS,CAACzB,MAAVyB,KAAqB,GAAG;AAC1BkD,MAAAA,MAAM,CAACD,IAAPC,2DAAAA;;;;EAIuC;AACzCA,IAAAA,MAAM,CAACN,SAAPM,CAAiB,CAACX,UAAD,IAAesD,UAAU,CAACtD,UAAU,CAACZ,GAAZ,CAAzB,IAA6CkE,UAAU,CAACtD,UAAU,CAACX,GAAZ,CAAxEsB,sBAA8GgD,QAAQ,CAAC5F,QAAD,mBAA4Bmd,mHAAlJva;;QAEI4C,UAAU,CAACvD,UAAD,CAAVuD,IAA0BD,UAAU,CAACtD,UAAU,CAACX,GAAZ,GAAkB;AACxDsB,MAAAA,MAAM,CAACH,MAAPG,CAAc4C,UAAU,CAACvD,UAAD,CAAVuD,IAA0BD,UAAU,CAACtD,UAAU,CAACZ,GAAZ,CAAlDuB,iCAAmGgD,QAAQ,CAAC5F,QAAD,4BAAqCmd,oEAAhJva;;;;QAIEstB,IAAI,GAAGC,2BAA2B,CAAChT,MAAD,EAfG;;MAiBvC3X,UAAU,CAACvD,UAAD,CAAVuD,KAA2BD,UAAU,CAACtD,UAAU,CAACZ,GAAZ,CAAVkE,IAA8BA,UAAU,CAACtD,UAAU,CAACX,GAAZ,CAAnEkE,GAAsF;;;AAGxF0qB,IAAAA,IAAI,CAAC7iB,KAAL6iB,CAAWlwB,QAAXkwB,EAAqBE,MAArBF,GAA8B3qB,UAAU,CAACtD,UAAU,CAACX,GAAZ,CAAViE,GAA6B,CAA7BA,GAAiC,CAA/D2qB;WACOG,8BAA8B,CAAClT,MAAD,EAASnd,QAAT,EAAmBiC,UAAnB;AAJvC,SAKO;;AAELiuB,IAAAA,IAAI,CAAC7iB,KAAL6iB,CAAWlwB,QAAXkwB,EAAqBE,MAArBF,GAA8B,CAA9BA;WACOI,8BAA8B,CAACnT,MAAD,EAASnd,QAAT,EAAmBiC,UAAnB;;;;AAIzC,SAASquB,8BAAT,CAAwCjb,KAAxC,EAA+CjP,GAA/C,EAAoDnE,UAApD,EAAgE;SACvD;AACLZ,IAAAA,GAAG,GAAG;YACEwJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;;UAEtBC,kBAAkB,CAAC7J,EAAD,GAAM;QACiB;gBACnC/D,IAAI,GAAG+D,EAAE,CAAC1J,GAAH0J,CAAO6Z,WAAP7Z,CAAmB/D;AAChCwE,UAAAA,QAAQ,MAAMxE,yDAAyDlB,QAAQ,CAACQ,GAAD,gFAAoFU,6DAA3J,EAA0N+D,EAA1N,CAARS;;;;;;AAMJiZ,MAAAA,aAAa,CAAC,IAAD,EAAOne,GAAP,CAAbme;aACO1Z,EAAE,CAACqc,QAAHrc,CAAYzE,GAAZyE;AAdJ,KAAA;;AAiBLvJ,IAAAA,GAAG,CAACK,QAAD,EAAW;YACNkJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;;MAEiB;cACnCJ,eAAe,GAAGC,kBAAkB;AAC1C1R,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC2R,gBAAlB3R,KAAuCyR,oEAAoExJ,MAAMjF,QAAQ,CAACQ,GAAD,GAAzHxD;AACAA,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4R,kBAAlB5R,8BAAkEyR,oDAAoDxJ,MAAMjF,QAAQ,CAACQ,GAAD,GAApIxD;;;AAGFiI,MAAAA,EAAE,CAACqc,QAAHrc,CAAYzE,GAAZyE,IAAmBlJ,QAAnBkJ,CATY;;UAWRvF,SAAS,CAACuF,EAAE,CAACgb,OAAJ,GAAc;;AAEzB1B,QAAAA,YAAY,CAAC,IAAD,EAAO/d,GAAP,CAAZ+d;;AA9BC,KAAA;;AAkCLriB,IAAAA,UAAU,EAAEoD,WAAW,CAACjD,UAAD,CAAXiD,GAA0B,IAA1BA,GAAiCjD,UAAU,CAACH;AAlCnD;;;AAsCT,MAAMyuB,wBAAN,SAAuC9L,gBAAvC,CAAwD;AACtDC,EAAAA,WAAW,CAAC7Z,EAAD,EAAKvJ,GAAL,EAAU;UACb,MAAM;UACNgE,SAAS,CAAC,KAAKkrB,UAAN,GAAmB;aACzBA,aAAa;AAClBtmB,QAAAA,qBAAqB,CAAC,MAAM;cACtB7E,QAAQ,CAAC,KAAKmrB,UAAN,GAAmB;kBACvB;AACJhvB,cAAAA;AADI,gBAEF;kBACE;AACJqkB,cAAAA,OAAO,EAAE4K,0BADL;AAEJlX,cAAAA,SAFI;AAGJkE,cAAAA;AAHI,gBAIF5S;AACJvJ,YAAAA,GAAG,CAAC7B,IAAJ6B,CAASiY,SAATjY,EAAoBE,KAApBF,EAT6B;;;;iBAaxBkvB,aAAa;;gBAEdnrB,QAAQ,CAACwF,EAAE,CAACgb,OAAJ,CAARxgB,IAAwBC,SAAS,CAACmrB,0BAAD,CAAjCprB,IAAiEoY,GAAG,GAAG,GAAG;;;;AAI5E7E,cAAAA,UAAU,CAAC/N,EAAD,CAAV+N;;;AApBe,SAAA,CAArB1O;;AAHJ;SA6BKsmB,aAAa;;;AAGpB1L,EAAAA,KAAK,CAACtjB,KAAD,EAAQ;UACLsjB;SACD0L,aAAa;;QAEd9wB,SAAS,CAACzB,MAAVyB,GAAmB,GAAG;WACnB8B,QAAQA;;;;AAvCqC;;AA6CxD,SAAS6uB,8BAAT,CAAwCzU,IAAxC,EAA8CxV,GAA9C,EAAmDnE,UAAnD,EAA+D;QACvD;AACJZ,IAAAA,GADI;AAEJC,IAAAA,GAFI;AAGJQ,IAAAA;AAHI,MAIFG;;MAEA,CAACsD,UAAU,CAAClE,GAAD,GAAO;IACuB;AACzCuB,MAAAA,MAAM,CAACD,IAAPC,yDAAoEgD,QAAQ,CAACQ,GAAD,QAAYwV,4DAA4DhW,QAAQ,CAACQ,GAAD,gBAA5JxD;;;UAGI,IAAI8H,SAAJ;;;SAGD;AACLrJ,IAAAA,GAAG,GAAG;MACuC;;AAEzCoT,QAAAA,eAAe,CAAC,IAAD,CAAfA;;;aAGKpT,GAAG,CAAC5B,IAAJ4B,CAAS,IAATA;AAPJ,KAAA;;AAULC,IAAAA,GAAG,CAACK,QAAD,EAAW;YACNkJ,EAAE,GAAG4J,eAAe,CAAC,IAAD;;MAEiB;cACnCJ,eAAe,GAAGC,kBAAkB;AAC1C1R,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC2R,gBAAlB3R,KAAuCyR,oEAAoExJ,MAAMjF,QAAQ,CAACQ,GAAD,GAAzHxD;AACAA,QAAAA,MAAM,CAACN,SAAPM,CAAiB,CAAC4R,kBAAlB5R,8BAAkEyR,oDAAoDxJ,MAAMjF,QAAQ,CAACQ,GAAD,GAApIxD;;;UAGEtB,KAAK;YACH0uB,YAAY,CAACU,wBAAwB;cACnCrM,EAAE,GAAGxZ,EAAE,CAACwc,GAAHxc,CAAOzE,GAAPyE;;cAEL3F,WAAW,CAACmf,EAAD,GAAM;AACnBA,YAAAA,EAAE,GAAGxZ,EAAE,CAACwc,GAAHxc,CAAOzE,GAAPyE,IAAc,IAAI0lB,wBAAJ,CAA6B1lB,EAA7B,EAAiCvJ,GAAjC,CAAnB+iB;AAJqC,WAAA;;;;;;AAWvCA,UAAAA,EAAE,CAACS,KAAHT,CAAS1iB,QAAT0iB;AACAA,UAAAA,EAAE,CAACnC,OAAHmC,CAAW,MAAM;AACf/iB,YAAAA,GAAG,CAAC7B,IAAJ6B,CAAS,IAATA,EAAeK,QAAfL;AADF,WAAA+iB;AAZF,eAeO;AACL/iB,UAAAA,GAAG,CAAC7B,IAAJ6B,CAAS,IAATA,EAAeK,QAAfL;;AAjBJ,aAmBkD;AAChDsB,QAAAA,MAAM,CAACD,IAAPC,oDAA+DgD,QAAQ,CAACQ,GAAD,QAAYyE,oDAAnFjI;;AAvCC,KAAA;;AA2CLd,IAAAA;AA3CK;;AA+CT;;;;;;;AAMA;;;;;;;AAMA,SAAS6uB,QAAT,CAAkB/U,IAAlB,EAAwBgV,UAAxB,EAAoC;;MAE9B,CAACrrB,UAAU,CAACqW,IAAD,CAAX,IAAqBgV,UAAU,IAAI,MAAM;UACrC,IAAIlmB,SAAJ;;;QAGF2C,KAAK,GAAGnK,mBAAmB,CAAC0tB,UAAD,EANC;;QAQ5BzT,MAAM,GAAGvB,IAAI,CAAChd;;OAEf,IAAIwD,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGgL,KAAK,CAACpP,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;UAC7CpC,QAAQ,GAAGqN,KAAK,CAACjL,CAAD;UAChByuB,SAAS,GAAGD,UAAU,CAAC5wB,QAAD;;QAExB,CAACuF,UAAU,CAACsrB,SAAD,GAAa;YACpB,IAAInmB,SAAJ;;;UAGF2gB,kBAAkB,GAAGprB,wBAAwB,CAACkd,MAAD,EAASnd,QAAT;UAC7CiC,UAAU,GAAG4uB,SAAS,CAACjV,IAAD,EAAO5b,QAAP,EAAiBqrB,kBAAjB;;QAExB,CAACnmB,WAAW,CAACjD,UAAD,GAAc;AAC5BC,MAAAA,cAAc,CAACib,MAAD,EAASnd,QAAT,EAAmBiC,UAAnB,CAAdC;;;;SAIG0Z,KA1B2B;;AA6BpC;;;;;;;;AAMA,MAAMkV,wBAAwB,GAAG,IAAIjT,GAAJ,EAAjC;AACA;;;;;AAKA,SAASkT,kBAAT,CAA4BnV,IAA5B,EAAkCsU,IAAlC,EAAwC;QAChCc,YAAY,GAAGhuB,MAAM,CAAC,IAAD;QACrBqK,KAAK,GAAG4jB,uBAAuB,CAACrV,IAAD,EAAOsU,IAAI,CAACgB,WAAZ;QAC/B/C,OAAO,GAAGgD,oBAAoB,CAACvV,IAAD,EAAOsU,IAAI,CAACkB,aAAZ;QAC9BC,MAAM,GAAGC,WAAW,CAAC1V,IAAD,EAAOsU,IAAI,CAACxK,IAAZ;QACpB6L,OAAO,GAAGC,YAAY,CAAC5V,IAAD,EAAOsU,IAAI,CAAC5B,KAAZ;QACtBhI,MAAM,GAAG4J,IAAI,CAAC5J;AACpBwK,EAAAA,wBAAwB,CAACxvB,GAAzBwvB,CAA6BlV,IAA7BkV,EAAmC;AACjCzjB,IAAAA,KADiC;AAEjC8gB,IAAAA,OAFiC;AAGjCzI,IAAAA,IAAI,EAAE2L,MAH2B;AAIjC/C,IAAAA,KAAK,EAAEiD,OAJ0B;AAKjCjL,IAAAA;AALiC,GAAnCwK;;OAQK,MAAM9wB,YAAYqN,OAAO;AAC5B2jB,IAAAA,YAAY,CAAChxB,QAAD,CAAZgxB,GAAyBf,KAAzBe;;;MAGEK,QAAQ;SACL,MAAMrxB,YAAYqxB,QAAQ;YACvBI,OAAO,GAAGJ,MAAM,CAACrxB,QAAD;;UAElByxB,OAAO,CAACC,QAAQ;;;;;AAKpBV,MAAAA,YAAY,CAAChxB,QAAD,CAAZgxB,GAAyBtL,IAAI,CAAC+L,OAAO,CAACE,OAAT,EAAkBF,OAAO,CAACG,MAA1B,CAA7BZ;;;;MAIAO,SAAS;SACN,MAAMvxB,YAAYuxB,SAAS;AAC9BP,MAAAA,YAAY,CAAChxB,QAAD,CAAZgxB,GAAyB1C,KAAzB0C;;;;AAIJL,EAAAA,QAAQ,CAAC/U,IAAD,EAAOoV,YAAP,CAARL;SACO/U;;;AAET,SAASuU,2BAAT,CAAqCvU,IAArC,EAA2C;SAClCkV,wBAAwB,CAACzvB,GAAzByvB,CAA6BlV,IAA7BkV;;;AAGT,SAASU,YAAT,CAAsBrU,MAAtB,EAA8BmR,KAA9B,EAAqC;MAC/BppB,WAAW,CAACopB,KAAD,CAAXppB,IAAsBhC,mBAAmB,CAACorB,KAAD,CAAnBprB,CAA2BjF,MAA3BiF,KAAsC,GAAG;WAC1D4G;AAF0B,GAAA;;;SAM5B/G,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,EAAesrB,KAAf;;;AAGf,SAASgD,WAAT,CAAqBnU,MAArB,EAA6BuI,IAA7B,EAAmC;MAC7BxgB,WAAW,CAACwgB,IAAD,CAAXxgB,IAAqBhC,mBAAmB,CAACwiB,IAAD,CAAnBxiB,CAA0BjF,MAA1BiF,KAAqC,GAAG;;AADhC,GAAA;;;SAM1BH,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,EAAe0iB,IAAf;;;AAGf,SAASuL,uBAAT,CAAiC9T,MAAjC,EAAyC9P,KAAzC,EAAgD;MAC1CnI,WAAW,CAACmI,KAAD,CAAXnI,IAAsBhC,mBAAmB,CAACmK,KAAD,CAAnBnK,CAA2BjF,MAA3BiF,KAAsC,GAAG;WAC1D4G;;;SAGF5G,mBAAmB,CAACmK,KAAD,CAAnBnK,CAA2BmB,MAA3BnB,CAAkC,CAAC2uB,SAAD,EAAY7xB,QAAZ,KAAyB;UAC1D8xB,IAAI,GAAG3oB,uBAAuB,CAACnJ,QAAD;AACpC6xB,IAAAA,SAAS,CAAC7xB,QAAD,CAAT6xB,GAAsB9uB,MAAM,CAAC;AAC3BqtB,MAAAA,MAAM,EAAE,CADmB;AAE3BvkB,MAAAA,IAAI,EAAE,KAFqB;AAG3BimB,MAAAA;AAH2B,KAAD,EAIzBzkB,KAAK,CAACrN,QAAD,CAJoB,CAA5B6xB;WAKOA;AAPF,GAAA3uB,EAQJF,MAAM,CAAC,IAAD,CARFE;;;AAWT,SAASiuB,oBAAT,CAA8BhU,MAA9B,EAAsCiU,aAAtC,EAAqD;MAC/ClsB,WAAW,CAACksB,aAAD,CAAXlsB,IAA8BksB,aAAa,CAACnzB,MAAdmzB,KAAyB,GAAG;WACrDtnB;;;SAGFsnB,aAAa,CAAC/sB,MAAd+sB,CAAqB,CAACW,WAAD,EAAc9c,UAAd,KAA6B;IACZ;AACzCrS,MAAAA,MAAM,CAACH,MAAPG,CAAc2C,UAAU,CAAC4X,MAAM,CAACve,SAAPue,CAAiBlI,UAAjBkI,CAAD,CAAxBva,gBAAsEua,MAAM,CAACrW,gCAAgCmO,2BAA2BkI,MAAM,CAACve,SAAPue,CAAiBlI,UAAjBkI,IAAxIva;;;AAGFmvB,IAAAA,WAAW,CAAC9c,UAAD,CAAX8c,GAA0B5U,MAAM,CAACve,SAAPue,CAAiBlI,UAAjBkI,CAA1B4U;WACOA;AANF,GAAAX,EAOJpuB,MAAM,CAAC,IAAD,CAPFouB;;AAUT;;;;;;;;AAMA,MAAMY,YAAY,GAAG,IAAIrxB,OAAJ,EAArB;;AAEA,SAASsxB,YAAT,CAAsBrW,IAAtB,EAA4BsW,qBAA5B,EAAmD;MAC7C7c,KAAK,GAAGlS,cAAc,CAACyY,IAAD;;MAEtBxW,MAAM,CAACiQ,KAAD,GAAS;UACX,IAAImQ,cAAJ,gCAAkD0M,0DAAlD;AAJyC,GAAA;;;MAQ7C3nB,0BAA0B,CAAC8K,KAAD,GAAS;UAC/BrP,CAAC,GAAGwE,+BAA+B,CAAC6K,KAAD;;IAEE;UACrCjQ,MAAM,CAACY,CAAD,GAAK;cACP,IAAIwf,cAAJ,mCAAqD0M,qFAArD;;AAL2B,KAAA;;;;;;AAarC7c,IAAAA,KAAK,GAAGrP,CAAC,KAAKqP,KAANrP,GAAcuiB,oBAAdviB,GAAqCA,CAA7CqP;;;SAGKA;;;AAGT,SAAS8c,kBAAT,CAA4BvW,IAA5B,EAAkCsU,IAAlC,EAAwCgC,qBAAxC,EAA+D;EAClB;;UAEnCE,QAAQ,GAAGxW,IAAI,CAAC9U,KAFmB;;;AAKzClE,IAAAA,MAAM,CAACH,MAAPG,CAAcgZ,IAAI,CAAC8I,WAAnB9hB,aAA2CwvB,yBAAyBA,gDAApExvB;;;QAGI;AACJkE,IAAAA;AADI,MAEFopB;MACA;AACF/K,IAAAA;AADE,MAEA+K;QACEmC,cAAc,GAAGlC,2BAA2B,CAACvU,IAAD;MAC9CvO,KAAK,GAAG;MACR8gB,OAAO,GAAG;MACVzI;MACA4I,KAAK,GAAG;MACRhI;;MAEA,CAACphB,WAAW,CAACmtB,cAAD,GAAkB;AAChChlB,IAAAA,KAAK,GAAGglB,cAAc,CAAChlB,KAAvBA;AACA8gB,IAAAA,OAAO,GAAGkE,cAAc,CAAClE,OAAzBA;AACAzI,IAAAA,IAAI,GAAG2M,cAAc,CAAC3M,IAAtBA;AACA4I,IAAAA,KAAK,GAAG+D,cAAc,CAAC/D,KAAvBA;AACAhI,IAAAA,MAAM,GAAG+L,cAAc,CAAC/L,MAAxBA;;;QAGIjR,KAAK,GAAGuG,IAAI,CAAChd;MACf;AACF0zB,IAAAA,iBADE;AAEFC,IAAAA,oBAFE;AAGFjP,IAAAA,gBAHE;AAIFkP,IAAAA,aAJE;AAKFvP,IAAAA;AALE,MAMA5N;QACEod,UAAU,GAAGR,YAAY,CAACrW,IAAD,EAAOsW,qBAAP;QACzBQ,QAAQ,GAAGD,UAAU,KAAKlK,oBAAfkK,GAAsCna,eAAe,CAACma,UAAD,EAAaP,qBAAb,CAArDO,GAA2F;QACtGE,WAAW,GAAGvtB,MAAM,CAACstB,QAAD,CAANttB,GAAmBipB,iBAAnBjpB,GAAuCstB,QAAQ,CAACE;QAC9DA,MAAM,GAAG3E,wBAAwB,CAAC0E,WAAD,EAAczvB,mBAAmB,CAACmK,KAAD,CAAjC,EAA0CnK,mBAAmB,CAACirB,OAAD,CAA7D;;MAEnC,CAAC/oB,MAAM,CAACstB,QAAD,GAAY;AACrBrlB,IAAAA,KAAK,GAAGtK,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,EAAe0vB,QAAQ,CAACrlB,KAAxB,EAA+BA,KAA/B,CAAdA;AACA8gB,IAAAA,OAAO,GAAGprB,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,EAAe0vB,QAAQ,CAACvE,OAAxB,EAAiCA,OAAjC,CAAhBA;AACAzI,IAAAA,IAAI,GAAGgN,QAAQ,CAAChN,IAATgN,IAAiBhN,IAAjBgN,GAAwB3vB,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,EAAe0vB,QAAQ,CAAChN,IAAxB,EAA8BA,IAA9B,CAA9BgN,GAAoEzzB,SAA3EymB;AACA4I,IAAAA,KAAK,GAAGvrB,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,EAAe0vB,QAAQ,CAACpE,KAAxB,EAA+BA,KAA/B,CAAdA;AACAgE,IAAAA,iBAAiB,GAAGA,iBAAiB,IAAII,QAAQ,CAACJ,iBAAlDA;AACAC,IAAAA,oBAAoB,GAAGA,oBAAoB,IAAIG,QAAQ,CAACH,oBAAxDA;AACAjP,IAAAA,gBAAgB,GAAGA,gBAAgB,IAAIoP,QAAQ,CAACpP,gBAAhDA;AACAkP,IAAAA,aAAa,GAAGA,aAAa,IAAIE,QAAQ,CAACF,aAA1CA;AACAvP,IAAAA,MAAM,GAAGA,MAAM,IAAIyP,QAAQ,CAACzP,MAA5BA;AACAkC,IAAAA,QAAQ,GAAGA,QAAQ,IAAIuN,QAAQ,CAACvN,QAAhCA;;;AAGF9X,EAAAA,KAAK,GAAGtK,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,EAAe6vB,UAAf,EAA2BxlB,KAA3B,CAAdA;;MAEI,CAACnI,WAAW,CAACohB,MAAD,GAAU;AACxBrjB,IAAAA,gBAAgB,CAACoS,KAAD,EAAQgR,iCAAiC,CAACC,MAAD,CAAzC,CAAhBrjB;;;MAGEiC,WAAW,CAACigB,QAAD,GAAY;;AAEzBA,IAAAA,QAAQ,GAAG/G,oBAAX+G;;;QAGI9M,GAAG,GAAG;AACVD,IAAAA,IAAI,EAAEwD,IADI;AAEV9U,IAAAA,IAFU;AAGV4e,IAAAA,IAHU;AAIV4I,IAAAA,KAJU;AAKVjhB,IAAAA,KALU;AAMV8gB,IAAAA,OANU;AAOVyE,IAAAA,MAPU;AAQVzN,IAAAA,QARU;AASVmN,IAAAA,iBATU;AAUVC,IAAAA,oBAVU;AAWVjP,IAAAA,gBAXU;AAYVkP,IAAAA,aAZU;AAaVvP,IAAAA;AAbU;;EAgB+B;AACzCpgB,IAAAA,MAAM,CAAC+Y,IAAI,CAAChd,SAAN,CAANiE;;;SAGKwV;;AAET;;;;;;AAMA,SAAS2F,sBAAT,CAAgC5F,IAAhC,EAAsC;MAChC,CAAC7S,UAAU,CAAC6S,IAAD,GAAQ;WACd;AAF2B,GAAA;;;MAMhCA,IAAI,CAACxZ,SAALwZ,YAA0BmQ,sBAAsB;WAC3C;AAP2B,GAAA;;;;;MAahCuK,OAAO,GAAG1a;;KAEX;QACG7N,0BAA0B,CAACuoB,OAAD,GAAW;YACjCC,gBAAgB,GAAGvoB,+BAA+B,CAACsoB,OAAD,EADjB;;;UAInCC,gBAAgB,KAAKD,SAAS;eACzB;;;AAGTA,MAAAA,OAAO,GAAGC,gBAAVD;;;QAGEA,OAAO,KAAKvK,sBAAsB;aAC7B;;AAbX,WAeS,CAACnjB,MAAM,CAAC0tB,OAAD,CAAP,KAAqBA,OAAO,GAAG3vB,cAAc,CAAC2vB,OAAD,CAA7C,GA9B2B;;;SAiC7B;;AAET;;;;;;AAKA,SAASxa,eAAT,CAAyBsD,IAAzB,EAA+BsW,qBAA/B,EAAsD;MAChD7Z,GAAG,GAAG2Z,YAAY,CAAC3wB,GAAb2wB,CAAiBpW,IAAjBoW;;MAEN9sB,WAAW,CAACmT,GAAD,GAAO;QAChB,CAAC2F,sBAAsB,CAACpC,IAAD,GAAQ;YAC3B,IAAIlR,SAAJ,IAAiBkR,wJAAjB;;;QAGJsU,IAAI,GAAG9K,0BAA0B,CAACxJ,IAAD;;QAEjC1W,WAAW,CAACgrB,IAAD,GAAQ;;AAErBA,MAAAA,IAAI,GAAG;AACL/K,QAAAA,QAAQ,EAAElmB,SADL;AAEL6H,QAAAA,IAAI,EAAE8U,IAAI,CAAC9U;AAFN,OAAPopB;;;AAMF7X,IAAAA,GAAG,GAAG8Z,kBAAkB,CAACvW,IAAD,EAAOsU,IAAP,EAAagC,qBAAqB,IAAItW,IAAI,CAAC9U,IAA3C,CAAxBuR;AACA2Z,IAAAA,YAAY,CAAC1wB,GAAb0wB,CAAiBpW,IAAjBoW,EAAuB3Z,GAAvB2Z;;;SAGK3Z;;AAoBT;;;AAEA,SAASE,eAAT,CAAyBpX,GAAzB,EAA8BkX,GAA9B,EAAmC;AACjC9U,EAAAA,cAAc,CAACpC,GAAD,EAAMkX,GAAG,CAACua,MAAJva,CAAWzZ,SAAjB,CAAd2E;;AAEF;AACA;;;AAEA,MAAMsvB,UAAU,GAAGvuB,WAAW,CAAC7E,IAAZ6E,CAAiBpB,mBAAmB,CAACwjB,8BAAD,CAApCpiB,EAAsE,CAAC+I,KAAD,EAAQrN,QAAR,KAAqB;QACtG0B,QAAQ,GAAGyH,uBAAuB,CAACnJ,QAAD;AACxCqN,EAAAA,KAAK,CAACrN,QAAD,CAALqN,GAAkB;AAChB+iB,IAAAA,MAAM,EAAE,CADQ;AAEhBvkB,IAAAA,IAAI,EAAE,KAFU;AAGhBimB,IAAAA,IAAI,EAAEpwB;AAHU,GAAlB2L;SAKOA;AAPU,CAAA/I,EAQhBtB,MAAM,CAAC,IAAD,CARUsB,CAAnB;AAUA;;;;;;;AAMA,IAAIqW,OAAJ;;AAEA,CAAC,UAAUA,OAAV,EAAmB;AAClBA,EAAAA,OAAO,CAACA,OAAO,CAAC,SAAD,CAAPA,GAAqB,CAAtB,CAAPA,GAAkC,SAAlCA;AACAA,EAAAA,OAAO,CAACA,OAAO,CAAC,WAAD,CAAPA,GAAuB,CAAxB,CAAPA,GAAoC,WAApCA;AACAA,EAAAA,OAAO,CAACA,OAAO,CAAC,cAAD,CAAPA,GAA0B,CAA3B,CAAPA,GAAuC,cAAvCA;AAHF,CAAA,EAIGA,OAAO,KAAKA,OAAO,GAAG,EAAf,CAJV;;AAMA,IAAI8C,GAAG,GAAG,CAAV;AACA;;AAEA,MAAMuV,mBAAmB,GAAG7sB,iBAAiB,CAAC,WAAD,EAAc,QAAd,CAA7C;;AAEA,SAASyc,QAAT,CAAkBvM,GAAlB,EAAuB5L,EAAvB,EAA2BkY,IAAI,GAAG,EAAlC,EAAsC;SAC7BlY,EAAE,CAAC3K,KAAH2K,CAAS4L,GAAT5L,EAAckY,IAAdlY;;;AAGT,SAAS6c,OAAT,CAAiBjR,GAAjB,EAAsBkY,IAAtB,EAA4B5sB,QAA5B,EAAsC;AACpC0U,EAAAA,GAAG,CAACkY,IAAD,CAAHlY,GAAY1U,QAAZ0U;;;AAGF,SAASkR,OAAT,CAAiBlR,GAAjB,EAAsBkY,IAAtB,EAA4B;SACnBlY,GAAG,CAACkY,IAAD;;;AAGZ,SAAS3V,UAAT,CAAoB/N,EAApB,EAAwB;AACtBooB,EAAAA,SAAS,CAACpoB,EAAD,CAATooB;;;AAEF,SAASC,YAAT,CAAsBroB,EAAtB,EAA0B;AACxBgQ,EAAAA,oBAAoB,CAAChQ,EAAD,CAApBgQ;AACAoY,EAAAA,SAAS,CAACpoB,EAAD,CAATooB;;;AAEF,SAAStb,QAAT,CAAkB9M,EAAlB,EAAsB;AACpBooB,EAAAA,SAAS,CAACpoB,EAAD,CAATooB;;AAEF;;;AAEA,SAASE,8BAAT,CAAwCtoB,EAAxC,EAA4C;QACpC;AACJ6P,IAAAA;AADI,MAEF7P;;MAEA6P,KAAK,KAAKC,OAAO,CAACyY,cAAc;UAC5B;AACJ/L,MAAAA,GADI;AAEJpF,MAAAA;AAFI,QAGFpX,GAJ8B;;AAMlCoX,IAAAA,GAAG,CAAC6C,KAAJ7C,GANkC;;SAQ7B,MAAM7b,OAAOihB,KAAK;AACrBA,MAAAA,GAAG,CAACjhB,GAAD,CAAHihB,CAASvC,KAATuC;;;AAGFgM,IAAAA,uBAAuB,CAACxoB,EAAD,CAAvBwoB,CAZkC;;AAclCC,IAAAA,uCAAuC,CAACzoB,EAAD,CAAvCyoB;AACAC,IAAAA,sCAAsC,CAAC1oB,EAAD,CAAtC0oB;;;AAGJ;;;AAGA,SAASva,QAAT,CAAkBnO,EAAlB,EAAsB;EACuB;AACzCjI,IAAAA,MAAM,CAACH,MAAPG,CAAciI,EAAE,CAAC6P,KAAH7P,KAAa8P,OAAO,CAAC6Y,SAArB3oB,IAAkCA,EAAE,CAAC6P,KAAH7P,KAAa8P,OAAO,CAACyY,YAArExwB,KAAsFiI,8BAAtFjI;;;AAGFuwB,EAAAA,8BAA8B,CAACtoB,EAAD,CAA9BsoB;;;;AAGF,SAASM,YAAT,CAAsB5oB,EAAtB,EAA0B;AACxBsoB,EAAAA,8BAA8B,CAACtoB,EAAD,CAA9BsoB;;;AAEF,SAAS3a,QAAT,CAAkBrX,GAAlB,EAAuBya,IAAvB,EAA6B5J,OAA7B,EAAsC;EACO;AACzCpP,IAAAA,MAAM,CAACN,SAAPM,CAAiBzB,GAAG,YAAYwlB,WAAhC/jB,mDAA8FzB,MAA9FyB;;;QAGIyV,GAAG,GAAGC,eAAe,CAACsD,IAAD;QACrB;AACJ8X,IAAAA,MADI;AAEJvb,IAAAA,IAFI;AAGJjN,IAAAA;AAHI,MAIF8G;AACJyL,EAAAA,GAAG,IAAI,CAAPA;QACM6H,eAAe,GAAG;;;AAGtB7H,IAAAA,GAHsB;AAItB/C,IAAAA,KAAK,EAAEC,OAAO,CAACC,OAJO;AAKtBqL,IAAAA,WAAW,EAAE,KALS;AAMtBJ,IAAAA,OAAO,EAAE,IANa;AAOtB6N,IAAAA,MAAM,EAAEruB,QAAQ,CAACquB,MAAD,CAPM;AAQtBvb,IAAAA,IARsB;AAStBE,IAAAA,GATsB;AAUtBnN,IAAAA,KAVsB;AAWtB/J,IAAAA,GAXsB;AAYtB2K,IAAAA,IAAI,EAAEhC,WAZgB;AAatBqF,IAAAA,OAAO,EAAEnM,MAAM,CAAC,IAAD,CAbO;AActBkkB,IAAAA,QAAQ,EAAElkB,MAAM,CAAC,IAAD,CAdM;AAetByjB,IAAAA,QAAQ,EAAEzjB,MAAM,CAAC,IAAD,CAfM;AAgBtBye,IAAAA,QAAQ,EAAE9W,kBAAkB,GAAG3H,MAAM,CAAC,IAAD,CAAT,GAAkB/D,SAhBxB;AAiBtB2jB,IAAAA,QAjBsB;AAkBtB0E,IAAAA,OAlBsB;AAmBtBC,IAAAA,OAnBsB;AAoBtB1X,IAAAA,QAAQ,EAAE9F,UApBY;AAqBtBiO,IAAAA,SAAS,EAAEjO,UArBW;AAsBtBoR,IAAAA,SAAS,EAAEpR,UAtBW;;AAwBtBiY,IAAAA,WAAW,EAAE/iB,SAxBS;AAyBtBsa,IAAAA,SAAS,EAAEta,SAzBW;AA0BtB8b,IAAAA,OAAO,EAAE9b,SA1Ba;AA2BtBgjB,IAAAA,GAAG,EAAEhjB,SA3BiB;AA4BtBooB,IAAAA,GAAG,EAAEpoB;AA5BiB;;EA+BmB;AACzCqmB,IAAAA,eAAe,CAAC1f,QAAhB0f,GAA2B,MAAM;2BACVjN,GAAG,CAACvR,SAASwe,eAAe,CAAC7H;AADpD,KAAA6H;AA5CkC,GAAA;;;AAkDpCD,EAAAA,eAAe,CAACC,eAAD,EAAkB1J,IAAlB,CAAfyJ,CAlDoC;;QAoD9BE,aAAa,GAAGD;AACtBG,EAAAA,aAAa,CAACF,aAAD,CAAbE;;;AAGF,SAASkO,UAAT,CAAoBxuB,GAApB,EAAyB;MACnBC,MAAM,CAACD,GAAD,CAANC,IAAe,CAACI,UAAU,CAACL,GAAD,CAA1BC,IAAmC,EAAE,aAAaD,GAAf,GAAqB;UACpD,IAAIuF,SAAJ,IAAiBvF,kBAAjB;;;;AAIV,SAASwiB,WAAT,CAAqBxiB,GAArB,EAA0B0F,EAA1B,EAA8B;AAC5BtE,EAAAA,cAAc,CAACpB,GAAD,EAAM6tB,mBAAN,EAA2BnoB,EAA3B,CAAdtE;;;AAEF,SAASkO,eAAT,CAAyBtP,GAAzB,EAA8B;QACtB0F,EAAE,GAAGnE,cAAc,CAACvB,GAAD,EAAM6tB,mBAAN;;EAEkB;AACzCW,IAAAA,UAAU,CAAC9oB,EAAD,CAAV8oB;;;SAGK9oB;;;AAET,SAASuE,wBAAT,CAAkCjK,GAAlC,EAAuC;QAC/ByuB,OAAO,GAAGltB,cAAc,CAACvB,GAAD,EAAM6tB,mBAAN;;EAEa;QACrC,CAAC9tB,WAAW,CAAC0uB,OAAD,GAAW;AACzBD,MAAAA,UAAU,CAACC,OAAD,CAAVD;;;;SAIGC;;;AAGT,SAASX,SAAT,CAAmBpoB,EAAnB,EAAuB;EACsB;AACzCjI,IAAAA,MAAM,CAACH,MAAPG,CAAciI,EAAE,CAAC1J,GAAH0J,YAAkB8b,WAAhC/jB,uCAAkFiI,gCAAlFjI;;;MAGEyC,QAAQ,CAACwF,EAAE,CAACgb,OAAJ,GAAc;UAClBhW,QAAQ,GAAGmW,eAAe,CAACnb,EAAD;AAChCgpB,IAAAA,eAAe,CAAChpB,EAAD,EAAKgF,QAAL,CAAfgkB;;;;AAIJ,SAASA,eAAT,CAAyBhpB,EAAzB,EAA6B+F,KAA7B,EAAoC;QAC5B;AACJmK,IAAAA,OADI;AAEJlL,IAAAA,QAAQ,EAAEc;AAFN,MAGF9F;AACJA,EAAAA,EAAE,CAACgF,QAAHhF,GAAc+F,KAAd/F,CALkC;;MAO9B+F,KAAK,CAAC3S,MAAN2S,GAAe,CAAfA,IAAoBD,KAAK,CAAC1S,MAAN0S,GAAe,GAAG;;;QAGpCA,KAAK,KAAKC,OAAO;YACbnG,EAAE,GAAGoN,kBAAkB,CAACjH,KAAD,CAAlBiH,GAA4BnH,qBAA5BmH,GAAoDjG;AAC/DkG,MAAAA,yBAAyB,CAACjN,EAAD,EAAKA,EAAL,EAAS,MAAM;;QAEK;AACzCoW,UAAAA,YAAY,CAAC,OAAD,EAAUpW,EAAV,CAAZoW;;AAHqB,OAAA,EAKtB,MAAM;;AAEPxW,QAAAA,EAAE,CAACsQ,OAAD,EAAUpK,KAAV,EAAiBC,KAAjB,CAAFnG;AAPuB,OAAA,EAQtB,MAAM;;QAEoC;AACzCyW,UAAAA,UAAU,CAAC,OAAD,EAAUrW,EAAV,CAAVqW;;AAXqB,OAAA,CAAzBpJ;;;;MAiBAjN,EAAE,CAAC6P,KAAH7P,KAAa8P,OAAO,CAAC6Y,WAAW;;;;;AAKlCM,IAAAA,mBAAmB,CAACjpB,EAAD,CAAnBipB;;;;AAIJ,SAASA,mBAAT,CAA6BjpB,EAA7B,EAAiC;QACzB;AACJkpB,IAAAA;AADI,MAEF3a;;MAEA2a,UAAU;AACZ1a,IAAAA,iBAAiB,CAACxO,EAAD,EAAKkpB,QAAL,CAAjB1a;;;AAGFgK,EAAAA,+BAA+B,CAACxY,EAAD,CAA/BwY;;;AAGF,IAAI2Q,cAAc,GAAG,EAArB;;AAEA,SAASC,qBAAT,GAAiC;AAC/B9S,EAAAA,kBAAkB,CAAChB,sBAAsB,CAAC+T,SAAxB,CAAlB/S;;EAE2C;AACzCve,IAAAA,MAAM,CAACN,SAAPM,CAAiBoxB,cAAc,CAAC/1B,MAAhC2E,mHAAyJoxB,iBAAzJpxB;;;QAGIuxB,GAAG,GAAGH,cAAc,CAACI,IAAfJ,CAAoB,CAACK,CAAD,EAAI5X,CAAJ,KAAU4X,CAAC,CAAC5W,GAAF4W,GAAQ5X,CAAC,CAACgB,GAAxCuW;AACZA,EAAAA,cAAc,GAAG,EAAjBA,CAR+B;;OAU1B,IAAI5xB,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG8xB,GAAG,CAACl2B,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;UAC3CyI,EAAE,GAAGspB,GAAG,CAAC/xB,CAAD;;QAEV;AACF6wB,MAAAA,SAAS,CAACpoB,EAAD,CAATooB;AADF,MAEE,OAAO5rB,KAAP,EAAc;UACVjF,CAAC,GAAG,CAAJA,GAAQC,KAAK;;YAEX2xB,cAAc,CAAC/1B,MAAf+1B,KAA0B,GAAG;AAC/B9pB,UAAAA,qBAAqB,CAAC+pB,qBAAD,CAArB/pB;;;AAGFtF,QAAAA,cAAc,CAAC9E,KAAf8E,CAAqBovB,cAArBpvB,EAAqCH,YAAY,CAAChF,IAAbgF,CAAkB0vB,GAAlB1vB,EAAuBrC,CAAC,GAAG,CAA3BqC,CAArCG;AAPY,OAAA;;;AAWdwc,MAAAA,gBAAgB,CAACjB,sBAAsB,CAAC+T,SAAxB,CAAhB9S,CAXc;;;YAcR/Z,MAdQ;;;;AAkBlB+Z,EAAAA,gBAAgB,CAACjB,sBAAsB,CAAC+T,SAAxB,CAAhB9S;;;AAGF,SAASvG,oBAAT,CAA8BhQ,EAA9B,EAAkC;QAC1B;AACJ6P,IAAAA;AADI,MAEF7P;;MAEA6P,KAAK,KAAKC,OAAO,CAAC6Y,WAAW;WAAA;;;AAIjC3oB,EAAAA,EAAE,CAAC6P,KAAH7P,GAAW8P,OAAO,CAAC6Y,SAAnB3oB,CATgC;;QAW1B;AACJ2oB,IAAAA;AADI,MAEFpa;;MAEAoa,WAAW;AACbna,IAAAA,iBAAiB,CAACxO,EAAD,EAAK2oB,SAAL,CAAjBna;;;QAGI;AACJiZ,IAAAA;AADI,MAEFznB,EAAE,CAACwN;;MAEH,CAACnT,WAAW,CAACotB,iBAAD,GAAqB;IACQ;AACzCrR,MAAAA,YAAY,CAAC,mBAAD,EAAsBpW,EAAtB,CAAZoW;;;AAGFrE,IAAAA,uBAAuB,CAAC/R,EAAD,EAAKynB,iBAAL,CAAvB1V;;IAE2C;AACzCsE,MAAAA,UAAU,CAAC,mBAAD,EAAsBrW,EAAtB,CAAVqW;;;;;AAKN,SAASmS,uBAAT,CAAiCxoB,EAAjC,EAAqC;EACQ;AACzCjI,IAAAA,MAAM,CAACH,MAAPG,CAAciI,EAAE,CAAC6P,KAAH7P,KAAa8P,OAAO,CAACyY,YAAnCxwB,KAAoDiI,sBAApDjI;;;MAGE0C,SAAS,CAACuF,EAAE,CAACgb,OAAJ,GAAc;;;;;AAKzBhb,IAAAA,EAAE,CAACgb,OAAHhb,GAAa,IAAbA;;;AAGFA,EAAAA,EAAE,CAAC6P,KAAH7P,GAAW8P,OAAO,CAACyY,YAAnBvoB,CAbmC;;QAe7B;AACJuoB,IAAAA;AADI,MAEFha;;MAEAga,cAAc;AAChB/Z,IAAAA,iBAAiB,CAACxO,EAAD,EAAKuoB,YAAL,CAAjB/Z;;;QAGI;AACJkZ,IAAAA;AADI,MAEF1nB,EAAE,CAACwN;;MAEH,CAACnT,WAAW,CAACqtB,oBAAD,GAAwB;IACK;AACzCtR,MAAAA,YAAY,CAAC,sBAAD,EAAyBpW,EAAzB,CAAZoW;;;AAGFrE,IAAAA,uBAAuB,CAAC/R,EAAD,EAAK0nB,oBAAL,CAAvB3V;;IAE2C;AACzCsE,MAAAA,UAAU,CAAC,sBAAD,EAAyBrW,EAAzB,CAAVqW;;;;;AAKN,SAASoS,uCAAT,CAAiDzoB,EAAjD,EAAqD;QAC7C;AACJsQ,IAAAA,SAAS,EAAEmZ;AADP,MAEFzpB,GAH+C;;OAK9C,IAAIzI,CAAC,GAAGkyB,wBAAwB,CAACr2B,MAAzBq2B,GAAkC,GAAGlyB,CAAC,IAAI,GAAGA,CAAC,IAAI,GAAG;UAC1DjB,GAAG,GAAGmzB,wBAAwB,CAAClyB,CAAD,CAAxBkyB,CAA4BnzB,IADwB;;;;;;;QAQ5D,CAAC+D,WAAW,CAAC/D,GAAD,GAAO;YACfozB,OAAO,GAAG9f,eAAe,CAACtT,GAAD;AAC/BgyB,MAAAA,8BAA8B,CAACoB,OAAD,CAA9BpB;;;;;AAKN,SAASI,sCAAT,CAAgD1oB,EAAhD,EAAoD;QAC5C;AACJmN,IAAAA,SAAS,EAAEwc;AADP,MAEF3pB;AACJ4pB,EAAAA,6BAA6B,CAACD,eAAD,CAA7BC;;AAEF;;;;;;;;;AASA,SAASA,6BAAT,CAAuCpkB,MAAvC,EAA+C;OACxC,IAAIjO,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGgO,MAAM,CAACpS,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;UAC9CwJ,KAAK,GAAGyE,MAAM,CAACjO,CAAD;;QAEhB,CAACgD,MAAM,CAACwG,KAAD,CAAP,IAAkBpI,SAAS,CAACoI,KAAK,CAACiE,QAAP,CAA3B,IAA+C,CAAC3K,WAAW,CAAC0G,KAAK,CAACzK,GAAP,GAAa;;UAEtE+D,WAAW,CAAC0G,KAAK,CAACwM,IAAP,GAAc;;AAE3Bqc,QAAAA,6BAA6B,CAAC7oB,KAAK,CAACiE,QAAP,CAA7B4kB;AAFF,aAGO;;AAELtB,QAAAA,8BAA8B,CAAC1e,eAAe,CAAC7I,KAAK,CAACzK,GAAP,CAAhB,CAA9BgyB;;;;;AAKR;AACA;AACA;;;AAGA,SAAShR,eAAT,CAAyBtX,EAAzB,EAA6B;AAC3BA,EAAAA,EAAE,CAACgF,QAAHhF,GAAcd,UAAdc;AACA+b,EAAAA,yBAAyB,CAACnnB,IAA1BmnB,CAA+B/b,EAAE,CAACkQ,OAAlC6L,EAA2C,EAA3CA,EAF2B;;AAI3B0M,EAAAA,uCAAuC,CAACzoB,EAAD,CAAvCyoB;;;AAEF,SAASvN,mBAAT,CAA6Blb,EAA7B,EAAiC;MAC3B,CAACA,EAAE,CAACob,aAAa;AACnBpb,IAAAA,EAAE,CAACob,WAAHpb,GAAiB,IAAjBA;;QAEImpB,cAAc,CAAC/1B,MAAf+1B,KAA0B,GAAG;AAC/B9pB,MAAAA,qBAAqB,CAAC+pB,qBAAD,CAArB/pB;;;AAGF9F,IAAAA,SAAS,CAAC3E,IAAV2E,CAAe4vB,cAAf5vB,EAA+ByG,EAA/BzG;;;;AAIJ,SAASswB,kBAAT,CAA4B7pB,EAA5B,EAAgC;MAC1BQ,SAAS,GAAGR;;SAET,CAACzF,MAAM,CAACiG,SAAD,GAAa;QACrB,CAACnG,WAAW,CAACmG,SAAS,CAACgN,GAAVhN,CAAcmnB,aAAf,GAA+B;aACtCnnB;;;AAGTA,IAAAA,SAAS,GAAGA,SAAS,CAACH,KAAtBG;;;AA+BJ;AACA;;;AAEA,SAAS4M,cAAT,CAAwBpN,EAAxB,EAA4BgF,QAA5B,EAAsC;EACO;AACzCjN,IAAAA,MAAM,CAACN,SAAPM,CAAiB4C,UAAU,CAACqF,EAAE,CAAC4W,QAAJ,CAA3B7e,4EAAAA;;;QAGI;AACJ6e,IAAAA,QAAQ,EAAEkT;AADN,MAEF9pB;QACE4W,QAAQ,GAAG5W,EAAE,CAAC4W,QAAH5W,GAAc7H,MAAM,CAAC,IAAD;;OAEhC,IAAIZ,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGwN,QAAQ,CAAC5R,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;UAChDwJ,KAAK,GAAGiE,QAAQ,CAACzN,CAAD;;QAElBgD,MAAM,CAACwG,KAAD,GAAS;;;;UAIb;AACJE,MAAAA;AADI,QAEFF;UACE4P,QAAQ,GAAG1P,IAAI,CAACe,KAALf,IAAcA,IAAI,CAACe,KAALf,CAAW/D,IAAzB+D,IAAiC;UAC5CuE,MAAM,GAAGoR,QAAQ,CAACjG,QAAD,CAARiG,GAAqBA,QAAQ,CAACjG,QAAD,CAARiG,IAAsB,GAXJ;;;;;AAgBtD7V,IAAAA,KAAK,CAACxF,GAANwF,OAAgB4P,YAAY5P,KAAK,CAACxF,KAAlCwF;AACAxH,IAAAA,SAAS,CAAC3E,IAAV2E,CAAeiM,MAAfjM,EAAuBwH,KAAvBxH;;;MAGEkB,SAAS,CAACuF,EAAE,CAACgb,OAAJ,GAAc;;;UAGnB+O,OAAO,GAAGvxB,IAAI,CAACsxB,QAAD;;QAEhBC,OAAO,CAAC32B,MAAR22B,KAAmBvxB,IAAI,CAACoe,QAAD,CAAJpe,CAAepF,QAAQ;AAC5C6nB,MAAAA,oBAAoB,CAACjb,EAAD,CAApBib;;;;SAIG,IAAI1jB,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGuyB,OAAO,CAAC32B,QAAQmE,CAAC,GAAGC,KAAKD,CAAC,IAAI,GAAG;YAC/CgE,GAAG,GAAGwuB,OAAO,CAACxyB,CAAD;;UAEf8C,WAAW,CAACuc,QAAQ,CAACrb,GAAD,CAAT,CAAXlB,IAA8ByvB,QAAQ,CAACvuB,GAAD,CAARuuB,CAAc12B,MAAd02B,KAAyBlT,QAAQ,CAACrb,GAAD,CAARqb,CAAcxjB,QAAQ;AAC/E6nB,QAAAA,oBAAoB,CAACjb,EAAD,CAApBib;;;;YAII+O,SAAS,GAAGF,QAAQ,CAACvuB,GAAD;YACpBiK,MAAM,GAAGoR,QAAQ,CAACrb,GAAD;;WAElB,IAAI4J,CAAC,GAAG,CAAR,EAAWqkB,CAAC,GAAG5S,QAAQ,CAACrb,GAAD,CAARqb,CAAcxjB,QAAQ+R,CAAC,GAAGqkB,GAAGrkB,CAAC,IAAI,GAAG;YACnD6kB,SAAS,CAAC7kB,CAAD,CAAT6kB,KAAiBxkB,MAAM,CAACL,CAAD,GAAK;AAC9B8V,UAAAA,oBAAoB,CAACjb,EAAD,CAApBib;;;;;;;;AAOV,SAAShO,yBAAT,CAAmCjN,EAAnC,EAAuCK,KAAvC,EAA8C4pB,GAA9C,EAAmDlQ,GAAnD,EAAwDmQ,IAAxD,EAA8D;MACxD1tB;AACJytB,EAAAA,GAAG;;MAEC;AACFlQ,IAAAA,GAAG;AADL,IAEE,OAAOpZ,CAAP,EAAU;AACVnE,IAAAA,KAAK,GAAGhI,MAAM,CAACmM,CAAD,CAAdnE;AAHF,YAIU;AACR0tB,IAAAA,IAAI;;QAEA,CAAC7vB,WAAW,CAACmC,KAAD,GAAS;AACvBA,MAAAA,KAAK,CAAC+D,OAAN/D,GAAgBA,KAAK,CAAC+D,OAAN/D,IAAiB8D,sBAAsB,CAACN,EAAD,CAAvDxD;YACM2tB,eAAe,GAAG5vB,MAAM,CAAC8F,KAAD,CAAN9F,GAAgBnG,SAAhBmG,GAA4BsvB,kBAAkB,CAACxpB,KAAD;;UAElEhG,WAAW,CAAC8vB,eAAD,GAAmB;cAC1B3tB,MAD0B;;;AAIlC8a,MAAAA,eAAe,CAACtX,EAAD,CAAfsX,CARuB;;MAUoB;AACzClB,QAAAA,YAAY,CAAC,eAAD,EAAkB+T,eAAlB,CAAZ/T;AAXqB,OAAA;;;YAejBuR,aAAa,GAAGwC,eAAe,CAAC3c,GAAhB2c,CAAoBxC;AAC1C5V,MAAAA,uBAAuB,CAACoY,eAAD,EAAkBxC,aAAlB,EAAiC,CAACnrB,KAAD,EAAQA,KAAK,CAAC+D,OAAd,CAAjC,CAAvBwR;;MAE2C;AACzCsE,QAAAA,UAAU,CAAC,eAAD,EAAkB8T,eAAlB,CAAV9T;;;;;AAMR;;;;;;;;AAMA,MAAM;AACJvO,EAAAA,WADI;AAEJC,EAAAA,YAFI;AAGJC,EAAAA,WAHI;AAIJC,EAAAA;AAJI,IAKFkU,IAAI,CAACpoB,SALT;AAOA;;;;;;;AAMA,MAAMq2B,cAAc,GAAG9uB,iBAAiB,CAAC,YAAD,EAAe,QAAf,CAAxC;AACA,MAAM+uB,iBAAiB,GAAG/uB,iBAAiB,CAAC,eAAD,EAAkB,QAAlB,CAA3C;;AAEA,SAASgvB,YAAT,CAAsB3iB,IAAtB,EAA4BzK,IAA5B,EAAkC;EACW;AACzCnF,IAAAA,MAAM,CAACH,MAAPG,CAAc4P,IAAd5P,wDAAAA;;;QAGI6H,EAAE,GAAG/D,cAAc,CAAC8L,IAAD,EAAOzK,IAAP;;MAErB,CAAC7C,WAAW,CAACuF,EAAD,GAAM;AACpBA,IAAAA,EAAE;;;SAGG+H,KAXyB;;AAalC;;;AAGAzP,MAAM,CAACikB,IAAI,CAACpoB,SAAN,EAAiB;AACrB+T,EAAAA,WAAW,CAACQ,QAAD,EAAW;UACdiiB,YAAY,GAAGziB,WAAW,CAAClT,IAAZkT,CAAiB,IAAjBA,EAAuBQ,QAAvBR;WACdwiB,YAAY,CAACC,YAAD,EAAeH,cAAf;AAHA,GAAA;;AAMrBriB,EAAAA,YAAY,CAACO,QAAD,EAAWD,aAAX,EAA0B;UAC9BmiB,YAAY,GAAGziB,YAAY,CAACnT,IAAbmT,CAAkB,IAAlBA,EAAwBO,QAAxBP,EAAkCM,aAAlCN;WACduiB,YAAY,CAACE,YAAD,EAAeJ,cAAf;AARA,GAAA;;AAWrBpiB,EAAAA,WAAW,CAACO,QAAD,EAAW;UACdkiB,WAAW,GAAGziB,WAAW,CAACpT,IAAZoT,CAAiB,IAAjBA,EAAuBO,QAAvBP;WACbsiB,YAAY,CAACG,WAAD,EAAcJ,iBAAd;AAbA,GAAA;;AAgBrBpiB,EAAAA,YAAY,CAACK,QAAD,EAAWC,QAAX,EAAqB;UACzBmiB,YAAY,GAAGziB,YAAY,CAACrT,IAAbqT,CAAkB,IAAlBA,EAAwBK,QAAxBL,EAAkCM,QAAlCN;AACrBqiB,IAAAA,YAAY,CAACI,YAAD,EAAeL,iBAAf,CAAZC;AACAA,IAAAA,YAAY,CAAChiB,QAAD,EAAW8hB,cAAX,CAAZE;WACOI;;;AApBY,CAAjB,CAANxyB;AAwHA;;;;;;;AAMA;;;;;;;;;;;;;;AAaA,SAASyyB,6BAAT,CAAuC5Z,IAAvC,EAA6C5J,OAA7C,EAAsD;MAChDyjB;;QAEE;AACJpoB,IAAAA,KADI;AAEJulB,IAAAA,MAAM,EAAE8C;AAFJ,MAGFpd,eAAe,CAACsD,IAAD;QACb+Z,iBAAiB,GAAG;AACxBxd,IAAAA,IAAI,EAAE,MADkB;AAExBub,IAAAA,MAAM,EAAE,IAFgB;AAGxBxoB,IAAAA,KAAK,EAAE;AAHiB;;MAMtB1F,UAAU,CAACwM,OAAD,CAAVxM,IAAuB,CAACJ,MAAM,CAAC4M,OAAD,GAAW;UACrC;AACJmG,MAAAA;AADI,QAEFnG;;QAEAmG,IAAI,KAAK,UAAU;AACrBwd,MAAAA,iBAAiB,CAACxd,IAAlBwd,GAAyBxd,IAAzBwd;;;;SAIGF,EAAE,GAAG,cAAcC,WAAd,CAA0B;AACpChR,IAAAA,WAAW,GAAG;;AAEZlM,MAAAA,QAAQ,CAAC,IAAD,EAAOoD,IAAP,EAAa+Z,iBAAb,CAARnd;;MAE2C;AACzCvC,QAAAA,kCAAkC,CAAC,IAAD,EAAOnM,WAAP,CAAlCmM;;;;AAIJqc,IAAAA,iBAAiB,GAAG;YACZznB,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1Bye,MAAAA,YAAY,CAACroB,EAAD,CAAZqoB;;;AAGFX,IAAAA,oBAAoB,GAAG;YACf1nB,EAAE,GAAG4J,eAAe,CAAC,IAAD;AAC1Bgf,MAAAA,YAAY,CAAC5oB,EAAD,CAAZ4oB;;;AAGFmC,IAAAA,wBAAwB,CAACl0B,QAAD,EAAWgpB,QAAX,EAAqB/oB,QAArB,EAA+B;UACjD+oB,QAAQ,KAAK/oB,UAAU;;;;;YAKrB3B,QAAQ,GAAG+I,uBAAuB,CAACrH,QAAD;;UAEpCwD,WAAW,CAACmI,KAAK,CAACrN,QAAD,CAAN,GAAmB;;;;;UAK9B,CAACuJ,iBAAiB,CAAC,IAAD,EAAO7H,QAAP,GAAkB;;;;;;;AAba,OAAA;;;;WAwBhD1B,YAAY2B;;;AA5CiB,GAA/B8zB;;AAiDPA,EAAAA,EAAE,CAACI,kBAAHJ,GAAwBvxB,QAAQ,CAACzE,IAATyE,CAAchB,mBAAmB,CAACmK,KAAD,CAAjCnJ,EAA0ClE,QAAQ,IAAIqN,KAAK,CAACrN,QAAD,CAALqN,CAAgBykB,IAAtE5tB,CAjDjBuxB,EAiD8FA;;AAIvG;;;;"}